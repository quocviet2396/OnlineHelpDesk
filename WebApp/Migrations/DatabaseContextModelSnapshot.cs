// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "8jLWYeRf",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$nDTCmHzltYL.H6cyu0o.JORMweVjPqPdAQW3xreMdRaJgcy.LDDfe",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "qBFy3tZs",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$juBbHAaxXZfCYtGxlw.1Ruo8GlDJpJ5GUwP4jmQYYbZYXw.5O78qm",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "rHdcF3Gq",
                            Email = "user@gmail.com",
                            Password = "$2a$11$jz.O8dtzBrJVOM0pj4eUf.Vhsn/uaCN1vWxgVhGYzk2qciBqE9GuW",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "49812 Lamar Ridge, East Arimouth, Chile",
                            City = "Lowellfort",
                            DateOfBirth = new DateTime(2022, 11, 20, 5, 25, 28, 926, DateTimeKind.Local).AddTicks(523),
                            Email = "Augustus.Littel@gmail.com",
                            FirstName = "Augustus",
                            FullName = "Augustus Littel",
                            Gender = false,
                            LastName = "Littel",
                            Phone = "611.937.8337 x0584",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1160.jpg",
                            Student_code = "Student7yNIrxuA"
                        },
                        new
                        {
                            Id = 2,
                            Address = "40832 Ole Centers, Port Gracieview, American Samoa",
                            City = "Luraville",
                            DateOfBirth = new DateTime(2023, 1, 26, 6, 37, 0, 307, DateTimeKind.Local).AddTicks(9731),
                            Email = "Jada.Cruickshank@hotmail.com",
                            FirstName = "Jada",
                            FullName = "Jada Cruickshank",
                            Gender = false,
                            LastName = "Cruickshank",
                            Phone = "676.578.2903",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/125.jpg",
                            Student_code = "Studentqk7JY1mZ"
                        },
                        new
                        {
                            Id = 3,
                            Address = "39980 Emmerich Ridges, Port Hazelberg, Reunion",
                            City = "Port Vella",
                            DateOfBirth = new DateTime(2022, 11, 22, 2, 6, 11, 86, DateTimeKind.Local).AddTicks(65),
                            Email = "Lori_Metz56@gmail.com",
                            FirstName = "Lori",
                            FullName = "Lori Metz",
                            Gender = true,
                            LastName = "Metz",
                            Phone = "847.771.2939 x0019",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/997.jpg",
                            Student_code = "Student2lucBh13"
                        },
                        new
                        {
                            Id = 4,
                            Address = "41359 Gorczany Club, Lebsackmouth, Isle of Man",
                            City = "Wileyfort",
                            DateOfBirth = new DateTime(2022, 12, 31, 12, 5, 3, 19, DateTimeKind.Local).AddTicks(2230),
                            Email = "Adrain51@yahoo.com",
                            FirstName = "Adrain",
                            FullName = "Adrain Botsford",
                            Gender = true,
                            LastName = "Botsford",
                            Phone = "230-428-3491 x8341",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/573.jpg",
                            Student_code = "StudentCC4FNRZW"
                        },
                        new
                        {
                            Id = 5,
                            Address = "703 Eli Forest, South Grahamfort, Suriname",
                            City = "East Rickshire",
                            DateOfBirth = new DateTime(2023, 4, 1, 12, 50, 57, 915, DateTimeKind.Local).AddTicks(5738),
                            Email = "Bernita_Herzog@gmail.com",
                            FirstName = "Bernita",
                            FullName = "Bernita Herzog",
                            Gender = false,
                            LastName = "Herzog",
                            Phone = "759-703-3107 x296",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/137.jpg",
                            Student_code = "StudentHLXjmMTo"
                        },
                        new
                        {
                            Id = 6,
                            Address = "9788 Jasen Fork, West Laury, Madagascar",
                            City = "West Lenna",
                            DateOfBirth = new DateTime(2023, 3, 25, 1, 59, 8, 412, DateTimeKind.Local).AddTicks(9288),
                            Email = "Bulah_Fay@yahoo.com",
                            FirstName = "Bulah",
                            FullName = "Bulah Fay",
                            Gender = false,
                            LastName = "Fay",
                            Phone = "374-314-9887",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/242.jpg",
                            Student_code = "Student1e3EhtIb"
                        },
                        new
                        {
                            Id = 7,
                            Address = "246 Gideon Valleys, Katlynmouth, United States of America",
                            City = "Boyermouth",
                            DateOfBirth = new DateTime(2023, 6, 23, 2, 18, 1, 59, DateTimeKind.Local).AddTicks(5156),
                            Email = "Reece.Fritsch@hotmail.com",
                            FirstName = "Reece",
                            FullName = "Reece Fritsch",
                            Gender = true,
                            LastName = "Fritsch",
                            Phone = "853.915.1712",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/426.jpg",
                            Student_code = "StudentEz4a9gTh"
                        },
                        new
                        {
                            Id = 8,
                            Address = "808 Shields Trail, Lake Rickie, Montserrat",
                            City = "West Esther",
                            DateOfBirth = new DateTime(2023, 2, 14, 17, 11, 36, 251, DateTimeKind.Local).AddTicks(3513),
                            Email = "Jairo.Harber0@gmail.com",
                            FirstName = "Jairo",
                            FullName = "Jairo Harber",
                            Gender = true,
                            LastName = "Harber",
                            Phone = "715.615.2617",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/794.jpg",
                            Student_code = "StudentllD7AAx6"
                        },
                        new
                        {
                            Id = 9,
                            Address = "718 Jerde Village, Vandervortview, El Salvador",
                            City = "Lake Athena",
                            DateOfBirth = new DateTime(2023, 4, 1, 22, 40, 23, 129, DateTimeKind.Local).AddTicks(5469),
                            Email = "Pasquale55@gmail.com",
                            FirstName = "Pasquale",
                            FullName = "Pasquale Brekke",
                            Gender = true,
                            LastName = "Brekke",
                            Phone = "855-840-0923 x083",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/503.jpg",
                            Student_code = "StudentcOCYYXZT"
                        },
                        new
                        {
                            Id = 10,
                            Address = "09732 Julio Trail, Dickimouth, Romania",
                            City = "Naderstad",
                            DateOfBirth = new DateTime(2023, 7, 24, 13, 4, 24, 97, DateTimeKind.Local).AddTicks(2024),
                            Email = "Floyd_Sipes@hotmail.com",
                            FirstName = "Floyd",
                            FullName = "Floyd Sipes",
                            Gender = false,
                            LastName = "Sipes",
                            Phone = "1-589-964-5903",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/590.jpg",
                            Student_code = "Student9fPrJhOD"
                        },
                        new
                        {
                            Id = 11,
                            Address = "91270 Landen Via, New Palma, Timor-Leste",
                            City = "Andychester",
                            DateOfBirth = new DateTime(2023, 5, 20, 8, 49, 9, 790, DateTimeKind.Local).AddTicks(2594),
                            Email = "Sienna_Pollich@yahoo.com",
                            FirstName = "Sienna",
                            FullName = "Sienna Pollich",
                            Gender = false,
                            LastName = "Pollich",
                            Phone = "242-908-1115 x2356",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/78.jpg",
                            Student_code = "StudentwtTibIKL"
                        },
                        new
                        {
                            Id = 12,
                            Address = "137 Daniel Shoal, Lake Colten, New Caledonia",
                            City = "Willberg",
                            DateOfBirth = new DateTime(2022, 10, 25, 22, 5, 53, 951, DateTimeKind.Local).AddTicks(535),
                            Email = "Keeley_Koss@gmail.com",
                            FirstName = "Keeley",
                            FullName = "Keeley Koss",
                            Gender = false,
                            LastName = "Koss",
                            Phone = "854.517.6689 x66423",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/57.jpg",
                            Student_code = "StudentMR60bs0f"
                        },
                        new
                        {
                            Id = 13,
                            Address = "321 Quigley Mall, Sammyfort, Ghana",
                            City = "Lake Gordon",
                            DateOfBirth = new DateTime(2023, 2, 15, 4, 54, 21, 618, DateTimeKind.Local).AddTicks(8762),
                            Email = "Tania83@gmail.com",
                            FirstName = "Tania",
                            FullName = "Tania Pfeffer",
                            Gender = true,
                            LastName = "Pfeffer",
                            Phone = "(421) 516-4134",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/981.jpg",
                            Student_code = "Student2aMCTtL4"
                        },
                        new
                        {
                            Id = 14,
                            Address = "739 Raul Mountains, Nellieport, Mali",
                            City = "New Dasia",
                            DateOfBirth = new DateTime(2022, 11, 14, 19, 16, 54, 186, DateTimeKind.Local).AddTicks(2438),
                            Email = "Luisa13@hotmail.com",
                            FirstName = "Luisa",
                            FullName = "Luisa Barton",
                            Gender = false,
                            LastName = "Barton",
                            Phone = "(457) 832-4419 x94153",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/772.jpg",
                            Student_code = "StudentVmQrHeeq"
                        },
                        new
                        {
                            Id = 15,
                            Address = "58479 Feil Canyon, West Wernerport, Ghana",
                            City = "New Dayne",
                            DateOfBirth = new DateTime(2023, 2, 26, 14, 2, 41, 636, DateTimeKind.Local).AddTicks(6408),
                            Email = "Aaron52@yahoo.com",
                            FirstName = "Aaron",
                            FullName = "Aaron Cassin",
                            Gender = true,
                            LastName = "Cassin",
                            Phone = "(529) 997-0650",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/951.jpg",
                            Student_code = "StudentGgBAFQJD"
                        },
                        new
                        {
                            Id = 16,
                            Address = "36381 Sauer Vista, East Orland, India",
                            City = "Rosahaven",
                            DateOfBirth = new DateTime(2023, 6, 4, 9, 56, 7, 33, DateTimeKind.Local).AddTicks(6262),
                            Email = "Carolanne_Abernathy14@hotmail.com",
                            FirstName = "Carolanne",
                            FullName = "Carolanne Abernathy",
                            Gender = true,
                            LastName = "Abernathy",
                            Phone = "(826) 875-8195 x775",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/885.jpg",
                            Student_code = "StudentUgKlrMy5"
                        },
                        new
                        {
                            Id = 17,
                            Address = "85858 Josefa Street, Wolfstad, Oman",
                            City = "Morissetteborough",
                            DateOfBirth = new DateTime(2023, 3, 8, 22, 39, 29, 495, DateTimeKind.Local).AddTicks(6629),
                            Email = "Toby.Cruickshank7@yahoo.com",
                            FirstName = "Toby",
                            FullName = "Toby Cruickshank",
                            Gender = false,
                            LastName = "Cruickshank",
                            Phone = "(251) 428-9287",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1057.jpg",
                            Student_code = "Student7ro5CYST"
                        },
                        new
                        {
                            Id = 18,
                            Address = "893 Ernie Freeway, Rodriguezburgh, British Indian Ocean Territory (Chagos Archipelago)",
                            City = "Carahaven",
                            DateOfBirth = new DateTime(2023, 7, 27, 6, 22, 1, 775, DateTimeKind.Local).AddTicks(8771),
                            Email = "Candace.Morar36@hotmail.com",
                            FirstName = "Candace",
                            FullName = "Candace Morar",
                            Gender = false,
                            LastName = "Morar",
                            Phone = "283.321.5989 x45390",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1213.jpg",
                            Student_code = "Student3YdqFwvA"
                        },
                        new
                        {
                            Id = 19,
                            Address = "26026 Nicola Rest, South Maritzaton, Timor-Leste",
                            City = "Mullerland",
                            DateOfBirth = new DateTime(2023, 1, 25, 13, 43, 12, 484, DateTimeKind.Local).AddTicks(9451),
                            Email = "Destany.Schimmel@hotmail.com",
                            FirstName = "Destany",
                            FullName = "Destany Schimmel",
                            Gender = false,
                            LastName = "Schimmel",
                            Phone = "1-975-943-9576 x9501",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1156.jpg",
                            Student_code = "StudentWTruIh5v"
                        },
                        new
                        {
                            Id = 20,
                            Address = "31046 Sarai Unions, Schuylerfort, Sri Lanka",
                            City = "East Serenityside",
                            DateOfBirth = new DateTime(2022, 10, 22, 13, 14, 51, 168, DateTimeKind.Local).AddTicks(862),
                            Email = "Darrion.Crist@gmail.com",
                            FirstName = "Darrion",
                            FullName = "Darrion Crist",
                            Gender = false,
                            LastName = "Crist",
                            Phone = "942-661-8726 x404",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/936.jpg",
                            Student_code = "Student2ULKnoQQ"
                        },
                        new
                        {
                            Id = 21,
                            Address = "353 Stroman Lake, West Xzavier, Cuba",
                            City = "Macejkovicville",
                            DateOfBirth = new DateTime(2022, 11, 11, 4, 36, 47, 402, DateTimeKind.Local).AddTicks(3096),
                            Email = "Robb5@hotmail.com",
                            FirstName = "Robb",
                            FullName = "Robb Jast",
                            Gender = false,
                            LastName = "Jast",
                            Phone = "703-761-5727",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/814.jpg",
                            Student_code = "StudentwjGsAXn9"
                        },
                        new
                        {
                            Id = 22,
                            Address = "6917 Halvorson Place, Klingland, Solomon Islands",
                            City = "Lake Nash",
                            DateOfBirth = new DateTime(2023, 1, 8, 19, 4, 34, 827, DateTimeKind.Local).AddTicks(3708),
                            Email = "Dejuan.Kuvalis@yahoo.com",
                            FirstName = "Dejuan",
                            FullName = "Dejuan Kuvalis",
                            Gender = false,
                            LastName = "Kuvalis",
                            Phone = "(513) 846-1710 x46819",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/281.jpg",
                            Student_code = "StudentlCbDUMYL"
                        },
                        new
                        {
                            Id = 23,
                            Address = "7731 Jacobson Brooks, Marciafort, Bosnia and Herzegovina",
                            City = "Durganville",
                            DateOfBirth = new DateTime(2023, 3, 16, 22, 35, 57, 437, DateTimeKind.Local).AddTicks(9286),
                            Email = "Alden_Brakus65@yahoo.com",
                            FirstName = "Alden",
                            FullName = "Alden Brakus",
                            Gender = true,
                            LastName = "Brakus",
                            Phone = "(704) 629-0005",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/709.jpg",
                            Student_code = "StudentOUhhZpXO"
                        },
                        new
                        {
                            Id = 24,
                            Address = "03605 Travis Cliffs, Boehmbury, Latvia",
                            City = "East Lucioborough",
                            DateOfBirth = new DateTime(2023, 3, 19, 20, 16, 43, 10, DateTimeKind.Local).AddTicks(4037),
                            Email = "Austyn_Wilkinson2@gmail.com",
                            FirstName = "Austyn",
                            FullName = "Austyn Wilkinson",
                            Gender = false,
                            LastName = "Wilkinson",
                            Phone = "1-298-941-8216 x34570",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/857.jpg",
                            Student_code = "StudenthDZRdfwc"
                        },
                        new
                        {
                            Id = 25,
                            Address = "760 Berniece Plains, South Cletusport, Kyrgyz Republic",
                            City = "Kaylaborough",
                            DateOfBirth = new DateTime(2022, 10, 3, 16, 2, 12, 949, DateTimeKind.Local).AddTicks(4080),
                            Email = "Carlie.Predovic@hotmail.com",
                            FirstName = "Carlie",
                            FullName = "Carlie Predovic",
                            Gender = false,
                            LastName = "Predovic",
                            Phone = "281.444.4588 x9537",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/685.jpg",
                            Student_code = "Student0Fszla7k"
                        },
                        new
                        {
                            Id = 26,
                            Address = "684 Otto Gardens, Lake Andersonhaven, Saint Martin",
                            City = "Veumland",
                            DateOfBirth = new DateTime(2023, 9, 19, 3, 52, 39, 574, DateTimeKind.Local).AddTicks(8452),
                            Email = "Earl_Hilpert78@hotmail.com",
                            FirstName = "Earl",
                            FullName = "Earl Hilpert",
                            Gender = true,
                            LastName = "Hilpert",
                            Phone = "483-613-3104 x823",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/4.jpg",
                            Student_code = "StudentYdGSwueC"
                        },
                        new
                        {
                            Id = 27,
                            Address = "3680 Leilani Circles, West Ezra, Macedonia",
                            City = "South Jacklynfort",
                            DateOfBirth = new DateTime(2023, 3, 17, 12, 12, 45, 276, DateTimeKind.Local).AddTicks(3987),
                            Email = "Abbigail91@gmail.com",
                            FirstName = "Abbigail",
                            FullName = "Abbigail Dicki",
                            Gender = true,
                            LastName = "Dicki",
                            Phone = "363-753-3461",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1064.jpg",
                            Student_code = "StudentF6LgkACK"
                        },
                        new
                        {
                            Id = 28,
                            Address = "19948 Herminio Parkway, New Kyliefurt, New Zealand",
                            City = "Borerville",
                            DateOfBirth = new DateTime(2023, 9, 7, 12, 17, 42, 549, DateTimeKind.Local).AddTicks(9855),
                            Email = "Malcolm.Huel@hotmail.com",
                            FirstName = "Malcolm",
                            FullName = "Malcolm Huel",
                            Gender = false,
                            LastName = "Huel",
                            Phone = "1-978-337-0189",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1216.jpg",
                            Student_code = "StudentVkHV9qPF"
                        },
                        new
                        {
                            Id = 29,
                            Address = "7972 Nella Harbors, Jordynberg, United States Minor Outlying Islands",
                            City = "Lake Justusland",
                            DateOfBirth = new DateTime(2022, 11, 23, 0, 37, 24, 491, DateTimeKind.Local).AddTicks(7735),
                            Email = "Jabari27@yahoo.com",
                            FirstName = "Jabari",
                            FullName = "Jabari Feil",
                            Gender = false,
                            LastName = "Feil",
                            Phone = "1-746-255-4450 x956",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/245.jpg",
                            Student_code = "StudenthurJNt39"
                        },
                        new
                        {
                            Id = 30,
                            Address = "92768 Rosanna View, Lake Alice, Antigua and Barbuda",
                            City = "South Nellieland",
                            DateOfBirth = new DateTime(2023, 4, 19, 14, 27, 28, 84, DateTimeKind.Local).AddTicks(5393),
                            Email = "Kole.Wilkinson68@gmail.com",
                            FirstName = "Kole",
                            FullName = "Kole Wilkinson",
                            Gender = true,
                            LastName = "Wilkinson",
                            Phone = "813-713-5430 x03182",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/787.jpg",
                            Student_code = "StudentdQN3rPmz"
                        },
                        new
                        {
                            Id = 31,
                            Address = "8835 Block Cliff, Wardmouth, Iraq",
                            City = "Watsonhaven",
                            DateOfBirth = new DateTime(2023, 7, 5, 23, 40, 7, 890, DateTimeKind.Local).AddTicks(832),
                            Email = "Bailee_Ziemann@yahoo.com",
                            FirstName = "Bailee",
                            FullName = "Bailee Ziemann",
                            Gender = false,
                            LastName = "Ziemann",
                            Phone = "(533) 768-3306 x597",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/394.jpg",
                            Student_code = "StudentRLoiJpmD"
                        },
                        new
                        {
                            Id = 32,
                            Address = "976 Smith Highway, Caspermouth, Serbia",
                            City = "West Mylesberg",
                            DateOfBirth = new DateTime(2023, 4, 6, 8, 30, 16, 831, DateTimeKind.Local).AddTicks(6949),
                            Email = "Verlie19@gmail.com",
                            FirstName = "Verlie",
                            FullName = "Verlie Welch",
                            Gender = false,
                            LastName = "Welch",
                            Phone = "1-941-751-7183 x221",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/595.jpg",
                            Student_code = "StudentgcWxsOsF"
                        },
                        new
                        {
                            Id = 33,
                            Address = "319 Shields Island, Lake Valentine, Norfolk Island",
                            City = "East Cruz",
                            DateOfBirth = new DateTime(2023, 3, 27, 18, 40, 24, 190, DateTimeKind.Local).AddTicks(407),
                            Email = "Ned52@yahoo.com",
                            FirstName = "Ned",
                            FullName = "Ned Harber",
                            Gender = false,
                            LastName = "Harber",
                            Phone = "839-405-2156",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/737.jpg",
                            Student_code = "StudentAkQqhWf5"
                        },
                        new
                        {
                            Id = 34,
                            Address = "43698 Easton Terrace, South Xander, Samoa",
                            City = "Summerhaven",
                            DateOfBirth = new DateTime(2023, 3, 27, 21, 49, 27, 170, DateTimeKind.Local).AddTicks(1757),
                            Email = "Brionna.Schuster60@hotmail.com",
                            FirstName = "Brionna",
                            FullName = "Brionna Schuster",
                            Gender = false,
                            LastName = "Schuster",
                            Phone = "1-840-695-4448 x840",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1209.jpg",
                            Student_code = "Student35XjbuGs"
                        },
                        new
                        {
                            Id = 35,
                            Address = "25284 Cruickshank Locks, East Jamirstad, Colombia",
                            City = "Kohlertown",
                            DateOfBirth = new DateTime(2022, 12, 28, 2, 27, 52, 297, DateTimeKind.Local).AddTicks(7188),
                            Email = "Autumn_DuBuque@gmail.com",
                            FirstName = "Autumn",
                            FullName = "Autumn DuBuque",
                            Gender = true,
                            LastName = "DuBuque",
                            Phone = "575-798-2862 x332",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/529.jpg",
                            Student_code = "StudentglLsZhar"
                        },
                        new
                        {
                            Id = 36,
                            Address = "2980 Adams Wall, New Twilaside, Moldova",
                            City = "East Carafort",
                            DateOfBirth = new DateTime(2022, 11, 6, 1, 39, 55, 622, DateTimeKind.Local).AddTicks(1984),
                            Email = "Flavie28@gmail.com",
                            FirstName = "Flavie",
                            FullName = "Flavie Moen",
                            Gender = true,
                            LastName = "Moen",
                            Phone = "488-576-9254",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/897.jpg",
                            Student_code = "StudentBaf0et8V"
                        },
                        new
                        {
                            Id = 37,
                            Address = "33588 Shields Ford, Port Guadalupe, Tajikistan",
                            City = "West Elfriedaborough",
                            DateOfBirth = new DateTime(2023, 6, 16, 10, 12, 59, 782, DateTimeKind.Local).AddTicks(4352),
                            Email = "Felipe_Treutel@gmail.com",
                            FirstName = "Felipe",
                            FullName = "Felipe Treutel",
                            Gender = false,
                            LastName = "Treutel",
                            Phone = "(224) 755-5367",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1098.jpg",
                            Student_code = "StudentyNvHwNlh"
                        },
                        new
                        {
                            Id = 38,
                            Address = "0489 Lemke Lights, Lilianaside, Sri Lanka",
                            City = "Kuphalberg",
                            DateOfBirth = new DateTime(2023, 2, 3, 8, 20, 16, 127, DateTimeKind.Local).AddTicks(5370),
                            Email = "Dell.Mayert97@gmail.com",
                            FirstName = "Dell",
                            FullName = "Dell Mayert",
                            Gender = false,
                            LastName = "Mayert",
                            Phone = "753.505.7213",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1038.jpg",
                            Student_code = "StudentbC1wQah1"
                        },
                        new
                        {
                            Id = 39,
                            Address = "6352 Hand Divide, West Granville, Mongolia",
                            City = "South Odessa",
                            DateOfBirth = new DateTime(2023, 3, 28, 13, 45, 54, 526, DateTimeKind.Local).AddTicks(9189),
                            Email = "Allene_Maggio46@hotmail.com",
                            FirstName = "Allene",
                            FullName = "Allene Maggio",
                            Gender = true,
                            LastName = "Maggio",
                            Phone = "427.942.1546",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/818.jpg",
                            Student_code = "StudenthKgsHiZH"
                        },
                        new
                        {
                            Id = 40,
                            Address = "405 Nienow Lake, South Marta, Virgin Islands, British",
                            City = "North Lavern",
                            DateOfBirth = new DateTime(2022, 11, 26, 7, 47, 48, 174, DateTimeKind.Local).AddTicks(9680),
                            Email = "Kole_Ruecker@yahoo.com",
                            FirstName = "Kole",
                            FullName = "Kole Ruecker",
                            Gender = false,
                            LastName = "Ruecker",
                            Phone = "507.404.9350",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/419.jpg",
                            Student_code = "StudentsPlrg2VP"
                        },
                        new
                        {
                            Id = 41,
                            Address = "23710 Felicia Streets, North May, Malaysia",
                            City = "Trinitymouth",
                            DateOfBirth = new DateTime(2022, 10, 17, 6, 42, 30, 576, DateTimeKind.Local).AddTicks(8207),
                            Email = "Arlo48@gmail.com",
                            FirstName = "Arlo",
                            FullName = "Arlo Metz",
                            Gender = true,
                            LastName = "Metz",
                            Phone = "1-495-245-6976 x90634",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/941.jpg",
                            Student_code = "StudentYm28L1H4"
                        },
                        new
                        {
                            Id = 42,
                            Address = "01644 Huel Village, South Bonita, Zambia",
                            City = "Robelshire",
                            DateOfBirth = new DateTime(2022, 11, 22, 19, 50, 47, 701, DateTimeKind.Local).AddTicks(3403),
                            Email = "Carmine_Christiansen@gmail.com",
                            FirstName = "Carmine",
                            FullName = "Carmine Christiansen",
                            Gender = true,
                            LastName = "Christiansen",
                            Phone = "1-544-716-0524",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1176.jpg",
                            Student_code = "Student766y8Imx"
                        },
                        new
                        {
                            Id = 43,
                            Address = "961 Brekke Vista, New Americaburgh, Liechtenstein",
                            City = "Murazikfurt",
                            DateOfBirth = new DateTime(2023, 1, 29, 6, 10, 8, 735, DateTimeKind.Local).AddTicks(502),
                            Email = "Unique_Williamson@yahoo.com",
                            FirstName = "Unique",
                            FullName = "Unique Williamson",
                            Gender = true,
                            LastName = "Williamson",
                            Phone = "641.819.8736 x472",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1223.jpg",
                            Student_code = "StudentYZ6dRM5n"
                        },
                        new
                        {
                            Id = 44,
                            Address = "026 Beahan Row, Elianchester, Saint Pierre and Miquelon",
                            City = "Monserratmouth",
                            DateOfBirth = new DateTime(2023, 1, 7, 23, 59, 2, 906, DateTimeKind.Local).AddTicks(4195),
                            Email = "Randal38@gmail.com",
                            FirstName = "Randal",
                            FullName = "Randal Johnston",
                            Gender = false,
                            LastName = "Johnston",
                            Phone = "(973) 628-5467 x2880",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/25.jpg",
                            Student_code = "StudentqNzZyAmB"
                        },
                        new
                        {
                            Id = 45,
                            Address = "535 Gussie Turnpike, New Gonzalo, Fiji",
                            City = "Leonorahaven",
                            DateOfBirth = new DateTime(2023, 4, 15, 0, 57, 5, 70, DateTimeKind.Local).AddTicks(2853),
                            Email = "Alexane_Harris91@hotmail.com",
                            FirstName = "Alexane",
                            FullName = "Alexane Harris",
                            Gender = true,
                            LastName = "Harris",
                            Phone = "1-341-981-6445",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/339.jpg",
                            Student_code = "Studentv6DOXdFb"
                        },
                        new
                        {
                            Id = 46,
                            Address = "2860 Sawayn Valleys, East Jude, Tanzania",
                            City = "East Chelsea",
                            DateOfBirth = new DateTime(2023, 7, 26, 10, 39, 45, 65, DateTimeKind.Local).AddTicks(7537),
                            Email = "Chanelle.Feil54@gmail.com",
                            FirstName = "Chanelle",
                            FullName = "Chanelle Feil",
                            Gender = false,
                            LastName = "Feil",
                            Phone = "1-608-488-4760 x70733",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/767.jpg",
                            Student_code = "StudentPzFhLNmD"
                        },
                        new
                        {
                            Id = 47,
                            Address = "1730 Schuppe Path, Audreannemouth, United Arab Emirates",
                            City = "Loyalville",
                            DateOfBirth = new DateTime(2023, 9, 15, 13, 1, 51, 607, DateTimeKind.Local).AddTicks(2919),
                            Email = "Liliana_Von@yahoo.com",
                            FirstName = "Liliana",
                            FullName = "Liliana Von",
                            Gender = true,
                            LastName = "Von",
                            Phone = "(693) 857-9103",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/916.jpg",
                            Student_code = "StudentxdypcOMF"
                        },
                        new
                        {
                            Id = 48,
                            Address = "728 Wunsch Center, South Euniceborough, Bermuda",
                            City = "Pourosmouth",
                            DateOfBirth = new DateTime(2022, 11, 19, 17, 55, 34, 371, DateTimeKind.Local).AddTicks(1649),
                            Email = "Karolann_Kreiger@gmail.com",
                            FirstName = "Karolann",
                            FullName = "Karolann Kreiger",
                            Gender = true,
                            LastName = "Kreiger",
                            Phone = "(611) 493-9225 x0869",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/880.jpg",
                            Student_code = "StudentfuCApjrz"
                        },
                        new
                        {
                            Id = 49,
                            Address = "8099 Maureen Station, Hirthefort, Netherlands",
                            City = "West Jaden",
                            DateOfBirth = new DateTime(2022, 10, 21, 20, 31, 23, 218, DateTimeKind.Local).AddTicks(9473),
                            Email = "Theron_Schultz@yahoo.com",
                            FirstName = "Theron",
                            FullName = "Theron Schultz",
                            Gender = false,
                            LastName = "Schultz",
                            Phone = "(392) 313-8722 x7273",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/892.jpg",
                            Student_code = "StudentSl128O7V"
                        },
                        new
                        {
                            Id = 50,
                            Address = "0357 Lew Skyway, North Kyleeberg, Tanzania",
                            City = "West Lazaro",
                            DateOfBirth = new DateTime(2022, 11, 13, 15, 21, 29, 474, DateTimeKind.Local).AddTicks(6237),
                            Email = "Kasey73@gmail.com",
                            FirstName = "Kasey",
                            FullName = "Kasey Gerlach",
                            Gender = true,
                            LastName = "Gerlach",
                            Phone = "(317) 272-1736",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/208.jpg",
                            Student_code = "StudentNyu8vkh0"
                        });
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Priority", null)
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
