@model IEnumerable<LibraryModels.News>
@{
    ViewBag.Title = "News";

    int newsPerPage = 3;

    int currentPage = 1;


    int totalPages = (int)Math.Ceiling((double)Model.Count() / newsPerPage);


    var currentNewsPage = Model.Skip((currentPage - 1) * newsPerPage).Take(newsPerPage);
}


<div class="container">
    <h2 class="text-center mb-4">News List</h2>
    <div class="row">
        @foreach (var newsItem in Model)
        {
            <div class="col-md-4">
                <div class="card mb-4">
                    <img src="@Url.Content("~/images/News/"+newsItem.Img)" width="150" height="150">
                    <div class="card-body">
                        <h5 class="card-title">@newsItem.Title</h5>
                        <p class="card-text shortened-content">@newsItem.Content</p>
                        <p class="card-text">
                            <small class="text-muted">Published on @newsItem.PublishDate.ToShortDateString()</small>
                        </p>
                        <a href="@Url.Action("NewsDetail", new { id = newsItem.ID })" class="btn btn-primary">Read More</a>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row">
        <div class="col-md-12 text-center">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("News", new { page = 1 })" aria-label="First">
                            <span aria-hidden="true">&laquo;&laquo;</span>
                        </a>
                    </li>
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("News", new { page = currentPage - 1 })" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")"><a class="page-link" href="@Url.Action("News", new { page = i })">@i</a></li>
                    }
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("News", new { page = currentPage + 1 })" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("News", new { page = totalPages })" aria-label="Last">
                            <span aria-hidden="true">&raquo;&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>