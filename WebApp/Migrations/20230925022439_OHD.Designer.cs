// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230925022439_OHD")]
    partial class OHD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "cVLqbw56",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$Y94j89bcW8v2wuU7JoWNd.pOvUbA3o1ushO4Md3TCOpZcA7zZuIuy",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "pvMIq3hA",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$DJ5454s05LwL.YPQIlWkhu8X1yAOOG6fA/qJHRGfq8FG2i34///Zq",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "Qxz67Dbb",
                            Email = "user@gmail.com",
                            Password = "$2a$11$UxNOFCV0NVDdweT2di.Co.Rt8Dpfpw/1hCdBknjf7bFgUjuwrBx.q",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "2643 Walter Trafficway, North Destin, Iceland",
                            City = "West Ted",
                            DateOfBirth = new DateTime(2022, 10, 12, 10, 35, 6, 312, DateTimeKind.Local).AddTicks(781),
                            Email = "Kianna_Strosin@yahoo.com",
                            FirstName = "Kianna",
                            FullName = "Kianna Strosin",
                            Gender = false,
                            LastName = "Strosin",
                            Phone = "615-390-1232 x780",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/481.jpg",
                            Student_code = "StudentGnMSqHLA"
                        },
                        new
                        {
                            Id = 2,
                            Address = "7443 Maci Prairie, North Juanitamouth, Samoa",
                            City = "East Edwin",
                            DateOfBirth = new DateTime(2022, 11, 22, 8, 59, 12, 81, DateTimeKind.Local).AddTicks(4156),
                            Email = "Javon31@gmail.com",
                            FirstName = "Javon",
                            FullName = "Javon Gutmann",
                            Gender = false,
                            LastName = "Gutmann",
                            Phone = "(549) 373-0153",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/0.jpg",
                            Student_code = "StudentC94NHhyL"
                        },
                        new
                        {
                            Id = 3,
                            Address = "54990 Vaughn Radial, Port Jorgeland, Cayman Islands",
                            City = "Lake Dakotastad",
                            DateOfBirth = new DateTime(2023, 3, 13, 23, 46, 46, 391, DateTimeKind.Local).AddTicks(5648),
                            Email = "Nannie_Miller79@hotmail.com",
                            FirstName = "Nannie",
                            FullName = "Nannie Miller",
                            Gender = true,
                            LastName = "Miller",
                            Phone = "1-677-652-4654 x629",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/457.jpg",
                            Student_code = "StudentwAxSpIvS"
                        },
                        new
                        {
                            Id = 4,
                            Address = "4108 Upton Rest, South Skylar, Ecuador",
                            City = "O'Haraside",
                            DateOfBirth = new DateTime(2022, 10, 12, 2, 19, 9, 867, DateTimeKind.Local).AddTicks(6887),
                            Email = "Liliana63@yahoo.com",
                            FirstName = "Liliana",
                            FullName = "Liliana Osinski",
                            Gender = true,
                            LastName = "Osinski",
                            Phone = "1-363-928-8569",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/516.jpg",
                            Student_code = "Studentj1Ene9W7"
                        },
                        new
                        {
                            Id = 5,
                            Address = "4717 Boyd Street, Myrtiefurt, Chile",
                            City = "Runolfssonmouth",
                            DateOfBirth = new DateTime(2023, 3, 3, 9, 41, 4, 337, DateTimeKind.Local).AddTicks(557),
                            Email = "Alexis58@yahoo.com",
                            FirstName = "Alexis",
                            FullName = "Alexis Sporer",
                            Gender = false,
                            LastName = "Sporer",
                            Phone = "(672) 227-3824",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1196.jpg",
                            Student_code = "StudentwImdSC91"
                        },
                        new
                        {
                            Id = 6,
                            Address = "136 Keven Hills, New Dollyton, Cook Islands",
                            City = "East Valentine",
                            DateOfBirth = new DateTime(2023, 7, 6, 14, 36, 0, 798, DateTimeKind.Local).AddTicks(9706),
                            Email = "Velda.Kub@gmail.com",
                            FirstName = "Velda",
                            FullName = "Velda Kub",
                            Gender = false,
                            LastName = "Kub",
                            Phone = "489.369.3876 x9725",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/588.jpg",
                            Student_code = "Studentug42rjVJ"
                        },
                        new
                        {
                            Id = 7,
                            Address = "6118 Thora Springs, South Arnulfomouth, Marshall Islands",
                            City = "Clintborough",
                            DateOfBirth = new DateTime(2023, 9, 11, 7, 40, 10, 256, DateTimeKind.Local).AddTicks(3179),
                            Email = "Ricky_Zboncak@yahoo.com",
                            FirstName = "Ricky",
                            FullName = "Ricky Zboncak",
                            Gender = false,
                            LastName = "Zboncak",
                            Phone = "477.690.8853 x3161",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/529.jpg",
                            Student_code = "StudentQUYyPCA6"
                        },
                        new
                        {
                            Id = 8,
                            Address = "0154 Keebler Center, Deckowfurt, Lesotho",
                            City = "Rolandoburgh",
                            DateOfBirth = new DateTime(2023, 7, 28, 4, 31, 16, 921, DateTimeKind.Local).AddTicks(3416),
                            Email = "Alexandra19@hotmail.com",
                            FirstName = "Alexandra",
                            FullName = "Alexandra Cronin",
                            Gender = false,
                            LastName = "Cronin",
                            Phone = "1-558-799-7600 x65299",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/745.jpg",
                            Student_code = "StudentXBs7C50O"
                        },
                        new
                        {
                            Id = 9,
                            Address = "04153 Ernser Circle, Dareberg, Western Sahara",
                            City = "South Oceane",
                            DateOfBirth = new DateTime(2022, 10, 24, 18, 45, 16, 578, DateTimeKind.Local).AddTicks(2103),
                            Email = "Jaunita34@gmail.com",
                            FirstName = "Jaunita",
                            FullName = "Jaunita Conn",
                            Gender = false,
                            LastName = "Conn",
                            Phone = "695-839-5946 x47059",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1012.jpg",
                            Student_code = "StudentCPmbEhCL"
                        },
                        new
                        {
                            Id = 10,
                            Address = "413 Orn Fall, Thielton, Sweden",
                            City = "New Heberland",
                            DateOfBirth = new DateTime(2022, 10, 10, 19, 22, 56, 451, DateTimeKind.Local).AddTicks(248),
                            Email = "Vance.Ebert@hotmail.com",
                            FirstName = "Vance",
                            FullName = "Vance Ebert",
                            Gender = false,
                            LastName = "Ebert",
                            Phone = "868-984-2207",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1052.jpg",
                            Student_code = "StudentdMdWPoRz"
                        },
                        new
                        {
                            Id = 11,
                            Address = "8837 Bogan Causeway, Johnstonburgh, Tajikistan",
                            City = "Juwanborough",
                            DateOfBirth = new DateTime(2023, 6, 25, 15, 50, 2, 188, DateTimeKind.Local).AddTicks(6737),
                            Email = "Louvenia18@hotmail.com",
                            FirstName = "Louvenia",
                            FullName = "Louvenia Bashirian",
                            Gender = true,
                            LastName = "Bashirian",
                            Phone = "728.569.1982",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1020.jpg",
                            Student_code = "StudentmvupNRAn"
                        },
                        new
                        {
                            Id = 12,
                            Address = "936 Maddison Via, South Stanfordport, Egypt",
                            City = "West Corrinechester",
                            DateOfBirth = new DateTime(2023, 2, 11, 21, 48, 25, 284, DateTimeKind.Local).AddTicks(8601),
                            Email = "Erna_Collins@hotmail.com",
                            FirstName = "Erna",
                            FullName = "Erna Collins",
                            Gender = false,
                            LastName = "Collins",
                            Phone = "779.562.6436 x5240",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/104.jpg",
                            Student_code = "StudentcRqUV4cQ"
                        },
                        new
                        {
                            Id = 13,
                            Address = "0499 Ferry Unions, Kuhicburgh, Georgia",
                            City = "Legrosbury",
                            DateOfBirth = new DateTime(2022, 11, 5, 5, 29, 10, 538, DateTimeKind.Local).AddTicks(8046),
                            Email = "Summer_Dickens@gmail.com",
                            FirstName = "Summer",
                            FullName = "Summer Dickens",
                            Gender = false,
                            LastName = "Dickens",
                            Phone = "254.597.0505",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/399.jpg",
                            Student_code = "Studentl5gV7Vby"
                        },
                        new
                        {
                            Id = 14,
                            Address = "354 Violet Curve, Abdullahfort, Hungary",
                            City = "South Bernita",
                            DateOfBirth = new DateTime(2023, 4, 8, 22, 54, 13, 624, DateTimeKind.Local).AddTicks(5022),
                            Email = "Jewell64@yahoo.com",
                            FirstName = "Jewell",
                            FullName = "Jewell Treutel",
                            Gender = false,
                            LastName = "Treutel",
                            Phone = "545-419-8489 x3364",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/739.jpg",
                            Student_code = "StudentdejBGY7W"
                        },
                        new
                        {
                            Id = 15,
                            Address = "4935 Elda Roads, Aldenport, Saint Barthelemy",
                            City = "Luciustown",
                            DateOfBirth = new DateTime(2023, 8, 13, 15, 7, 35, 892, DateTimeKind.Local).AddTicks(5673),
                            Email = "Jeff.Cummerata84@yahoo.com",
                            FirstName = "Jeff",
                            FullName = "Jeff Cummerata",
                            Gender = true,
                            LastName = "Cummerata",
                            Phone = "810-765-9669",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/257.jpg",
                            Student_code = "Student9mo9UeDx"
                        },
                        new
                        {
                            Id = 16,
                            Address = "7323 Kieran Springs, New Leila, Papua New Guinea",
                            City = "Gislasonfort",
                            DateOfBirth = new DateTime(2023, 2, 3, 13, 4, 18, 205, DateTimeKind.Local).AddTicks(2310),
                            Email = "Eriberto21@gmail.com",
                            FirstName = "Eriberto",
                            FullName = "Eriberto Hoppe",
                            Gender = false,
                            LastName = "Hoppe",
                            Phone = "933-883-9035",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/656.jpg",
                            Student_code = "StudentVoSLc40P"
                        },
                        new
                        {
                            Id = 17,
                            Address = "5424 Rupert Parkways, Luciofort, Macao",
                            City = "Lake Monserrateborough",
                            DateOfBirth = new DateTime(2023, 6, 30, 21, 4, 26, 75, DateTimeKind.Local).AddTicks(6936),
                            Email = "Maggie15@hotmail.com",
                            FirstName = "Maggie",
                            FullName = "Maggie Swift",
                            Gender = true,
                            LastName = "Swift",
                            Phone = "807.785.4639",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/451.jpg",
                            Student_code = "StudentdP3pTK1y"
                        },
                        new
                        {
                            Id = 18,
                            Address = "818 Cremin Radial, North Ernestine, Republic of Korea",
                            City = "West Keshaun",
                            DateOfBirth = new DateTime(2023, 6, 15, 10, 10, 10, 17, DateTimeKind.Local).AddTicks(1559),
                            Email = "Hayden.Toy95@gmail.com",
                            FirstName = "Hayden",
                            FullName = "Hayden Toy",
                            Gender = true,
                            LastName = "Toy",
                            Phone = "(457) 298-9502",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/129.jpg",
                            Student_code = "StudentOIPsRGNe"
                        },
                        new
                        {
                            Id = 19,
                            Address = "9942 Fay Mews, West Estefania, Georgia",
                            City = "Beatricebury",
                            DateOfBirth = new DateTime(2023, 5, 20, 6, 47, 37, 82, DateTimeKind.Local).AddTicks(5929),
                            Email = "Alvah17@hotmail.com",
                            FirstName = "Alvah",
                            FullName = "Alvah Pouros",
                            Gender = true,
                            LastName = "Pouros",
                            Phone = "1-529-608-7070",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/484.jpg",
                            Student_code = "Studentftssv5Wq"
                        },
                        new
                        {
                            Id = 20,
                            Address = "37601 Moen Meadow, North Kane, Isle of Man",
                            City = "Cristalmouth",
                            DateOfBirth = new DateTime(2023, 2, 28, 22, 38, 27, 284, DateTimeKind.Local).AddTicks(5364),
                            Email = "Eliseo46@yahoo.com",
                            FirstName = "Eliseo",
                            FullName = "Eliseo Heaney",
                            Gender = false,
                            LastName = "Heaney",
                            Phone = "619-802-5698",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/849.jpg",
                            Student_code = "StudentzpQoxi0g"
                        },
                        new
                        {
                            Id = 21,
                            Address = "1971 Stehr Points, South Hazelside, Kyrgyz Republic",
                            City = "Dietrichshire",
                            DateOfBirth = new DateTime(2022, 11, 19, 23, 17, 13, 65, DateTimeKind.Local).AddTicks(4981),
                            Email = "Xzavier.Batz18@yahoo.com",
                            FirstName = "Xzavier",
                            FullName = "Xzavier Batz",
                            Gender = false,
                            LastName = "Batz",
                            Phone = "1-924-973-5278",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/361.jpg",
                            Student_code = "Student1MNRLESD"
                        },
                        new
                        {
                            Id = 22,
                            Address = "59694 Lehner Skyway, Rueckerland, Jersey",
                            City = "Watersport",
                            DateOfBirth = new DateTime(2023, 5, 17, 17, 36, 43, 729, DateTimeKind.Local).AddTicks(7956),
                            Email = "Asha.Cruickshank@yahoo.com",
                            FirstName = "Asha",
                            FullName = "Asha Cruickshank",
                            Gender = false,
                            LastName = "Cruickshank",
                            Phone = "(379) 598-5469",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/153.jpg",
                            Student_code = "StudentiLXyoJf0"
                        },
                        new
                        {
                            Id = 23,
                            Address = "0634 Julia Highway, Port Sophieville, Congo",
                            City = "Hegmannton",
                            DateOfBirth = new DateTime(2023, 7, 14, 16, 13, 19, 727, DateTimeKind.Local).AddTicks(1691),
                            Email = "Narciso79@yahoo.com",
                            FirstName = "Narciso",
                            FullName = "Narciso Douglas",
                            Gender = false,
                            LastName = "Douglas",
                            Phone = "1-449-536-7705 x4610",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/453.jpg",
                            Student_code = "StudentbooRCzh7"
                        },
                        new
                        {
                            Id = 24,
                            Address = "60240 Leonora Stream, North Millermouth, Marshall Islands",
                            City = "Port Rylanfurt",
                            DateOfBirth = new DateTime(2022, 11, 28, 0, 1, 40, 156, DateTimeKind.Local).AddTicks(2629),
                            Email = "Eino78@hotmail.com",
                            FirstName = "Eino",
                            FullName = "Eino Purdy",
                            Gender = false,
                            LastName = "Purdy",
                            Phone = "678.622.5023 x9941",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/331.jpg",
                            Student_code = "StudentRqe1so3Z"
                        },
                        new
                        {
                            Id = 25,
                            Address = "524 Rempel Park, Dellchester, Canada",
                            City = "South Geoton",
                            DateOfBirth = new DateTime(2023, 9, 6, 2, 4, 29, 322, DateTimeKind.Local).AddTicks(7386),
                            Email = "Mathilde_Goldner88@yahoo.com",
                            FirstName = "Mathilde",
                            FullName = "Mathilde Goldner",
                            Gender = false,
                            LastName = "Goldner",
                            Phone = "271-498-3826",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/171.jpg",
                            Student_code = "StudentwA6f2bVx"
                        },
                        new
                        {
                            Id = 26,
                            Address = "24414 Bobby Square, Kuvaliston, Germany",
                            City = "Shanahanton",
                            DateOfBirth = new DateTime(2022, 12, 5, 18, 12, 21, 670, DateTimeKind.Local).AddTicks(5408),
                            Email = "Karl.Gerlach19@yahoo.com",
                            FirstName = "Karl",
                            FullName = "Karl Gerlach",
                            Gender = true,
                            LastName = "Gerlach",
                            Phone = "(874) 706-1128",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1248.jpg",
                            Student_code = "Student26FnCU2A"
                        },
                        new
                        {
                            Id = 27,
                            Address = "89491 Pfeffer Ridge, East Lemuel, Western Sahara",
                            City = "Maryammouth",
                            DateOfBirth = new DateTime(2023, 9, 20, 7, 2, 3, 394, DateTimeKind.Local).AddTicks(2984),
                            Email = "Noemie_Bernhard@gmail.com",
                            FirstName = "Noemie",
                            FullName = "Noemie Bernhard",
                            Gender = false,
                            LastName = "Bernhard",
                            Phone = "1-622-276-9029",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/916.jpg",
                            Student_code = "StudentlP6BwGTh"
                        },
                        new
                        {
                            Id = 28,
                            Address = "678 Velda Knolls, New Meredithburgh, Brazil",
                            City = "Baronfort",
                            DateOfBirth = new DateTime(2023, 1, 31, 4, 17, 58, 150, DateTimeKind.Local).AddTicks(4451),
                            Email = "Joshua_Langworth88@hotmail.com",
                            FirstName = "Joshua",
                            FullName = "Joshua Langworth",
                            Gender = true,
                            LastName = "Langworth",
                            Phone = "1-672-498-3578",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/54.jpg",
                            Student_code = "Student7XF1yPqV"
                        },
                        new
                        {
                            Id = 29,
                            Address = "2610 Giovanni Hill, Rosenbaumview, Bahamas",
                            City = "Micheleberg",
                            DateOfBirth = new DateTime(2022, 10, 13, 19, 4, 13, 954, DateTimeKind.Local).AddTicks(403),
                            Email = "Polly61@yahoo.com",
                            FirstName = "Polly",
                            FullName = "Polly Ledner",
                            Gender = false,
                            LastName = "Ledner",
                            Phone = "864.595.2052",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/914.jpg",
                            Student_code = "StudentE7FDrqOs"
                        },
                        new
                        {
                            Id = 30,
                            Address = "78209 Schaefer River, New Idellabury, Algeria",
                            City = "West Logan",
                            DateOfBirth = new DateTime(2023, 2, 4, 0, 30, 31, 411, DateTimeKind.Local).AddTicks(6564),
                            Email = "Roxane.Ward@yahoo.com",
                            FirstName = "Roxane",
                            FullName = "Roxane Ward",
                            Gender = true,
                            LastName = "Ward",
                            Phone = "749.472.1115 x3670",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1146.jpg",
                            Student_code = "StudentOAmMFRBd"
                        },
                        new
                        {
                            Id = 31,
                            Address = "82432 Myra Isle, Gastontown, Sierra Leone",
                            City = "Trevorburgh",
                            DateOfBirth = new DateTime(2023, 7, 24, 2, 50, 10, 894, DateTimeKind.Local).AddTicks(4766),
                            Email = "Lura95@yahoo.com",
                            FirstName = "Lura",
                            FullName = "Lura Rosenbaum",
                            Gender = false,
                            LastName = "Rosenbaum",
                            Phone = "(837) 700-9141 x498",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/68.jpg",
                            Student_code = "StudentY3WGsfaS"
                        },
                        new
                        {
                            Id = 32,
                            Address = "6014 Jodie Throughway, Leschmouth, Virgin Islands, British",
                            City = "West Kyler",
                            DateOfBirth = new DateTime(2023, 4, 23, 21, 22, 10, 985, DateTimeKind.Local).AddTicks(6040),
                            Email = "Jacquelyn.Miller@hotmail.com",
                            FirstName = "Jacquelyn",
                            FullName = "Jacquelyn Miller",
                            Gender = true,
                            LastName = "Miller",
                            Phone = "(806) 292-4380",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1038.jpg",
                            Student_code = "StudentloCP85Qc"
                        },
                        new
                        {
                            Id = 33,
                            Address = "6044 Orn Point, Maggiohaven, Bosnia and Herzegovina",
                            City = "East Zettachester",
                            DateOfBirth = new DateTime(2023, 8, 11, 21, 40, 53, 71, DateTimeKind.Local).AddTicks(3626),
                            Email = "Lavada.Gislason65@gmail.com",
                            FirstName = "Lavada",
                            FullName = "Lavada Gislason",
                            Gender = true,
                            LastName = "Gislason",
                            Phone = "(257) 736-3862 x96658",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1017.jpg",
                            Student_code = "StudentPi5nG5Iv"
                        },
                        new
                        {
                            Id = 34,
                            Address = "782 Lesch Tunnel, East Dexterville, Greenland",
                            City = "Euniceside",
                            DateOfBirth = new DateTime(2022, 11, 30, 1, 5, 24, 18, DateTimeKind.Local).AddTicks(2533),
                            Email = "Levi_Heidenreich@gmail.com",
                            FirstName = "Levi",
                            FullName = "Levi Heidenreich",
                            Gender = false,
                            LastName = "Heidenreich",
                            Phone = "942-219-2955",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/594.jpg",
                            Student_code = "StudentVZ8MNqAA"
                        },
                        new
                        {
                            Id = 35,
                            Address = "2598 Federico Rapid, South Murrayside, Lao People's Democratic Republic",
                            City = "Tabithaland",
                            DateOfBirth = new DateTime(2023, 6, 29, 19, 55, 5, 694, DateTimeKind.Local).AddTicks(7237),
                            Email = "Carley_Runolfsdottir@hotmail.com",
                            FirstName = "Carley",
                            FullName = "Carley Runolfsdottir",
                            Gender = true,
                            LastName = "Runolfsdottir",
                            Phone = "1-766-474-2018",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/829.jpg",
                            Student_code = "Student220M69x0"
                        },
                        new
                        {
                            Id = 36,
                            Address = "7243 Kiehn Unions, Mullerton, Cape Verde",
                            City = "West Russ",
                            DateOfBirth = new DateTime(2023, 3, 2, 15, 31, 33, 844, DateTimeKind.Local).AddTicks(1736),
                            Email = "Elbert_Tromp@hotmail.com",
                            FirstName = "Elbert",
                            FullName = "Elbert Tromp",
                            Gender = false,
                            LastName = "Tromp",
                            Phone = "847-537-9730 x22138",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/147.jpg",
                            Student_code = "StudentlxbnFgST"
                        },
                        new
                        {
                            Id = 37,
                            Address = "21313 Cronin Pass, Davisville, Egypt",
                            City = "East Thurman",
                            DateOfBirth = new DateTime(2022, 10, 11, 9, 18, 49, 209, DateTimeKind.Local).AddTicks(2899),
                            Email = "Reinhold59@hotmail.com",
                            FirstName = "Reinhold",
                            FullName = "Reinhold Ward",
                            Gender = true,
                            LastName = "Ward",
                            Phone = "(736) 366-6041",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/448.jpg",
                            Student_code = "StudentpElqrYGW"
                        },
                        new
                        {
                            Id = 38,
                            Address = "88908 Walter Route, Gideonview, United States of America",
                            City = "South Eleazarview",
                            DateOfBirth = new DateTime(2023, 4, 16, 19, 1, 28, 718, DateTimeKind.Local).AddTicks(3580),
                            Email = "Merritt_Thompson@yahoo.com",
                            FirstName = "Merritt",
                            FullName = "Merritt Thompson",
                            Gender = false,
                            LastName = "Thompson",
                            Phone = "1-988-796-6943 x4448",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/745.jpg",
                            Student_code = "StudentKR3XBbgR"
                        },
                        new
                        {
                            Id = 39,
                            Address = "2291 Kyle Flat, Eleonoremouth, Belarus",
                            City = "New Matilda",
                            DateOfBirth = new DateTime(2023, 2, 26, 1, 5, 23, 995, DateTimeKind.Local).AddTicks(6300),
                            Email = "Emanuel_Oberbrunner@yahoo.com",
                            FirstName = "Emanuel",
                            FullName = "Emanuel Oberbrunner",
                            Gender = false,
                            LastName = "Oberbrunner",
                            Phone = "695-293-8042 x936",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1151.jpg",
                            Student_code = "StudentJMSP5sGt"
                        },
                        new
                        {
                            Id = 40,
                            Address = "941 Rozella Isle, Salvatoretown, Saudi Arabia",
                            City = "North Laron",
                            DateOfBirth = new DateTime(2023, 4, 10, 10, 15, 57, 96, DateTimeKind.Local).AddTicks(2046),
                            Email = "Leila_Johns16@hotmail.com",
                            FirstName = "Leila",
                            FullName = "Leila Johns",
                            Gender = true,
                            LastName = "Johns",
                            Phone = "(513) 962-8850 x73770",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/793.jpg",
                            Student_code = "StudentsQIlAHL3"
                        },
                        new
                        {
                            Id = 41,
                            Address = "084 Ferry Route, Port Zellaland, Luxembourg",
                            City = "Rosston",
                            DateOfBirth = new DateTime(2023, 4, 14, 3, 41, 20, 902, DateTimeKind.Local).AddTicks(5533),
                            Email = "Annetta.Grant74@hotmail.com",
                            FirstName = "Annetta",
                            FullName = "Annetta Grant",
                            Gender = false,
                            LastName = "Grant",
                            Phone = "1-833-617-3193 x969",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/182.jpg",
                            Student_code = "StudentbMby6wDH"
                        },
                        new
                        {
                            Id = 42,
                            Address = "41510 Fay Harbor, Janessaborough, San Marino",
                            City = "New Demondburgh",
                            DateOfBirth = new DateTime(2022, 12, 4, 7, 4, 54, 925, DateTimeKind.Local).AddTicks(6514),
                            Email = "Eda96@gmail.com",
                            FirstName = "Eda",
                            FullName = "Eda Davis",
                            Gender = false,
                            LastName = "Davis",
                            Phone = "353-996-3161",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/981.jpg",
                            Student_code = "Studentpz7xqpjD"
                        },
                        new
                        {
                            Id = 43,
                            Address = "75768 Kamron River, Haleybury, Canada",
                            City = "South Melvina",
                            DateOfBirth = new DateTime(2022, 12, 22, 20, 49, 45, 131, DateTimeKind.Local).AddTicks(5440),
                            Email = "Nathanael.Kautzer@yahoo.com",
                            FirstName = "Nathanael",
                            FullName = "Nathanael Kautzer",
                            Gender = false,
                            LastName = "Kautzer",
                            Phone = "500.989.5514 x521",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/94.jpg",
                            Student_code = "Student4f0zHLvw"
                        },
                        new
                        {
                            Id = 44,
                            Address = "6672 Wyman Greens, Port Abelview, Armenia",
                            City = "Kuhnburgh",
                            DateOfBirth = new DateTime(2022, 12, 25, 12, 35, 22, 164, DateTimeKind.Local).AddTicks(6735),
                            Email = "Rosella57@yahoo.com",
                            FirstName = "Rosella",
                            FullName = "Rosella Bechtelar",
                            Gender = true,
                            LastName = "Bechtelar",
                            Phone = "(443) 782-7953",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1158.jpg",
                            Student_code = "StudentpBqFIxDj"
                        },
                        new
                        {
                            Id = 45,
                            Address = "705 Ephraim Orchard, Mullerton, Kenya",
                            City = "Annettatown",
                            DateOfBirth = new DateTime(2023, 3, 25, 12, 21, 44, 217, DateTimeKind.Local).AddTicks(3815),
                            Email = "Ryleigh86@gmail.com",
                            FirstName = "Ryleigh",
                            FullName = "Ryleigh Zulauf",
                            Gender = true,
                            LastName = "Zulauf",
                            Phone = "1-678-620-1808",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/686.jpg",
                            Student_code = "StudentGvxFUm38"
                        },
                        new
                        {
                            Id = 46,
                            Address = "592 Aubrey Burg, West Bessie, Palau",
                            City = "North Price",
                            DateOfBirth = new DateTime(2023, 6, 22, 18, 20, 48, 159, DateTimeKind.Local).AddTicks(4996),
                            Email = "Jasen_Weber@yahoo.com",
                            FirstName = "Jasen",
                            FullName = "Jasen Weber",
                            Gender = false,
                            LastName = "Weber",
                            Phone = "1-291-970-3115 x65271",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/945.jpg",
                            Student_code = "Student3SLKot44"
                        },
                        new
                        {
                            Id = 47,
                            Address = "81593 Mona Garden, North Augusta, Saint Pierre and Miquelon",
                            City = "West Jeremieton",
                            DateOfBirth = new DateTime(2023, 3, 18, 19, 19, 45, 559, DateTimeKind.Local).AddTicks(8142),
                            Email = "Kamron.Gottlieb@hotmail.com",
                            FirstName = "Kamron",
                            FullName = "Kamron Gottlieb",
                            Gender = false,
                            LastName = "Gottlieb",
                            Phone = "604.818.1383 x75103",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1132.jpg",
                            Student_code = "Studentqr60MDgu"
                        },
                        new
                        {
                            Id = 48,
                            Address = "509 Otis Island, Port Lolita, Vanuatu",
                            City = "Lake Litzytown",
                            DateOfBirth = new DateTime(2023, 8, 29, 4, 40, 55, 793, DateTimeKind.Local).AddTicks(3396),
                            Email = "Dewayne77@gmail.com",
                            FirstName = "Dewayne",
                            FullName = "Dewayne Ferry",
                            Gender = false,
                            LastName = "Ferry",
                            Phone = "268.553.4945",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/402.jpg",
                            Student_code = "StudentQM3a4hGD"
                        },
                        new
                        {
                            Id = 49,
                            Address = "47689 Purdy Viaduct, Dillonberg, Niue",
                            City = "East Gabriella",
                            DateOfBirth = new DateTime(2022, 10, 26, 4, 46, 18, 991, DateTimeKind.Local).AddTicks(9663),
                            Email = "Frances.Conn@yahoo.com",
                            FirstName = "Frances",
                            FullName = "Frances Conn",
                            Gender = true,
                            LastName = "Conn",
                            Phone = "1-440-496-7523",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/796.jpg",
                            Student_code = "StudentvT5iX127"
                        },
                        new
                        {
                            Id = 50,
                            Address = "3701 Pearlie Manor, North Evemouth, Malaysia",
                            City = "Brennachester",
                            DateOfBirth = new DateTime(2023, 7, 25, 5, 3, 47, 932, DateTimeKind.Local).AddTicks(3355),
                            Email = "Ruthe_Graham@yahoo.com",
                            FirstName = "Ruthe",
                            FullName = "Ruthe Graham",
                            Gender = true,
                            LastName = "Graham",
                            Phone = "1-863-967-7163 x2102",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/782.jpg",
                            Student_code = "StudenthJX94iux"
                        });
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Priority", null)
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
