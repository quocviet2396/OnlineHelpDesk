﻿@{
    ViewBag.Title = "Index";
    Layout = "_BackendLayout";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<div style="text-align: center;">
    <h1 style="color: darkviolet; font-size: 70px;">Welcome to DashBoard</h1>
</div>
<div>
    <input type="date" id="startDate" />
    <input type="date" id="endDate" />
    <button onclick="filterData()">Lọc</button>
</div>






//chart by bao
// chart status
<div>
    <canvas id="myChart" style="width:100%;max-width:600px"></canvas>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
<script>
    // Khai báo biến để lưu trữ biểu đồ
    // Khai báo biến để lưu trữ biểu đồ
    var myChart = null;

    // Hàm để gọi AJAX và vẽ biểu đồ
    function filterData() {
        var startDate = document.getElementById("startDate").value;
        var endDate = document.getElementById("endDate").value;

        $.ajax({
            url: '/Ticket/GetTicketStatusData',
            type: 'GET',
            dataType: 'json',
            data: { startDate: startDate, endDate: endDate },
            success: function (data) {
                // Xóa biểu đồ hiện tại nếu tồn tại
                if (myChart) {
                    myChart.destroy();
                }

                const statusArray = [];
                const countArray = [];

                for (const key in data) {
                    if (data.hasOwnProperty(key)) {
                        statusArray.push(key);
                        countArray.push(data[key]);
                    }
                }

                var xValues = statusArray;
                var yValues = countArray;
                var barColors = ["red", "green", "blue", "orange", "brown", "purple", "pink"];

                var ctx = document.getElementById("myChart").getContext('2d');
                myChart = new Chart(ctx, {
                    type: "bar",
                    data: {
                        labels: xValues,
                        datasets: [{
                            backgroundColor: barColors,
                            data: yValues
                        }]
                    },
                    options: {
                        legend: { display: false },
                        title: {
                            display: true,
                            text: "World Wine Production 2018"
                        }
                    }
                });
            },
            error: function () {
                alert("Có lỗi xảy ra khi gửi yêu cầu Ajax.");
            }
        });
    }

    // Gọi hàm filterData khi trang web được tải lên
    window.onload = filterData;





</script>
<h1>Chart Category</h1>
<div>
    <input type="date" id="Start" />
    <input type="date" id="End" />
    <button onclick="Filter()">Lọc</button>
</div>

<div>
    <canvas id="categoryChart" style="width:100%;max-width:600px"></canvas>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
<script>
     var categoryChart = null;

     // Lấy dữ liệu và vẽ biểu đồ hình tròn
     function Filter() {
         var startDate = document.getElementById("Start").value;
         var endDate = document.getElementById("End").value;
         console.log(startDate);

         // Gọi AJAX để lấy dữ liệu dựa trên startDate và endDate, sau đó vẽ biểu đồ hình tròn
         $.ajax({
             url: '/Ticket/GetTicketCategoryData',
             type: 'GET',
             dataType: 'json',
             data: { startDate: startDate, endDate: endDate },
             success: function (categories) {
                 if (categoryChart) {
                     // Hủy bỏ biểu đồ hiện tại
                     categoryChart.destroy();
                 }

                 const categoryNames = [];
                 const categoryCounts = [];

                 for (const item of categories) {
                     categoryNames.push(item.CategoryName);
                     categoryCounts.push(item.Count);
                 }

                 var ctx = document.getElementById("categoryChart").getContext('2d');

                 var pieColors = ["red", "green", "blue", "orange", "brown", "purple", "pink"];

                 categoryChart = new Chart(ctx, {
                     type: "pie",
                     data: {
                         labels: categoryNames,
                         datasets: [{
                             data: categoryCounts,
                             backgroundColor: pieColors
                         }]
                     },
                     options: {
                         responsive: true,
                         maintainAspectRatio: false
                     }
                 });
             },
             error: function () {
                 alert("Có lỗi xảy ra khi gửi yêu cầu Ajax.");
             }
         });
     }

     // Gọi hàm để vẽ biểu đồ khi trang được tải
    // window.onload = Filter;
    Filter()
</script>

<div>
    <h1>Chart Creator</h1>
</div>
<div>
    <input type="date" id="start1" />
    <input type="date" id="end1" />
    <button onclick="FilterCreate()">Lọc</button>
</div>
<div>
    <canvas id="creatorChart" style="width:100%;max-width:600px"></canvas>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
<script>

     var creatorChart = null;

     // Lấy dữ liệu và vẽ biểu đồ hình tròn
     function FilterCreate() {
         var startDate = document.getElementById("start1").value;
         var endDate = document.getElementById("end1").value;

         // Gọi AJAX để lấy dữ liệu dựa trên startDate và endDate, sau đó vẽ biểu đồ hình tròn
         $.ajax({
             url: '/Ticket/GetTicketCreatorData',
             type: 'GET',
             dataType: 'json',
             data: { startDate: startDate, endDate: endDate },
             success: function (creators) {
                 if (creatorChart) {
                     // Hủy bỏ biểu đồ hiện tại
                     creatorChart.destroy();
                 }

                 const creatorNames = [];
                 const creatorCounts = [];

                 for (const creator of creators) {
                     creatorNames.push(creator.GroupName);
                     creatorCounts.push(1); // Mỗi tên người tạo chỉ tính là 1 lần
                 }

                 var ctx = document.getElementById("creatorChart").getContext('2d');

                 var pieColors = ["red", "green", "blue", "orange", "brown", "purple", "pink"];

                 creatorChart = new Chart(ctx, {
                     type: "doughnut",
                     data: {
                         labels: creatorNames,
                         datasets: [{
                             data: creatorCounts,
                             backgroundColor: pieColors
                         }]
                     },
                     options: {
                         responsive: true,
                         maintainAspectRatio: false
                     }
                 });
             },
             error: function () {
                 alert("Có lỗi xảy ra khi gửi yêu cầu Ajax.");
             }
         });
     }

     // Gọi hàm để vẽ biểu đồ khi trang được tải
    // window.onload = FilterCreate;
     FilterCreate()
</script>

@*<h1>Biểu đồ Hỗ trợ</h1>
<div>
    <input type="date" id="Start2" />
    <input type="date" id="End2" />
    <button onclick="FilterSupport()">Lọc</button>
</div>

<div>
    <canvas id="supportChart" style="width:100%;max-width:600px"></canvas>
</div>

<script>
    var supportChart = null;

    // Lấy dữ liệu và vẽ biểu đồ hình tròn
    function FilterSupport() {
        var startDate = document.getElementById("Start2").value;
        var endDate = document.getElementById("End2").value;

        // Gọi AJAX để lấy dữ liệu dựa trên startDate và endDate, sau đó vẽ biểu đồ hình tròn
        $.ajax({
            url: '/Ticket/GetTicketSupportData',
            type: 'GET',
            dataType: 'json',
            data: { startDate: startDate, endDate: endDate },
            success: function (supporters) {
                if (supportChart) {
                    // Hủy bỏ biểu đồ hiện tại
                    supportChart.destroy();
                }

                const supporterNames = [];
                const supporterCounts = [];

                for (const supporter of supporters) {
                    supporterNames.push(supporter.GroupName);
                    supporterCounts.push(supporter.Count); // Mỗi tên hỗ trợ chỉ tính là 1 lần
                }

                var ctx = document.getElementById("supportChart").getContext('2d');

                var pieColors = ["red", "green", "blue", "orange", "brown", "purple", "pink"];

                supportChart = new Chart(ctx, {
                    type: "line",
                    data: {
                        labels: supporterNames,
                        datasets: [{
                            data: supporterCounts,
                            backgroundColor: pieColors
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false
                    }
                });
            },
            error: function () {
                alert("Có lỗi xảy ra khi gửi yêu cầu Ajax.");
            }
        });
    }

    // Gọi hàm để vẽ biểu đồ khi trang được tải
    window.onload = FilterSupport;
</script>
*@
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<h1>Biểu đồ Hỗ trợ</h1>
<div>
    <input type="date" id="Start2" />
    <input type="date" id="End2" />
    <button onclick="FilterSupport()">Lọc</button>
</div>

<div id="supportChart" style="width: 100%; max-width: 600px;"></div>

<script>
     // Lấy dữ liệu và vẽ biểu đồ đường
     function FilterSupport() {
         var startDate = document.getElementById("Start2").value;
         var endDate = document.getElementById("End2").value;

         // Gọi AJAX để lấy dữ liệu dựa trên startDate và endDate
         $.ajax({
             url: '/Ticket/GetTicketSupportData',
             type: 'GET',
             dataType: 'json',
             data: { startDate: startDate, endDate: endDate },
             success: function (supporters) {
                 google.charts.load('current', { 'packages': ['corechart'] });
                 google.charts.setOnLoadCallback(function () {
                     var data = new google.visualization.DataTable();
                     data.addColumn('string', 'Người hỗ trợ');
                     data.addColumn('number', 'Số lượng');

                     var colorArray = ["red", "green", "blue", "orange", "brown", "purple", "pink"];

                     for (var i = 0; i < supporters.length; i++) {
                         data.addRow([supporters[i].GroupName, supporters[i].Count]);

                         // Kiểm tra nếu supporters[i].Count là null, thêm "null" vào mảng màu tùy chỉnh
                         if (supporters[i].Count === null) {
                             colorArray.push("null");
                         } else {
                             colorArray.push(colorArray[i % colorArray.length]);
                         }
                     }

                     var options = {
                         title: 'Biểu đồ Hỗ trợ',
                         colors: colorArray, // Sử dụng mảng màu tùy chỉnh
                     };

                     var chart = new google.visualization.PieChart(document.getElementById('supportChart'));
                     chart.draw(data, options);
                 });
             },
             error: function () {
                 alert("Có lỗi xảy ra khi gửi yêu cầu Ajax.");
             }
         });
     }

     // Gọi hàm để vẽ biểu đồ khi trang được tải
    // window.onload = FilterSupport;
     FilterSupport()
</script>