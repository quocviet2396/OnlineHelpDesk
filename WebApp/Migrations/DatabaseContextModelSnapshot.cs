// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewId")
                        .HasColumnType("int");

                    b.Property<int>("NewsID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsID");

                    b.ToTable("tbComments");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("tbNews");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.Property<string>("feedback")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "FI7K41mI",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$jlmPOrPE1zk4QrKhjro0ouudAnl/gSeqz.XAWYACdjE78xB/4JfQy",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "8NbT4tR2",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$uEJKJswxKX2FVJ3NMgSnmeoLD3KdrFFmuGAliFwQo829HobLw.Ol6",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "7n1c3Umq",
                            Email = "user@gmail.com",
                            Password = "$2a$11$LFHspmfTLQLr.EhMpY5lm.t.aJEzEYaCY4A0NujG2Kcv88G3FBp0u",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "34698 Brady Glen, Vivientown, Haiti",
                            City = "Port Wiltonborough",
                            DateOfBirth = new DateTime(2022, 11, 27, 22, 27, 45, 127, DateTimeKind.Local).AddTicks(5768),
                            Email = "onhdexmapletest1991@gmail.com",
                            FirstName = "Zoie",
                            FullName = "Zoie Smith",
                            Gender = false,
                            LastName = "Smith",
                            Phone = "930-469-3057 x1540",
                            Student_code = "StudentOJRAnxGP"
                        },
                        new
                        {
                            Id = 3,
                            Address = "0664 Fredrick Pines, Waelchimouth, Switzerland",
                            City = "West Arlie",
                            DateOfBirth = new DateTime(2023, 6, 30, 13, 7, 23, 816, DateTimeKind.Local).AddTicks(5444),
                            Email = "onhdexmapletest1993@gmail.com",
                            FirstName = "Antonia",
                            FullName = "Antonia Roberts",
                            Gender = false,
                            LastName = "Roberts",
                            Phone = "601.291.1872 x93761",
                            Student_code = "Studentd0gS8tGd"
                        },
                        new
                        {
                            Id = 5,
                            Address = "552 Lizeth Fords, Kingtown, Sri Lanka",
                            City = "Alliemouth",
                            DateOfBirth = new DateTime(2023, 4, 13, 13, 48, 6, 479, DateTimeKind.Local).AddTicks(9114),
                            Email = "onhdexmapletest1995@gmail.com",
                            FirstName = "Marian",
                            FullName = "Marian Mayert",
                            Gender = false,
                            LastName = "Mayert",
                            Phone = "722-942-9659 x7158",
                            Student_code = "Student3Go3RKG7"
                        },
                        new
                        {
                            Id = 7,
                            Address = "000 Larson Junctions, Swiftbury, Eritrea",
                            City = "Brakusport",
                            DateOfBirth = new DateTime(2023, 3, 28, 9, 45, 52, 453, DateTimeKind.Local).AddTicks(8213),
                            Email = "onhdexmapletest1997@gmail.com",
                            FirstName = "Hettie",
                            FullName = "Hettie Gutmann",
                            Gender = true,
                            LastName = "Gutmann",
                            Phone = "616.991.7895 x490",
                            Student_code = "StudentvQ7j1TUO"
                        },
                        new
                        {
                            Id = 9,
                            Address = "1946 Clementina Trace, Hildaville, Puerto Rico",
                            City = "Feliciaberg",
                            DateOfBirth = new DateTime(2022, 10, 15, 0, 44, 46, 661, DateTimeKind.Local).AddTicks(5251),
                            Email = "onhdexmapletest1999@gmail.com",
                            FirstName = "Kristian",
                            FullName = "Kristian Koch",
                            Gender = false,
                            LastName = "Koch",
                            Phone = "(391) 899-3825 x2502",
                            Student_code = "StudentkvaOLWnz"
                        },
                        new
                        {
                            Id = 11,
                            Address = "4474 Margaretta Vista, Cornellburgh, Germany",
                            City = "Breitenbergchester",
                            DateOfBirth = new DateTime(2022, 12, 7, 4, 35, 48, 348, DateTimeKind.Local).AddTicks(2824),
                            Email = "onhdexmapletest19911@gmail.com",
                            FirstName = "Lauren",
                            FullName = "Lauren Bailey",
                            Gender = true,
                            LastName = "Bailey",
                            Phone = "738.887.5934 x186",
                            Student_code = "StudentxzEAYCNK"
                        },
                        new
                        {
                            Id = 13,
                            Address = "4867 Cummerata Meadows, New Geovanni, Netherlands Antilles",
                            City = "New Ophelia",
                            DateOfBirth = new DateTime(2022, 11, 22, 17, 40, 2, 382, DateTimeKind.Local).AddTicks(4176),
                            Email = "onhdexmapletest19913@gmail.com",
                            FirstName = "Mara",
                            FullName = "Mara Barton",
                            Gender = false,
                            LastName = "Barton",
                            Phone = "677.536.2797 x8177",
                            Student_code = "Studentae23iZMu"
                        },
                        new
                        {
                            Id = 15,
                            Address = "16268 Shany Passage, East Kennedy, Uganda",
                            City = "East Brett",
                            DateOfBirth = new DateTime(2022, 10, 17, 16, 16, 12, 917, DateTimeKind.Local).AddTicks(8511),
                            Email = "onhdexmapletest19915@gmail.com",
                            FirstName = "Yessenia",
                            FullName = "Yessenia Beier",
                            Gender = true,
                            LastName = "Beier",
                            Phone = "(869) 348-5740",
                            Student_code = "Student5d7bUQvm"
                        },
                        new
                        {
                            Id = 17,
                            Address = "91918 O'Kon Place, Port Valeriemouth, United States of America",
                            City = "Brownmouth",
                            DateOfBirth = new DateTime(2023, 9, 3, 5, 7, 32, 243, DateTimeKind.Local).AddTicks(389),
                            Email = "onhdexmapletest19917@gmail.com",
                            FirstName = "Judge",
                            FullName = "Judge Jacobs",
                            Gender = false,
                            LastName = "Jacobs",
                            Phone = "367-271-6089",
                            Student_code = "StudentFvAtO1vL"
                        },
                        new
                        {
                            Id = 19,
                            Address = "34587 McCullough View, New Jesus, Mauritius",
                            City = "West Kaleb",
                            DateOfBirth = new DateTime(2023, 8, 1, 19, 3, 8, 452, DateTimeKind.Local).AddTicks(7542),
                            Email = "onhdexmapletest19919@gmail.com",
                            FirstName = "Tyrel",
                            FullName = "Tyrel Renner",
                            Gender = true,
                            LastName = "Renner",
                            Phone = "993.652.1794",
                            Student_code = "Student7Tk5Mo85"
                        },
                        new
                        {
                            Id = 21,
                            Address = "64384 Rodrigo Streets, East Erwin, Timor-Leste",
                            City = "Deeborough",
                            DateOfBirth = new DateTime(2023, 8, 9, 3, 36, 26, 655, DateTimeKind.Local).AddTicks(4323),
                            Email = "onhdexmapletest19921@gmail.com",
                            FirstName = "Melyna",
                            FullName = "Melyna Rodriguez",
                            Gender = false,
                            LastName = "Rodriguez",
                            Phone = "942.492.7082",
                            Student_code = "StudentXi96xLon"
                        },
                        new
                        {
                            Id = 23,
                            Address = "322 Lemke Center, New Arveltown, Tokelau",
                            City = "South Uniqueville",
                            DateOfBirth = new DateTime(2022, 12, 5, 16, 41, 52, 185, DateTimeKind.Local).AddTicks(851),
                            Email = "onhdexmapletest19923@gmail.com",
                            FirstName = "Mozelle",
                            FullName = "Mozelle Pacocha",
                            Gender = true,
                            LastName = "Pacocha",
                            Phone = "1-877-474-2440 x54607",
                            Student_code = "StudentTBy4ojvm"
                        },
                        new
                        {
                            Id = 25,
                            Address = "7199 Caitlyn Underpass, New Ada, Peru",
                            City = "Leuschkeborough",
                            DateOfBirth = new DateTime(2023, 4, 16, 1, 45, 1, 776, DateTimeKind.Local).AddTicks(593),
                            Email = "onhdexmapletest19925@gmail.com",
                            FirstName = "Nash",
                            FullName = "Nash O'Connell",
                            Gender = false,
                            LastName = "O'Connell",
                            Phone = "1-961-204-9837 x339",
                            Student_code = "StudentcGi82RnG"
                        },
                        new
                        {
                            Id = 27,
                            Address = "915 Jerde Course, Port Nicolettefurt, Reunion",
                            City = "East Anderson",
                            DateOfBirth = new DateTime(2023, 1, 27, 12, 44, 13, 946, DateTimeKind.Local).AddTicks(7078),
                            Email = "onhdexmapletest19927@gmail.com",
                            FirstName = "Christina",
                            FullName = "Christina Yundt",
                            Gender = true,
                            LastName = "Yundt",
                            Phone = "(495) 526-4132 x83820",
                            Student_code = "StudentsCsUoCf9"
                        },
                        new
                        {
                            Id = 29,
                            Address = "9999 Ashlee Neck, Hickleton, Switzerland",
                            City = "New Lina",
                            DateOfBirth = new DateTime(2023, 6, 12, 13, 20, 50, 922, DateTimeKind.Local).AddTicks(6025),
                            Email = "onhdexmapletest19929@gmail.com",
                            FirstName = "Frederick",
                            FullName = "Frederick Ernser",
                            Gender = true,
                            LastName = "Ernser",
                            Phone = "386-915-1758",
                            Student_code = "Students0SFsqiI"
                        },
                        new
                        {
                            Id = 31,
                            Address = "67471 Rosie Roads, East Dennis, Bulgaria",
                            City = "Corineside",
                            DateOfBirth = new DateTime(2022, 10, 31, 17, 24, 44, 429, DateTimeKind.Local).AddTicks(8278),
                            Email = "onhdexmapletest19931@gmail.com",
                            FirstName = "Cristian",
                            FullName = "Cristian Reichert",
                            Gender = false,
                            LastName = "Reichert",
                            Phone = "353-565-8231 x8447",
                            Student_code = "StudentR60Kcz1S"
                        },
                        new
                        {
                            Id = 33,
                            Address = "5254 Beau Overpass, Port Dovie, Australia",
                            City = "Chasitymouth",
                            DateOfBirth = new DateTime(2023, 2, 5, 5, 58, 55, 890, DateTimeKind.Local).AddTicks(9910),
                            Email = "onhdexmapletest19933@gmail.com",
                            FirstName = "Alaina",
                            FullName = "Alaina Ward",
                            Gender = false,
                            LastName = "Ward",
                            Phone = "(999) 369-8580",
                            Student_code = "Studenttm6c3YLl"
                        },
                        new
                        {
                            Id = 35,
                            Address = "282 Marvin Tunnel, West Dejuan, Cambodia",
                            City = "Lake Lawsonbury",
                            DateOfBirth = new DateTime(2022, 12, 18, 17, 25, 10, 401, DateTimeKind.Local).AddTicks(7787),
                            Email = "onhdexmapletest19935@gmail.com",
                            FirstName = "Hailee",
                            FullName = "Hailee Hackett",
                            Gender = true,
                            LastName = "Hackett",
                            Phone = "1-714-404-5226 x479",
                            Student_code = "Studentcg8sj34A"
                        },
                        new
                        {
                            Id = 37,
                            Address = "36185 Auer Mill, West Janiya, Finland",
                            City = "Faheyton",
                            DateOfBirth = new DateTime(2023, 2, 16, 21, 11, 35, 979, DateTimeKind.Local).AddTicks(9655),
                            Email = "onhdexmapletest19937@gmail.com",
                            FirstName = "Macy",
                            FullName = "Macy Schaden",
                            Gender = false,
                            LastName = "Schaden",
                            Phone = "(297) 309-0223 x425",
                            Student_code = "StudentHlRQ4oXd"
                        },
                        new
                        {
                            Id = 39,
                            Address = "724 Aurelia Stravenue, Rutherfordchester, Equatorial Guinea",
                            City = "Trentburgh",
                            DateOfBirth = new DateTime(2022, 11, 27, 10, 43, 29, 89, DateTimeKind.Local).AddTicks(1159),
                            Email = "onhdexmapletest19939@gmail.com",
                            FirstName = "Ivy",
                            FullName = "Ivy Halvorson",
                            Gender = true,
                            LastName = "Halvorson",
                            Phone = "371-343-5095",
                            Student_code = "Studente7Uw90Uj"
                        },
                        new
                        {
                            Id = 41,
                            Address = "79685 Gideon Club, Swiftton, China",
                            City = "Walterchester",
                            DateOfBirth = new DateTime(2023, 3, 24, 11, 50, 20, 921, DateTimeKind.Local).AddTicks(7046),
                            Email = "onhdexmapletest19941@gmail.com",
                            FirstName = "Carolina",
                            FullName = "Carolina Rath",
                            Gender = true,
                            LastName = "Rath",
                            Phone = "386.786.5944",
                            Student_code = "Studentxyn8SQsu"
                        },
                        new
                        {
                            Id = 43,
                            Address = "74942 Ron Heights, West Glenberg, Tokelau",
                            City = "Schaeferstad",
                            DateOfBirth = new DateTime(2023, 5, 11, 20, 30, 8, 508, DateTimeKind.Local).AddTicks(1784),
                            Email = "onhdexmapletest19943@gmail.com",
                            FirstName = "Danny",
                            FullName = "Danny Fisher",
                            Gender = false,
                            LastName = "Fisher",
                            Phone = "(804) 268-7954",
                            Student_code = "StudentdWhoJvhI"
                        },
                        new
                        {
                            Id = 45,
                            Address = "33391 Hettinger Pines, East Kurtistown, Ethiopia",
                            City = "Marlinborough",
                            DateOfBirth = new DateTime(2023, 9, 15, 18, 38, 43, 175, DateTimeKind.Local).AddTicks(681),
                            Email = "onhdexmapletest19945@gmail.com",
                            FirstName = "Reid",
                            FullName = "Reid Flatley",
                            Gender = true,
                            LastName = "Flatley",
                            Phone = "1-662-963-2921 x5108",
                            Student_code = "StudentxzzS2GrB"
                        },
                        new
                        {
                            Id = 47,
                            Address = "04112 Gleason Club, Kirkport, Niger",
                            City = "Gleichnerchester",
                            DateOfBirth = new DateTime(2023, 8, 6, 8, 17, 9, 78, DateTimeKind.Local).AddTicks(8863),
                            Email = "onhdexmapletest19947@gmail.com",
                            FirstName = "Nikolas",
                            FullName = "Nikolas Leffler",
                            Gender = false,
                            LastName = "Leffler",
                            Phone = "1-327-959-2569 x8054",
                            Student_code = "StudentNQREhoc4"
                        },
                        new
                        {
                            Id = 49,
                            Address = "93122 Dashawn Cove, New Rubyestad, Venezuela",
                            City = "Port Marciaburgh",
                            DateOfBirth = new DateTime(2023, 5, 10, 3, 45, 43, 910, DateTimeKind.Local).AddTicks(1760),
                            Email = "onhdexmapletest19949@gmail.com",
                            FirstName = "Kaci",
                            FullName = "Kaci Koch",
                            Gender = false,
                            LastName = "Koch",
                            Phone = "(815) 386-3760 x781",
                            Student_code = "StudentOUs4pRuT"
                        },
                        new
                        {
                            Id = 51,
                            Address = "75293 Cruickshank Summit, West Jaunitafort, Cape Verde",
                            City = "New Xavier",
                            DateOfBirth = new DateTime(2023, 2, 28, 6, 50, 18, 862, DateTimeKind.Local).AddTicks(1204),
                            Email = "onhdexmapletest19951@gmail.com",
                            FirstName = "Gregorio",
                            FullName = "Gregorio McClure",
                            Gender = true,
                            LastName = "McClure",
                            Phone = "985-343-4582",
                            Student_code = "Studenth9Zzau4z"
                        },
                        new
                        {
                            Id = 53,
                            Address = "58980 Braun Greens, Patienceberg, Niue",
                            City = "Bayertown",
                            DateOfBirth = new DateTime(2023, 1, 24, 2, 43, 12, 696, DateTimeKind.Local).AddTicks(4051),
                            Email = "onhdexmapletest19953@gmail.com",
                            FirstName = "Keven",
                            FullName = "Keven Rowe",
                            Gender = false,
                            LastName = "Rowe",
                            Phone = "209.812.0344",
                            Student_code = "Student13J1sKwB"
                        },
                        new
                        {
                            Id = 55,
                            Address = "16881 Liana Tunnel, Reichertfurt, Venezuela",
                            City = "Jedidiahchester",
                            DateOfBirth = new DateTime(2023, 8, 5, 7, 9, 55, 613, DateTimeKind.Local).AddTicks(2572),
                            Email = "onhdexmapletest19955@gmail.com",
                            FirstName = "Joany",
                            FullName = "Joany Johnston",
                            Gender = true,
                            LastName = "Johnston",
                            Phone = "268.816.8455 x96187",
                            Student_code = "StudentGeAZ59Lc"
                        },
                        new
                        {
                            Id = 57,
                            Address = "0671 Reilly Falls, North Agneshaven, Vanuatu",
                            City = "Macejkovicmouth",
                            DateOfBirth = new DateTime(2023, 7, 20, 8, 31, 37, 732, DateTimeKind.Local).AddTicks(4860),
                            Email = "onhdexmapletest19957@gmail.com",
                            FirstName = "Tyrell",
                            FullName = "Tyrell Jenkins",
                            Gender = true,
                            LastName = "Jenkins",
                            Phone = "218-529-1635 x536",
                            Student_code = "Studenta03at58i"
                        },
                        new
                        {
                            Id = 59,
                            Address = "88092 Citlalli Estates, Kamronland, Bahrain",
                            City = "Robinview",
                            DateOfBirth = new DateTime(2023, 6, 2, 21, 8, 33, 272, DateTimeKind.Local).AddTicks(4163),
                            Email = "onhdexmapletest19959@gmail.com",
                            FirstName = "Bettie",
                            FullName = "Bettie Hammes",
                            Gender = false,
                            LastName = "Hammes",
                            Phone = "1-652-798-0480",
                            Student_code = "StudenthFr5dQwz"
                        },
                        new
                        {
                            Id = 61,
                            Address = "7884 Conn Neck, Hettingerfort, Maldives",
                            City = "Bernhardland",
                            DateOfBirth = new DateTime(2023, 4, 3, 7, 7, 3, 910, DateTimeKind.Local).AddTicks(4090),
                            Email = "onhdexmapletest19961@gmail.com",
                            FirstName = "Elliott",
                            FullName = "Elliott Grady",
                            Gender = false,
                            LastName = "Grady",
                            Phone = "(348) 334-6848",
                            Student_code = "Student8OAsfPLr"
                        },
                        new
                        {
                            Id = 63,
                            Address = "531 Schaefer Road, Greysonberg, Slovakia (Slovak Republic)",
                            City = "Willowshire",
                            DateOfBirth = new DateTime(2023, 2, 4, 21, 12, 30, 810, DateTimeKind.Local).AddTicks(3203),
                            Email = "onhdexmapletest19963@gmail.com",
                            FirstName = "Emmanuelle",
                            FullName = "Emmanuelle Lesch",
                            Gender = true,
                            LastName = "Lesch",
                            Phone = "(775) 822-5136 x42213",
                            Student_code = "StudentRGdiwmiJ"
                        },
                        new
                        {
                            Id = 65,
                            Address = "7713 Christiansen Road, South Coy, Maldives",
                            City = "Lake Kennaland",
                            DateOfBirth = new DateTime(2023, 2, 27, 10, 31, 20, 418, DateTimeKind.Local).AddTicks(5074),
                            Email = "onhdexmapletest19965@gmail.com",
                            FirstName = "Jay",
                            FullName = "Jay Walsh",
                            Gender = false,
                            LastName = "Walsh",
                            Phone = "(932) 928-7143 x0139",
                            Student_code = "Student8WJLnfP2"
                        },
                        new
                        {
                            Id = 67,
                            Address = "48291 Kuhn Divide, Edgardoshire, Jordan",
                            City = "Piperfort",
                            DateOfBirth = new DateTime(2022, 11, 23, 7, 34, 2, 867, DateTimeKind.Local).AddTicks(1929),
                            Email = "onhdexmapletest19967@gmail.com",
                            FirstName = "Leonor",
                            FullName = "Leonor Roob",
                            Gender = false,
                            LastName = "Roob",
                            Phone = "1-655-708-4636",
                            Student_code = "Student28ia8zy5"
                        },
                        new
                        {
                            Id = 69,
                            Address = "998 Kerluke Keys, North Stephen, Micronesia",
                            City = "New Buford",
                            DateOfBirth = new DateTime(2023, 6, 8, 5, 55, 51, 935, DateTimeKind.Local).AddTicks(7037),
                            Email = "onhdexmapletest19969@gmail.com",
                            FirstName = "Maximilian",
                            FullName = "Maximilian Herman",
                            Gender = true,
                            LastName = "Herman",
                            Phone = "1-872-557-6310",
                            Student_code = "StudentBDkWz9H9"
                        },
                        new
                        {
                            Id = 71,
                            Address = "5262 Brett Via, Beattyfurt, Sierra Leone",
                            City = "Reginaldbury",
                            DateOfBirth = new DateTime(2023, 1, 25, 12, 15, 30, 150, DateTimeKind.Local).AddTicks(3589),
                            Email = "onhdexmapletest19971@gmail.com",
                            FirstName = "Vincenzo",
                            FullName = "Vincenzo Kunze",
                            Gender = false,
                            LastName = "Kunze",
                            Phone = "1-777-997-2472 x8089",
                            Student_code = "StudentgSIg9l9Q"
                        },
                        new
                        {
                            Id = 73,
                            Address = "735 Laurianne Shoal, Dallasland, Bouvet Island (Bouvetoya)",
                            City = "Watsicastad",
                            DateOfBirth = new DateTime(2023, 5, 13, 1, 22, 11, 457, DateTimeKind.Local).AddTicks(7607),
                            Email = "onhdexmapletest19973@gmail.com",
                            FirstName = "Aron",
                            FullName = "Aron Braun",
                            Gender = false,
                            LastName = "Braun",
                            Phone = "534.514.4895 x070",
                            Student_code = "StudentStybnTrc"
                        },
                        new
                        {
                            Id = 75,
                            Address = "0886 Joannie Village, South Agnes, Cape Verde",
                            City = "Kolechester",
                            DateOfBirth = new DateTime(2023, 4, 25, 7, 10, 7, 852, DateTimeKind.Local).AddTicks(8784),
                            Email = "onhdexmapletest19975@gmail.com",
                            FirstName = "Jamarcus",
                            FullName = "Jamarcus Blick",
                            Gender = false,
                            LastName = "Blick",
                            Phone = "767.908.2745",
                            Student_code = "StudentjkztyMoz"
                        },
                        new
                        {
                            Id = 77,
                            Address = "0331 Wolf Lake, South Chelsie, New Caledonia",
                            City = "Kearabury",
                            DateOfBirth = new DateTime(2023, 6, 10, 23, 42, 56, 957, DateTimeKind.Local).AddTicks(732),
                            Email = "onhdexmapletest19977@gmail.com",
                            FirstName = "Fannie",
                            FullName = "Fannie Becker",
                            Gender = false,
                            LastName = "Becker",
                            Phone = "(726) 572-9559",
                            Student_code = "StudentF7pl0Ko4"
                        },
                        new
                        {
                            Id = 79,
                            Address = "975 Nathan Views, Turnerchester, Belarus",
                            City = "Lake Woodrowton",
                            DateOfBirth = new DateTime(2023, 8, 2, 2, 52, 50, 608, DateTimeKind.Local).AddTicks(4034),
                            Email = "onhdexmapletest19979@gmail.com",
                            FirstName = "Ansley",
                            FullName = "Ansley White",
                            Gender = false,
                            LastName = "White",
                            Phone = "705-399-0164 x384",
                            Student_code = "StudentoKpYRwrK"
                        },
                        new
                        {
                            Id = 81,
                            Address = "345 Parisian Alley, Demarcusstad, Tajikistan",
                            City = "Ansleyburgh",
                            DateOfBirth = new DateTime(2023, 1, 5, 3, 32, 23, 864, DateTimeKind.Local).AddTicks(7598),
                            Email = "onhdexmapletest19981@gmail.com",
                            FirstName = "Tia",
                            FullName = "Tia Williamson",
                            Gender = false,
                            LastName = "Williamson",
                            Phone = "742-414-6897 x2788",
                            Student_code = "StudentB5e7r6fk"
                        },
                        new
                        {
                            Id = 83,
                            Address = "293 Borer Islands, Leonardoland, Sao Tome and Principe",
                            City = "East Mitchellland",
                            DateOfBirth = new DateTime(2022, 12, 27, 22, 52, 58, 857, DateTimeKind.Local).AddTicks(9114),
                            Email = "onhdexmapletest19983@gmail.com",
                            FirstName = "Lottie",
                            FullName = "Lottie Bode",
                            Gender = true,
                            LastName = "Bode",
                            Phone = "1-242-534-5451 x29542",
                            Student_code = "StudentzKYRhVAY"
                        },
                        new
                        {
                            Id = 85,
                            Address = "207 Yvette Knoll, Lake Kayceeberg, Oman",
                            City = "New Jaydeshire",
                            DateOfBirth = new DateTime(2022, 11, 4, 6, 45, 3, 114, DateTimeKind.Local).AddTicks(9387),
                            Email = "onhdexmapletest19985@gmail.com",
                            FirstName = "Elliott",
                            FullName = "Elliott Sauer",
                            Gender = true,
                            LastName = "Sauer",
                            Phone = "500-669-9021 x51203",
                            Student_code = "StudentRyjqutry"
                        },
                        new
                        {
                            Id = 87,
                            Address = "98052 Brionna Oval, Gregland, Belize",
                            City = "Kiehnchester",
                            DateOfBirth = new DateTime(2023, 8, 23, 0, 35, 41, 556, DateTimeKind.Local).AddTicks(8070),
                            Email = "onhdexmapletest19987@gmail.com",
                            FirstName = "Amos",
                            FullName = "Amos Bahringer",
                            Gender = false,
                            LastName = "Bahringer",
                            Phone = "841-617-1628 x83695",
                            Student_code = "StudentNzdVMX4x"
                        },
                        new
                        {
                            Id = 89,
                            Address = "123 Astrid Brooks, Gabrielton, Libyan Arab Jamahiriya",
                            City = "Genevieveberg",
                            DateOfBirth = new DateTime(2023, 6, 5, 4, 49, 4, 856, DateTimeKind.Local).AddTicks(124),
                            Email = "onhdexmapletest19989@gmail.com",
                            FirstName = "Elvis",
                            FullName = "Elvis Willms",
                            Gender = true,
                            LastName = "Willms",
                            Phone = "(303) 500-8049 x878",
                            Student_code = "StudentrWAVW7rl"
                        },
                        new
                        {
                            Id = 91,
                            Address = "6532 Kendrick Dam, New Robbieland, Honduras",
                            City = "North Cedrickstad",
                            DateOfBirth = new DateTime(2022, 11, 13, 13, 8, 9, 952, DateTimeKind.Local).AddTicks(4930),
                            Email = "onhdexmapletest19991@gmail.com",
                            FirstName = "Angel",
                            FullName = "Angel Strosin",
                            Gender = true,
                            LastName = "Strosin",
                            Phone = "914.447.4101 x9663",
                            Student_code = "Student6BVu8sYE"
                        },
                        new
                        {
                            Id = 93,
                            Address = "479 Zemlak Path, New Brodyton, Colombia",
                            City = "Oberbrunnertown",
                            DateOfBirth = new DateTime(2023, 5, 8, 14, 38, 49, 406, DateTimeKind.Local).AddTicks(8433),
                            Email = "onhdexmapletest19993@gmail.com",
                            FirstName = "Waldo",
                            FullName = "Waldo Sporer",
                            Gender = false,
                            LastName = "Sporer",
                            Phone = "(315) 284-0039",
                            Student_code = "Student6tlF0dbL"
                        },
                        new
                        {
                            Id = 95,
                            Address = "136 Brett Turnpike, Goyetteview, Macedonia",
                            City = "Reynoldborough",
                            DateOfBirth = new DateTime(2023, 3, 28, 22, 54, 6, 907, DateTimeKind.Local).AddTicks(7847),
                            Email = "onhdexmapletest19995@gmail.com",
                            FirstName = "Danyka",
                            FullName = "Danyka Kertzmann",
                            Gender = false,
                            LastName = "Kertzmann",
                            Phone = "233-968-7840",
                            Student_code = "StudentxK4TlMT7"
                        },
                        new
                        {
                            Id = 97,
                            Address = "2308 Gutmann Squares, Rueckerberg, Holy See (Vatican City State)",
                            City = "Port Felton",
                            DateOfBirth = new DateTime(2023, 2, 2, 2, 54, 58, 488, DateTimeKind.Local).AddTicks(8726),
                            Email = "onhdexmapletest19997@gmail.com",
                            FirstName = "Katelynn",
                            FullName = "Katelynn Beer",
                            Gender = false,
                            LastName = "Beer",
                            Phone = "(684) 850-4219 x120",
                            Student_code = "StudentFyhvBQWd"
                        },
                        new
                        {
                            Id = 99,
                            Address = "801 Marianne Corners, Wardstad, San Marino",
                            City = "South Sanford",
                            DateOfBirth = new DateTime(2023, 1, 15, 12, 59, 15, 207, DateTimeKind.Local).AddTicks(9866),
                            Email = "onhdexmapletest19999@gmail.com",
                            FirstName = "Jacinto",
                            FullName = "Jacinto Cronin",
                            Gender = false,
                            LastName = "Cronin",
                            Phone = "1-392-221-1556 x12136",
                            Student_code = "Student2Zvt83ny"
                        });
                });

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.HasOne("LibraryModels.News", "News")
                        .WithMany("Comments")
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.Priority", "Priority")
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Priority");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
