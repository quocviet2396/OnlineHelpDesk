// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230928195135_hd")]
    partial class hd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.Property<string>("feedback")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "lpi1FgZj",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$37PHRU.vX9JKlr0SBU4/fegj7nG48.L6FVV0MCidCNmLGKDPAu5SW",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "qnTlmhwp",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$afntE.x99L0xQK4i77uyf.VVq2dkvpFtWrMQekv28n6sAJoNhIeqm",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "74lJHAty",
                            Email = "user@gmail.com",
                            Password = "$2a$11$WgxFZcWZKL3iRsAkZEFnl.9yzWA61m.4WJj5p8GYgwJxsdFtRFdJS",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "470 Kessler Highway, Omermouth, Belarus",
                            City = "Bayershire",
                            DateOfBirth = new DateTime(2022, 10, 4, 5, 19, 54, 880, DateTimeKind.Local).AddTicks(5581),
                            Email = "Sebastian.Koch31@yahoo.com",
                            FirstName = "Sebastian",
                            FullName = "Sebastian Koch",
                            Gender = true,
                            LastName = "Koch",
                            Phone = "646.253.9415 x050",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/688.jpg",
                            Student_code = "StudentcPZnm78Y"
                        },
                        new
                        {
                            Id = 2,
                            Address = "84009 Boyd Stream, O'Konland, Canada",
                            City = "Lake Ayden",
                            DateOfBirth = new DateTime(2022, 12, 28, 1, 9, 42, 776, DateTimeKind.Local).AddTicks(2505),
                            Email = "Adrianna_Gutmann15@hotmail.com",
                            FirstName = "Adrianna",
                            FullName = "Adrianna Gutmann",
                            Gender = false,
                            LastName = "Gutmann",
                            Phone = "(311) 339-7882",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/364.jpg",
                            Student_code = "Studentxi4rHXto"
                        },
                        new
                        {
                            Id = 3,
                            Address = "1835 Bauch Rapids, Terrencefurt, Trinidad and Tobago",
                            City = "West Darwinton",
                            DateOfBirth = new DateTime(2022, 11, 2, 9, 51, 5, 596, DateTimeKind.Local).AddTicks(7737),
                            Email = "Bernice_Fahey@gmail.com",
                            FirstName = "Bernice",
                            FullName = "Bernice Fahey",
                            Gender = false,
                            LastName = "Fahey",
                            Phone = "352-843-1851 x48696",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1221.jpg",
                            Student_code = "Studentuu99mCav"
                        },
                        new
                        {
                            Id = 4,
                            Address = "1988 Betty Walk, Caitlynberg, Nicaragua",
                            City = "Schambergertown",
                            DateOfBirth = new DateTime(2022, 11, 25, 2, 59, 37, 15, DateTimeKind.Local).AddTicks(4865),
                            Email = "Pearl_Ledner@hotmail.com",
                            FirstName = "Pearl",
                            FullName = "Pearl Ledner",
                            Gender = true,
                            LastName = "Ledner",
                            Phone = "595-622-5987 x0804",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/917.jpg",
                            Student_code = "Studentei9UXxUD"
                        },
                        new
                        {
                            Id = 5,
                            Address = "0374 Mikel Club, Armstrongbury, Honduras",
                            City = "Christiansenborough",
                            DateOfBirth = new DateTime(2023, 8, 6, 9, 10, 55, 662, DateTimeKind.Local).AddTicks(9236),
                            Email = "Josianne.Turcotte@gmail.com",
                            FirstName = "Josianne",
                            FullName = "Josianne Turcotte",
                            Gender = false,
                            LastName = "Turcotte",
                            Phone = "260.770.6345 x294",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1017.jpg",
                            Student_code = "StudentFNCUkCXT"
                        },
                        new
                        {
                            Id = 6,
                            Address = "7320 Ciara Groves, South Andreane, Micronesia",
                            City = "Lake Alizaton",
                            DateOfBirth = new DateTime(2022, 11, 29, 6, 43, 16, 572, DateTimeKind.Local).AddTicks(9022),
                            Email = "Pete11@gmail.com",
                            FirstName = "Pete",
                            FullName = "Pete West",
                            Gender = true,
                            LastName = "West",
                            Phone = "1-282-702-1274 x21671",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1245.jpg",
                            Student_code = "Studentk0ChBNGM"
                        },
                        new
                        {
                            Id = 7,
                            Address = "69466 Owen Springs, South Antonina, Trinidad and Tobago",
                            City = "Yazminstad",
                            DateOfBirth = new DateTime(2023, 8, 18, 15, 21, 14, 272, DateTimeKind.Local).AddTicks(6602),
                            Email = "Larue_Orn79@yahoo.com",
                            FirstName = "Larue",
                            FullName = "Larue Orn",
                            Gender = true,
                            LastName = "Orn",
                            Phone = "896.574.5644 x70882",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1119.jpg",
                            Student_code = "StudentUYs39lB6"
                        },
                        new
                        {
                            Id = 8,
                            Address = "77273 Kunze Wall, Jorgeberg, Spain",
                            City = "Oswaldofurt",
                            DateOfBirth = new DateTime(2023, 5, 24, 6, 56, 51, 576, DateTimeKind.Local).AddTicks(3598),
                            Email = "Nickolas.Feil@yahoo.com",
                            FirstName = "Nickolas",
                            FullName = "Nickolas Feil",
                            Gender = false,
                            LastName = "Feil",
                            Phone = "1-803-207-0837",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/405.jpg",
                            Student_code = "StudentSI66HEx1"
                        },
                        new
                        {
                            Id = 9,
                            Address = "79557 Jarod Lake, Adamshaven, Algeria",
                            City = "Mattshire",
                            DateOfBirth = new DateTime(2023, 3, 20, 10, 54, 19, 548, DateTimeKind.Local).AddTicks(5363),
                            Email = "Camron_Labadie@gmail.com",
                            FirstName = "Camron",
                            FullName = "Camron Labadie",
                            Gender = false,
                            LastName = "Labadie",
                            Phone = "925.768.6347 x9227",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/520.jpg",
                            Student_code = "Student14KinbLz"
                        },
                        new
                        {
                            Id = 10,
                            Address = "9669 Lind Course, Traceyhaven, Ukraine",
                            City = "North Louvenia",
                            DateOfBirth = new DateTime(2023, 5, 27, 17, 20, 37, 347, DateTimeKind.Local).AddTicks(7798),
                            Email = "Holden_Luettgen19@yahoo.com",
                            FirstName = "Holden",
                            FullName = "Holden Luettgen",
                            Gender = false,
                            LastName = "Luettgen",
                            Phone = "1-787-729-0505",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/405.jpg",
                            Student_code = "StudentVDRzoYqy"
                        },
                        new
                        {
                            Id = 11,
                            Address = "339 Jamil Inlet, Willmsmouth, Tanzania",
                            City = "Heidenreichchester",
                            DateOfBirth = new DateTime(2023, 2, 13, 7, 4, 5, 111, DateTimeKind.Local).AddTicks(1867),
                            Email = "Lavon64@gmail.com",
                            FirstName = "Lavon",
                            FullName = "Lavon Armstrong",
                            Gender = true,
                            LastName = "Armstrong",
                            Phone = "455-412-4131",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/587.jpg",
                            Student_code = "Student1JzOo8Cr"
                        },
                        new
                        {
                            Id = 12,
                            Address = "6519 Oberbrunner Spurs, Lindgrenmouth, Faroe Islands",
                            City = "Jaclynland",
                            DateOfBirth = new DateTime(2023, 5, 5, 22, 2, 27, 780, DateTimeKind.Local).AddTicks(4801),
                            Email = "Marisol15@gmail.com",
                            FirstName = "Marisol",
                            FullName = "Marisol Raynor",
                            Gender = true,
                            LastName = "Raynor",
                            Phone = "518-246-4415 x353",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/501.jpg",
                            Student_code = "Student1D9zCh3D"
                        },
                        new
                        {
                            Id = 13,
                            Address = "723 Eugenia Groves, Watersland, Ghana",
                            City = "West Leannabury",
                            DateOfBirth = new DateTime(2023, 2, 23, 3, 44, 16, 233, DateTimeKind.Local).AddTicks(4832),
                            Email = "Jamal.McLaughlin@gmail.com",
                            FirstName = "Jamal",
                            FullName = "Jamal McLaughlin",
                            Gender = false,
                            LastName = "McLaughlin",
                            Phone = "(922) 951-1896 x6338",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/50.jpg",
                            Student_code = "StudentJJKFBTni"
                        },
                        new
                        {
                            Id = 14,
                            Address = "3335 Morar Tunnel, New Letitia, Cuba",
                            City = "Vincenzotown",
                            DateOfBirth = new DateTime(2023, 6, 1, 11, 17, 58, 56, DateTimeKind.Local).AddTicks(956),
                            Email = "Pearlie_Watsica59@gmail.com",
                            FirstName = "Pearlie",
                            FullName = "Pearlie Watsica",
                            Gender = false,
                            LastName = "Watsica",
                            Phone = "674-525-9636 x533",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/759.jpg",
                            Student_code = "StudentO89l6U3T"
                        },
                        new
                        {
                            Id = 15,
                            Address = "8516 Aileen Prairie, Hoppechester, Jordan",
                            City = "North Camylleburgh",
                            DateOfBirth = new DateTime(2023, 1, 19, 19, 18, 33, 817, DateTimeKind.Local).AddTicks(5692),
                            Email = "Prince.Gerhold@gmail.com",
                            FirstName = "Prince",
                            FullName = "Prince Gerhold",
                            Gender = true,
                            LastName = "Gerhold",
                            Phone = "996-472-6762 x2764",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/946.jpg",
                            Student_code = "StudentDHJ61CQE"
                        },
                        new
                        {
                            Id = 16,
                            Address = "0789 Kuhic Lodge, Port Allen, Greece",
                            City = "Cieloview",
                            DateOfBirth = new DateTime(2022, 10, 5, 18, 12, 48, 90, DateTimeKind.Local).AddTicks(8542),
                            Email = "Reid.Hahn@hotmail.com",
                            FirstName = "Reid",
                            FullName = "Reid Hahn",
                            Gender = true,
                            LastName = "Hahn",
                            Phone = "987-935-5086",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/733.jpg",
                            Student_code = "StudentJ5g5xBw9"
                        },
                        new
                        {
                            Id = 17,
                            Address = "18216 Ratke Parks, North Jeromy, France",
                            City = "Erdmanfurt",
                            DateOfBirth = new DateTime(2023, 7, 26, 7, 20, 33, 183, DateTimeKind.Local).AddTicks(2866),
                            Email = "Marcel11@hotmail.com",
                            FirstName = "Marcel",
                            FullName = "Marcel Homenick",
                            Gender = true,
                            LastName = "Homenick",
                            Phone = "320-610-1967 x5135",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/424.jpg",
                            Student_code = "StudentulQldN7S"
                        },
                        new
                        {
                            Id = 18,
                            Address = "70264 Katharina Ports, Aaronside, Belgium",
                            City = "Abigayleborough",
                            DateOfBirth = new DateTime(2022, 10, 9, 4, 35, 52, 408, DateTimeKind.Local).AddTicks(6026),
                            Email = "Annabell_Rau@gmail.com",
                            FirstName = "Annabell",
                            FullName = "Annabell Rau",
                            Gender = true,
                            LastName = "Rau",
                            Phone = "460.753.2627 x483",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/622.jpg",
                            Student_code = "StudentIDTpzrB1"
                        },
                        new
                        {
                            Id = 19,
                            Address = "19017 Adams Falls, New Napoleon, Albania",
                            City = "Isaiasburgh",
                            DateOfBirth = new DateTime(2022, 10, 29, 8, 39, 44, 362, DateTimeKind.Local).AddTicks(3528),
                            Email = "Kavon.Hickle@gmail.com",
                            FirstName = "Kavon",
                            FullName = "Kavon Hickle",
                            Gender = true,
                            LastName = "Hickle",
                            Phone = "(908) 708-4079",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/96.jpg",
                            Student_code = "Studentgi8Vsydm"
                        },
                        new
                        {
                            Id = 20,
                            Address = "22684 Pearlie Island, West Erickaview, Tanzania",
                            City = "Guidofurt",
                            DateOfBirth = new DateTime(2022, 10, 22, 14, 53, 12, 394, DateTimeKind.Local).AddTicks(3874),
                            Email = "Erica.Corkery@gmail.com",
                            FirstName = "Erica",
                            FullName = "Erica Corkery",
                            Gender = false,
                            LastName = "Corkery",
                            Phone = "348.880.8828 x885",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/125.jpg",
                            Student_code = "Student8c40d46Y"
                        },
                        new
                        {
                            Id = 21,
                            Address = "47835 Rice Burg, Cristalberg, Anguilla",
                            City = "Myrtieberg",
                            DateOfBirth = new DateTime(2022, 9, 30, 17, 37, 31, 685, DateTimeKind.Local).AddTicks(6439),
                            Email = "Joey.Zboncak86@yahoo.com",
                            FirstName = "Joey",
                            FullName = "Joey Zboncak",
                            Gender = false,
                            LastName = "Zboncak",
                            Phone = "764-734-7712 x2495",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/196.jpg",
                            Student_code = "Student5NUbgXH0"
                        },
                        new
                        {
                            Id = 22,
                            Address = "88057 Richie Stravenue, Millsbury, Morocco",
                            City = "New Verniceland",
                            DateOfBirth = new DateTime(2023, 2, 25, 17, 12, 29, 662, DateTimeKind.Local).AddTicks(373),
                            Email = "Maye88@hotmail.com",
                            FirstName = "Maye",
                            FullName = "Maye Paucek",
                            Gender = true,
                            LastName = "Paucek",
                            Phone = "1-677-910-9405 x6989",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1249.jpg",
                            Student_code = "StudentwQfDELaI"
                        },
                        new
                        {
                            Id = 23,
                            Address = "4001 Oswaldo Course, Leeborough, Republic of Korea",
                            City = "Williamsonfurt",
                            DateOfBirth = new DateTime(2023, 8, 22, 5, 58, 11, 379, DateTimeKind.Local).AddTicks(5119),
                            Email = "Nichole.Hane25@gmail.com",
                            FirstName = "Nichole",
                            FullName = "Nichole Hane",
                            Gender = false,
                            LastName = "Hane",
                            Phone = "458.436.8173 x335",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/983.jpg",
                            Student_code = "StudentoVeM3udt"
                        },
                        new
                        {
                            Id = 24,
                            Address = "303 Pagac Views, Lake Raul, Cayman Islands",
                            City = "Micaelaborough",
                            DateOfBirth = new DateTime(2022, 11, 14, 5, 36, 28, 780, DateTimeKind.Local).AddTicks(4081),
                            Email = "Nelson45@gmail.com",
                            FirstName = "Nelson",
                            FullName = "Nelson Fritsch",
                            Gender = false,
                            LastName = "Fritsch",
                            Phone = "328-676-3978 x895",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/807.jpg",
                            Student_code = "Student12GCcUil"
                        },
                        new
                        {
                            Id = 25,
                            Address = "732 Alphonso Club, East Domenicamouth, American Samoa",
                            City = "Fernandotown",
                            DateOfBirth = new DateTime(2023, 3, 30, 5, 44, 36, 286, DateTimeKind.Local).AddTicks(5696),
                            Email = "Shyann10@gmail.com",
                            FirstName = "Shyann",
                            FullName = "Shyann Gislason",
                            Gender = true,
                            LastName = "Gislason",
                            Phone = "1-683-505-5196 x725",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/702.jpg",
                            Student_code = "Student7vdL64OD"
                        },
                        new
                        {
                            Id = 26,
                            Address = "7686 Luettgen Squares, South Shanonburgh, Spain",
                            City = "Prohaskaland",
                            DateOfBirth = new DateTime(2023, 8, 22, 20, 34, 31, 305, DateTimeKind.Local).AddTicks(6834),
                            Email = "Gudrun.Miller9@gmail.com",
                            FirstName = "Gudrun",
                            FullName = "Gudrun Miller",
                            Gender = true,
                            LastName = "Miller",
                            Phone = "488-283-9942 x90496",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1052.jpg",
                            Student_code = "StudentvrehRNGS"
                        },
                        new
                        {
                            Id = 27,
                            Address = "9592 Lisandro Square, South Victoriaborough, Venezuela",
                            City = "West Woodrow",
                            DateOfBirth = new DateTime(2023, 8, 16, 16, 11, 43, 802, DateTimeKind.Local).AddTicks(5857),
                            Email = "Creola.Waters39@yahoo.com",
                            FirstName = "Creola",
                            FullName = "Creola Waters",
                            Gender = true,
                            LastName = "Waters",
                            Phone = "497.372.4142 x661",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/310.jpg",
                            Student_code = "StudenttG8aHUDg"
                        },
                        new
                        {
                            Id = 28,
                            Address = "69992 Green Burg, Mackenzieborough, Paraguay",
                            City = "Ziemannport",
                            DateOfBirth = new DateTime(2023, 4, 28, 13, 53, 6, 499, DateTimeKind.Local).AddTicks(9449),
                            Email = "Ellis.Buckridge@gmail.com",
                            FirstName = "Ellis",
                            FullName = "Ellis Buckridge",
                            Gender = false,
                            LastName = "Buckridge",
                            Phone = "1-235-531-8916 x031",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/905.jpg",
                            Student_code = "Student5ESqu6ef"
                        },
                        new
                        {
                            Id = 29,
                            Address = "9966 Herman Points, Pfannerstillside, Tonga",
                            City = "Hodkiewiczchester",
                            DateOfBirth = new DateTime(2023, 9, 24, 19, 26, 8, 392, DateTimeKind.Local).AddTicks(2),
                            Email = "Rick21@hotmail.com",
                            FirstName = "Rick",
                            FullName = "Rick Krajcik",
                            Gender = false,
                            LastName = "Krajcik",
                            Phone = "442-480-3314",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/175.jpg",
                            Student_code = "Student9KJKah4U"
                        },
                        new
                        {
                            Id = 30,
                            Address = "23188 Mueller Meadow, Port Diana, Brunei Darussalam",
                            City = "South Armaniland",
                            DateOfBirth = new DateTime(2022, 10, 28, 4, 48, 7, 686, DateTimeKind.Local).AddTicks(5534),
                            Email = "Orville_Senger@gmail.com",
                            FirstName = "Orville",
                            FullName = "Orville Senger",
                            Gender = false,
                            LastName = "Senger",
                            Phone = "725.685.5691",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1205.jpg",
                            Student_code = "StudentltHigqbc"
                        },
                        new
                        {
                            Id = 31,
                            Address = "075 Hudson Plains, East Johantown, Cape Verde",
                            City = "Amandaburgh",
                            DateOfBirth = new DateTime(2023, 5, 28, 20, 29, 24, 113, DateTimeKind.Local).AddTicks(7711),
                            Email = "Jacinthe83@hotmail.com",
                            FirstName = "Jacinthe",
                            FullName = "Jacinthe Brown",
                            Gender = false,
                            LastName = "Brown",
                            Phone = "884.581.4656",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/340.jpg",
                            Student_code = "StudentqVYkwRrH"
                        },
                        new
                        {
                            Id = 32,
                            Address = "65067 Lucio Fork, Kossland, Lesotho",
                            City = "New Dangelo",
                            DateOfBirth = new DateTime(2023, 5, 19, 21, 47, 42, 114, DateTimeKind.Local).AddTicks(3538),
                            Email = "Adolfo.Crist@hotmail.com",
                            FirstName = "Adolfo",
                            FullName = "Adolfo Crist",
                            Gender = false,
                            LastName = "Crist",
                            Phone = "(841) 319-4610 x295",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/24.jpg",
                            Student_code = "Student1xBNjqZR"
                        },
                        new
                        {
                            Id = 33,
                            Address = "5279 Jacquelyn Keys, New Javon, Djibouti",
                            City = "New Jaydaburgh",
                            DateOfBirth = new DateTime(2023, 8, 31, 5, 17, 3, 17, DateTimeKind.Local).AddTicks(1050),
                            Email = "Jackeline.Herzog57@yahoo.com",
                            FirstName = "Jackeline",
                            FullName = "Jackeline Herzog",
                            Gender = true,
                            LastName = "Herzog",
                            Phone = "(894) 935-0120 x3739",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/997.jpg",
                            Student_code = "StudentBxkrYTEi"
                        },
                        new
                        {
                            Id = 34,
                            Address = "79072 Wiza Throughway, Dibbertborough, Mauritius",
                            City = "West Amelieborough",
                            DateOfBirth = new DateTime(2023, 7, 20, 10, 38, 57, 348, DateTimeKind.Local).AddTicks(5729),
                            Email = "Elvie55@hotmail.com",
                            FirstName = "Elvie",
                            FullName = "Elvie Prosacco",
                            Gender = false,
                            LastName = "Prosacco",
                            Phone = "1-365-762-5593 x6546",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/166.jpg",
                            Student_code = "StudentFBNesaLE"
                        },
                        new
                        {
                            Id = 35,
                            Address = "145 Raynor Drives, Augustusstad, Philippines",
                            City = "North Zettaview",
                            DateOfBirth = new DateTime(2023, 4, 25, 17, 57, 19, 57, DateTimeKind.Local).AddTicks(5932),
                            Email = "Ivy_OKeefe99@hotmail.com",
                            FirstName = "Ivy",
                            FullName = "Ivy O'Keefe",
                            Gender = false,
                            LastName = "O'Keefe",
                            Phone = "904.656.8631",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/469.jpg",
                            Student_code = "StudentZ9X3BlPZ"
                        },
                        new
                        {
                            Id = 36,
                            Address = "40178 Schaefer Cliffs, Port Rachellechester, Libyan Arab Jamahiriya",
                            City = "Reinholdville",
                            DateOfBirth = new DateTime(2023, 3, 11, 20, 47, 44, 911, DateTimeKind.Local).AddTicks(7914),
                            Email = "Doyle_Reynolds36@gmail.com",
                            FirstName = "Doyle",
                            FullName = "Doyle Reynolds",
                            Gender = true,
                            LastName = "Reynolds",
                            Phone = "(278) 535-6248 x9445",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/873.jpg",
                            Student_code = "Student48dpp3qN"
                        },
                        new
                        {
                            Id = 37,
                            Address = "814 Gerard Rapids, West Benedictborough, Uruguay",
                            City = "Tryciaport",
                            DateOfBirth = new DateTime(2023, 5, 29, 1, 5, 49, 842, DateTimeKind.Local).AddTicks(4018),
                            Email = "Vada_Larson@yahoo.com",
                            FirstName = "Vada",
                            FullName = "Vada Larson",
                            Gender = true,
                            LastName = "Larson",
                            Phone = "(401) 651-3108 x30432",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/728.jpg",
                            Student_code = "StudentmVwcQH9O"
                        },
                        new
                        {
                            Id = 38,
                            Address = "1211 Erwin Knolls, Helmerton, Japan",
                            City = "Rheamouth",
                            DateOfBirth = new DateTime(2023, 6, 24, 0, 42, 6, 940, DateTimeKind.Local).AddTicks(5393),
                            Email = "Zackary_Barrows77@gmail.com",
                            FirstName = "Zackary",
                            FullName = "Zackary Barrows",
                            Gender = true,
                            LastName = "Barrows",
                            Phone = "1-454-683-7239",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1249.jpg",
                            Student_code = "StudentYX7ag6Ow"
                        },
                        new
                        {
                            Id = 39,
                            Address = "622 Gutkowski Well, South Winfieldberg, Northern Mariana Islands",
                            City = "New Opheliaview",
                            DateOfBirth = new DateTime(2022, 10, 1, 7, 28, 10, 330, DateTimeKind.Local).AddTicks(9249),
                            Email = "Alessandra.Moen66@yahoo.com",
                            FirstName = "Alessandra",
                            FullName = "Alessandra Moen",
                            Gender = true,
                            LastName = "Moen",
                            Phone = "604.666.2986 x49609",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/253.jpg",
                            Student_code = "Student1zhzDNNz"
                        },
                        new
                        {
                            Id = 40,
                            Address = "5533 Marietta Square, Wunschville, Poland",
                            City = "New Clarkbury",
                            DateOfBirth = new DateTime(2022, 10, 25, 15, 50, 39, 526, DateTimeKind.Local).AddTicks(7900),
                            Email = "Liza_Jacobs@gmail.com",
                            FirstName = "Liza",
                            FullName = "Liza Jacobs",
                            Gender = true,
                            LastName = "Jacobs",
                            Phone = "445.906.0161 x99210",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1061.jpg",
                            Student_code = "Student1Vx9TUb0"
                        },
                        new
                        {
                            Id = 41,
                            Address = "478 Name Crossing, Lake Nicoton, Saint Martin",
                            City = "Kihnborough",
                            DateOfBirth = new DateTime(2023, 5, 30, 2, 5, 57, 426, DateTimeKind.Local).AddTicks(2843),
                            Email = "Carleton34@gmail.com",
                            FirstName = "Carleton",
                            FullName = "Carleton Mitchell",
                            Gender = false,
                            LastName = "Mitchell",
                            Phone = "674-592-8274",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/394.jpg",
                            Student_code = "StudentD5X2DmwU"
                        },
                        new
                        {
                            Id = 42,
                            Address = "51614 Odie Valleys, Zackaryshire, Armenia",
                            City = "West Kaydentown",
                            DateOfBirth = new DateTime(2022, 11, 21, 17, 7, 49, 377, DateTimeKind.Local).AddTicks(2130),
                            Email = "Minnie.Blanda@gmail.com",
                            FirstName = "Minnie",
                            FullName = "Minnie Blanda",
                            Gender = false,
                            LastName = "Blanda",
                            Phone = "846-802-3651 x83241",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/452.jpg",
                            Student_code = "Student9R2ZzS1S"
                        },
                        new
                        {
                            Id = 43,
                            Address = "9103 Jeanie Gateway, Hudsonmouth, Mauritania",
                            City = "Lake Mina",
                            DateOfBirth = new DateTime(2023, 4, 9, 11, 23, 57, 627, DateTimeKind.Local).AddTicks(9412),
                            Email = "Liliana_Hettinger@hotmail.com",
                            FirstName = "Liliana",
                            FullName = "Liliana Hettinger",
                            Gender = true,
                            LastName = "Hettinger",
                            Phone = "606-927-9309",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/446.jpg",
                            Student_code = "StudentaE4UwL6F"
                        },
                        new
                        {
                            Id = 44,
                            Address = "03741 Isadore Freeway, Alexzanderberg, Niue",
                            City = "Kreigerport",
                            DateOfBirth = new DateTime(2023, 6, 25, 15, 18, 25, 818, DateTimeKind.Local).AddTicks(1359),
                            Email = "Icie.Hyatt4@hotmail.com",
                            FirstName = "Icie",
                            FullName = "Icie Hyatt",
                            Gender = false,
                            LastName = "Hyatt",
                            Phone = "267.544.4843",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/469.jpg",
                            Student_code = "Student5jTkiNfC"
                        },
                        new
                        {
                            Id = 45,
                            Address = "53999 Antonia Turnpike, East Cornellchester, Uzbekistan",
                            City = "Alvahstad",
                            DateOfBirth = new DateTime(2023, 5, 26, 2, 14, 22, 582, DateTimeKind.Local).AddTicks(5946),
                            Email = "Laverne.West@yahoo.com",
                            FirstName = "Laverne",
                            FullName = "Laverne West",
                            Gender = false,
                            LastName = "West",
                            Phone = "(453) 608-4146",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/506.jpg",
                            Student_code = "Student6a50vW1b"
                        },
                        new
                        {
                            Id = 46,
                            Address = "51811 Sienna Mews, Kihntown, Moldova",
                            City = "Lake Enaberg",
                            DateOfBirth = new DateTime(2022, 11, 11, 9, 9, 52, 662, DateTimeKind.Local).AddTicks(3298),
                            Email = "Jessica99@gmail.com",
                            FirstName = "Jessica",
                            FullName = "Jessica Herman",
                            Gender = false,
                            LastName = "Herman",
                            Phone = "859.940.8165 x020",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/472.jpg",
                            Student_code = "StudentvOCWu0Nm"
                        },
                        new
                        {
                            Id = 47,
                            Address = "3581 Carole Burgs, Raeganfurt, Bouvet Island (Bouvetoya)",
                            City = "Mariannebury",
                            DateOfBirth = new DateTime(2023, 5, 3, 1, 3, 59, 834, DateTimeKind.Local).AddTicks(3887),
                            Email = "Zander.Lang77@hotmail.com",
                            FirstName = "Zander",
                            FullName = "Zander Lang",
                            Gender = false,
                            LastName = "Lang",
                            Phone = "1-833-441-8657 x6504",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/722.jpg",
                            Student_code = "Student7fVW29aV"
                        },
                        new
                        {
                            Id = 48,
                            Address = "46331 Kihn Ford, Kingland, Egypt",
                            City = "Lake Miltonburgh",
                            DateOfBirth = new DateTime(2023, 1, 2, 18, 1, 9, 920, DateTimeKind.Local).AddTicks(9634),
                            Email = "Cleve15@hotmail.com",
                            FirstName = "Cleve",
                            FullName = "Cleve Berge",
                            Gender = false,
                            LastName = "Berge",
                            Phone = "764.683.7150 x202",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/342.jpg",
                            Student_code = "StudentfTkhktyz"
                        },
                        new
                        {
                            Id = 49,
                            Address = "4504 Fisher Brooks, Allenefurt, Timor-Leste",
                            City = "North Jevonport",
                            DateOfBirth = new DateTime(2023, 9, 10, 15, 40, 31, 526, DateTimeKind.Local).AddTicks(9364),
                            Email = "Price.Howell39@gmail.com",
                            FirstName = "Price",
                            FullName = "Price Howell",
                            Gender = false,
                            LastName = "Howell",
                            Phone = "866.545.7221",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/437.jpg",
                            Student_code = "Student5akLmWSw"
                        },
                        new
                        {
                            Id = 50,
                            Address = "104 Hills Tunnel, South Bessieland, Somalia",
                            City = "Blairhaven",
                            DateOfBirth = new DateTime(2023, 7, 11, 15, 0, 17, 25, DateTimeKind.Local).AddTicks(697),
                            Email = "Jevon.Tromp@gmail.com",
                            FirstName = "Jevon",
                            FullName = "Jevon Tromp",
                            Gender = false,
                            LastName = "Tromp",
                            Phone = "(787) 913-6102",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/276.jpg",
                            Student_code = "StudentZh58PDKB"
                        });
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.Priority", "Priority")
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Priority");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
