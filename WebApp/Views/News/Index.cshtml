@model IEnumerable<LibraryModels.News>

@{
    ViewData["Title"] = "Index";
    var i = 0;
    Layout = "_BackendLayout";
}

<h1>News</h1>

<div class="body-wrapper">

    <!-- Change this content if you need to modify -->
    <div class="col-lg-12 d-flex align-items-stretch">
        <div class="card w-100">
            <div class="card-body p-4">            
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="card-title fw-semibold mb-4">News</h5>
                    <a class="btn btn-primary" asp-action="News">News List</a>
                </div>
                <a class="btn btn-info" asp-action="Create">Create News</a>
                <div class="table-responsive">
                    <table class="table text-nowrap mb-0 align-middle">
                        <thead class="text-dark fs-4">
                            <tr class="text-center">
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">#</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">Titile</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">Content</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">Author</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">PublishDate</h6>
                                </th>
                                <th class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">Image</h6>
                                    </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr class="text-center">
                                    <td class="border-bottom-0"><h6 class="fw-semibold mb-0">@i</h6></td>
                                    <td class="border-bottom-0">
                                        <p class="mb-0 fw-normal"> @TruncateText(item.Title,26)</p>
                                    </td>
                                    <td class="border-bottom-0">
                                        <p class="mb-0 fw-normal">@TruncateText(item.Content,50)</p>
                                    </td>
                                    <td class="border-bottom-0">
                                        <p class="mb-0 fw-normal">@Html.DisplayFor(modelItem => item.Author)</p>
                                    </td>
                                    <td class="border-bottom-0">
                                        <div class="d-flex align-items-center gap-2">
                                            <p class="mb-0 fw-normal">@Html.DisplayFor(modelItem => item.PublishDate)</p>
                                        </div>
                                    </td>
                                    <td class="border-bottom-0">
                                            <p class="mb-0 fw-normal">

                                                <img src="@Url.Content("~/images/News/"+item.Img)" width="50" height="50">

                                            </p>
                                        </td>

                                    <td class="border-bottom-0">
                                        <div class="d-flex align-items-center gap-2">
@*                                            <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-primary">Edit</a>
*@
                                            <a asp-action="Hidden" asp-route-id="@item.ID" class="btn btn-primary">Hidden</a>
                                        </div>
                                    </td>
                                </tr>
                                i++;
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@functions {
    public string TruncateText(string text, int maxLength)
    {
        if (text.Length > maxLength)
        {
            return text.Substring(0, maxLength) + "...";
        }
        return text;
    }
}