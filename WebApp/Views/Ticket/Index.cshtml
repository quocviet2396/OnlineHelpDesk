@{
    int ids = 1;
    Layout = ViewData["Layout"]?.ToString() ?? "_BackendLayout";
    var status = ViewData["Status"] as IEnumerable<LibraryModels.TicketStatus>;
    var priority = ViewData["Priority"] as IEnumerable<LibraryModels.Priority>;
    var supp = ViewData["Supporter"] as IEnumerable<LibraryModels.Users>;
    var cate = ViewData["Category"] as IEnumerable<LibraryModels.Facilities>;

    var currentFilter = TempData["currentFilter"] as string;
    var catego = TempData["category"] as string;
    var prio = TempData["priority"] as string;
    var sup = TempData["supporter"] as string;
    var sta = TempData["status"] as string;
}
@functions {
    public string GetSortDirection(string? propertySort, string? nameSort, string currentSort, string nameToSort)
    {
        return string.IsNullOrEmpty(propertySort) ? currentSort : (nameSort == nameToSort ? propertySort : currentSort);
    }
}

@model IEnumerable<LibraryModels.Ticket>
@if (TempData["Message"] != null)
{
    <div class="alert alert-@TempData["MessageType"]" role="alert">
        @TempData["Message"]
    </div>
}
<div class="body-wrapper">
    <!-- Change this content if you need to modify -->
    <div class="col-lg-12 d-flex align-items-stretch">
        <div class="card w-100">
            <div class="card-body p-4">
                <h5 class="card-title fw-semibold mb-4">Ticket Status</h5>
                <a class="btn btn-info" asp-action="Create" asp-controller="Ticket">Create New Ticket</a>

                <div class="card p-4 mt-1">
                    <h4 class="card-title">Filter</h4>
                    <form id="filterForm" asp-controller="Ticket" asp-action="Index" method="get">
                        <div class="d-flex card-body gap-3 justify-content-between align-items-center ">
                            <select name="status" class="form-select">
                                <option>--Select status--</option>
                                @foreach (var item in status)
                                {
                                    <option value="TicketStatusId_@item.Id">@item.Name</option>
                                }
                            </select>
                            <select name="priority" class="form-select">
                                <option>--Select priority--</option>
                                @foreach (var item in priority)
                                {
                                    <option value="PriorityId_@item.Id">@item.Name</option>
                                }
                            </select>
                            <select name="supporter" class="form-select">
                                <option>--Select Supporter--</option>
                                @foreach (var item in supp)
                                {
                                    <option value="SupporterId_@item.Id">@item.Email</option>
                                }
                            </select>
                            <select name="category" class="form-select">
                                <option>--Select category--</option>
                                @foreach (var item in cate)
                                {
                                    <option value="CategoryId_@item.Id">@item.Name</option>
                                }
                            </select>
                        </div>

                        <div class="d-flex justify-content-around">
                            <div>
                                <label>Select date CreateDate</label>
                                <div class="d-flex gap-2">
                                    <input type="date" name="CDate" class="form-control" />
                                    <input type="date" name="CDate" class="form-control" />
                                </div>
                            </div>

                            <div>
                                <label>Select date ModifiDate</label>
                                <div class="d-flex gap-2">
                                    <input type="date" name="MDate" class="form-control" />
                                    <input type="date" name="MDate" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <button class="btn btn-primary mt-2" type="submit">Filter</button>
                    </form>
                </div>
                <div class="table-responsive">
                    <table class="table text-nowrap mb-0 align-middle">
                        <thead class="text-dark fs-4">
                            <tr class="text-center">
                                <th class="border-bottom-0">
                                    <h4 class="fw-semibold mb-0">#</h4>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">
                                        <a asp-route-currentSort="@GetSortDirection(ViewData["propertySort"]?.ToString(),ViewData["nameSort"]?.ToString(),"asc_Title","Title")"
                                           asp-route-currentFilter="@ViewData["currentFilter"]"> @Html.DisplayNameFor(model => model.Title)</a>
                                    </h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.Description)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.CreateDate)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.ModifiedDate)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.Attachment)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.TicketStatus)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">Category</h6>

                                </th>
                                <th class="border-bottom-0">
                                    <h6 @ViewBag.us class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.Creator)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.Supporter)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">Supporter @Html.DisplayNameFor(model => model.feedback)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.Priority)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">Action</h6>
                                </th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model)
                            {
                                <tr class="text-center">
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0"> @ids </h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Title)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Description)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.CreateDate)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.ModifiedDate)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">
                                            @if (!string.IsNullOrEmpty(item.Attachment))
                                            {
                                                <img src="~/images/attachment/@item.Attachment" class="img-thumbnail" width="100" height="100" />
                                            }
                                        </h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.TicketStatus.Name)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Category.Name)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 @ViewBag.us class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Creator.Email)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Supporter.Email)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.feedback)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Priority.Name)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <div class="d-flex align-items-center gap-2" style="justify-content:center">
                                            @if (item.feedback == null)
                                            {
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning"><i class="fa fa-gear"></i></a>
                                            }
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info"><i class="fa fa-info-circle"></i></a>
                                            @if (item.TicketStatusId == null && item.feedback == null && item.PriorityId == null && item.SupporterId == null)
                                            {
                                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger"><i class="fa fa-trash"></i></a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                                ids++;
                            }

                        </tbody>
                    </table>
                    @{
                        var Totalpage = (int)ViewData["totalPages"];
                        var PanigationInfo = Model as WebApp.Ultils.Paginated<LibraryModels.Ticket>;
                    }
                    @if (PanigationInfo != null)
                    {
                        <div class=" mt-5 ">
                            <div class="d-flex w-full items-center justify-content-center align-items-center gap-2">
                                @if (PanigationInfo.PageIndex > 1)
                                {
                                    <a class="btn btn-primary" asp-route-pageIndex="@(1)" asp-route-currentFilter="@currentFilter" asp-route-category="@catego" asp-route-supporter="@sup" asp-route-status="@sta" asp-route-priority="@prio">First</a>

                                    <a class="btn btn-primary" asp-route-pageIndex="@(PanigationInfo.PageIndex -1)" asp-route-currentFilter="@currentFilter" asp-route-category="@catego" asp-route-supporter="@sup" asp-route-status="@sta" asp-route-priority="@prio">Prev</a>
                                }
                                @for (int i = 1; i <= Totalpage; i++)
                                {
                                    <a class="btn btn-outline-primary @(PanigationInfo.PageIndex == i ? "active" : string.Empty)" asp-route-pageIndex="@(i)" asp-route-currentFilter="@currentFilter" asp-route-category="@catego" asp-route-supporter="@sup" asp-route-status="@sta" asp-route-priority="@prio">@(i)</a>
                                }

                                @if (PanigationInfo.PageIndex < PanigationInfo?.TotalPages)
                                {
                                    <a class="btn btn-primary" asp-route-pageIndex="@(PanigationInfo.PageIndex +1)" asp-route-currentFilter="@currentFilter" asp-route-category="@catego" asp-route-supporter="@sup" asp-route-status="@sta" asp-route-priority="@prio">Next</a>

                                    <a class="btn btn-primary" asp-route-pageIndex="@(PanigationInfo.TotalPages)" asp-route-currentFilter="@currentFilter" asp-route-category="@catego" asp-route-supporter="@sup" asp-route-status="@sta" asp-route-priority="@prio">Last</a>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- End change -->

</div>


@section Scripts{

    <script>// Lắng nghe sự kiện thay đổi của dropdown

        var statusSelect = document.querySelector('select[name="status"]');
        statusSelect.addEventListener("change", () => {
            console.log(statusSelect.value)
        })
        document.getElementById('filterForm').addEventListener('submit', function (event) {
            var statusSelect = document.querySelector('select[name="status"]');
            var prioritySelect = document.querySelector('select[name="priority"]');
            var supporterSelect = document.querySelector('select[name="supporter"]');
            var categorySelect = document.querySelector('select[name="category"]');
            var CDate = document.querySelectorAll("input[name='CDate']")
            var MDate = document.querySelectorAll("input[name='MDate']")

            // Kiểm tra từng select box và loại bỏ nếu không được chọn
            if (statusSelect.value === "--Select status--") {
                statusSelect.remove();
            }
            if (prioritySelect.value === "--Select priority--") {
                prioritySelect.remove();
            }
            if (supporterSelect.value === "--Select Supporter--") {
                supporterSelect.remove();
            }
            if (categorySelect.value === "--Select category--") {
                categorySelect.remove();
            }
            CDate.forEach((item) => {
                if (item.value == "") {
                    item.remove()
                }

                item.addEventListener('input', function () {
                    formatInputDate(item);
                });
            })

            MDate.forEach((item) => {
                if (item.value == "") {
                    item.remove()
                }

                item.addEventListener('input', function () {
                    formatInputDate(item);
                });
            })

            function formatInputDate(input) {
                var dateValue = input.value;
                if (dateValue) {
                    var inputDate = new Date(dateValue);
                    if (!isNaN(inputDate.getTime())) {
                        var formattedDate = inputDate.toLocaleDateString('en-GB'); // Định dạng dd/MM/yyyy
                        input.value = formattedDate;
                    }
                }
            }
        });</script>
}
