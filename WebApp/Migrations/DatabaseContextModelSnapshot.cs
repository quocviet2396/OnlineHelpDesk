// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewId")
                        .HasColumnType("int");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("tbComments");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbNews");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.Property<string>("feedback")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "I4xfeCHY",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$MEJen6VBOqef3CpAIorALuwbcVRDP1Q2zHAiG76Ktp.JyWIhzvKfe",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "WobSeu7q",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$/vjVehJmvQGQSW1U5V4ph.rcHM.Ohtzrq7rMOELszI9tCbJmv6kqW",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "HD1cfIwo",
                            Email = "user@gmail.com",
                            Password = "$2a$11$pcJ.W3AJ9CyaBWeSJNxeTuQm0lE8Axy6QtWavcFbrhqRPudQUxOrG",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "60773 Deja Forest, Jovannyborough, Bhutan",
                            City = "Balistrerifurt",
                            DateOfBirth = new DateTime(2023, 6, 12, 16, 6, 24, 798, DateTimeKind.Local).AddTicks(1929),
                            Email = "onhdexmapletest1991@gmail.com",
                            FirstName = "Brooke",
                            FullName = "Brooke Haag",
                            Gender = true,
                            LastName = "Haag",
                            Phone = "718.365.2502 x27336",
                            Student_code = "StudentOSepvj4Q"
                        },
                        new
                        {
                            Id = 3,
                            Address = "4922 Malachi Haven, New Mauriciostad, Uzbekistan",
                            City = "Keaganshire",
                            DateOfBirth = new DateTime(2023, 6, 13, 6, 27, 22, 818, DateTimeKind.Local).AddTicks(585),
                            Email = "onhdexmapletest1993@gmail.com",
                            FirstName = "Gene",
                            FullName = "Gene Kilback",
                            Gender = false,
                            LastName = "Kilback",
                            Phone = "1-319-357-4831 x635",
                            Student_code = "Student77I2nmA7"
                        },
                        new
                        {
                            Id = 5,
                            Address = "00286 Haley Green, Kossbury, Chile",
                            City = "New Carter",
                            DateOfBirth = new DateTime(2022, 11, 3, 1, 20, 34, 302, DateTimeKind.Local).AddTicks(8444),
                            Email = "onhdexmapletest1995@gmail.com",
                            FirstName = "Greg",
                            FullName = "Greg Daugherty",
                            Gender = true,
                            LastName = "Daugherty",
                            Phone = "1-505-549-4274",
                            Student_code = "StudentPftzSS6B"
                        },
                        new
                        {
                            Id = 7,
                            Address = "906 Ziemann Key, South Reginaldbury, Antarctica (the territory South of 60 deg S)",
                            City = "Kulasborough",
                            DateOfBirth = new DateTime(2023, 3, 4, 11, 30, 48, 110, DateTimeKind.Local).AddTicks(7506),
                            Email = "onhdexmapletest1997@gmail.com",
                            FirstName = "Palma",
                            FullName = "Palma King",
                            Gender = true,
                            LastName = "King",
                            Phone = "1-783-972-4639",
                            Student_code = "StudentHczbmKnu"
                        },
                        new
                        {
                            Id = 9,
                            Address = "7942 Sophie Cliffs, Lottieborough, Nepal",
                            City = "Quigleyburgh",
                            DateOfBirth = new DateTime(2023, 8, 16, 11, 38, 7, 14, DateTimeKind.Local).AddTicks(1372),
                            Email = "onhdexmapletest1999@gmail.com",
                            FirstName = "Gertrude",
                            FullName = "Gertrude Ullrich",
                            Gender = true,
                            LastName = "Ullrich",
                            Phone = "865.718.2254 x5179",
                            Student_code = "StudentI7LGGI4c"
                        },
                        new
                        {
                            Id = 11,
                            Address = "5773 Jacobs Route, Jacobsonfurt, Kazakhstan",
                            City = "North Kobymouth",
                            DateOfBirth = new DateTime(2023, 6, 15, 10, 33, 28, 254, DateTimeKind.Local).AddTicks(8449),
                            Email = "onhdexmapletest19911@gmail.com",
                            FirstName = "Maryam",
                            FullName = "Maryam Purdy",
                            Gender = false,
                            LastName = "Purdy",
                            Phone = "1-554-308-3019 x694",
                            Student_code = "StudenttA7Gpn64"
                        },
                        new
                        {
                            Id = 13,
                            Address = "952 Eveline Wall, Lake Nathaniel, Kuwait",
                            City = "Flatleyview",
                            DateOfBirth = new DateTime(2023, 2, 16, 9, 35, 40, 9, DateTimeKind.Local).AddTicks(5478),
                            Email = "onhdexmapletest19913@gmail.com",
                            FirstName = "Belle",
                            FullName = "Belle Volkman",
                            Gender = true,
                            LastName = "Volkman",
                            Phone = "(701) 618-8347 x4163",
                            Student_code = "StudentQBShxnHg"
                        },
                        new
                        {
                            Id = 15,
                            Address = "8800 Caroline Stravenue, West Jefferey, Spain",
                            City = "North Liana",
                            DateOfBirth = new DateTime(2023, 2, 28, 6, 18, 32, 204, DateTimeKind.Local).AddTicks(2388),
                            Email = "onhdexmapletest19915@gmail.com",
                            FirstName = "Ceasar",
                            FullName = "Ceasar Will",
                            Gender = false,
                            LastName = "Will",
                            Phone = "(294) 747-1018",
                            Student_code = "StudentNxhIFh93"
                        },
                        new
                        {
                            Id = 17,
                            Address = "1207 Brendon Manor, South Naomiehaven, Tokelau",
                            City = "Sandrahaven",
                            DateOfBirth = new DateTime(2022, 12, 3, 4, 44, 50, 835, DateTimeKind.Local).AddTicks(8800),
                            Email = "onhdexmapletest19917@gmail.com",
                            FirstName = "Marge",
                            FullName = "Marge Emmerich",
                            Gender = true,
                            LastName = "Emmerich",
                            Phone = "1-219-562-1368 x91518",
                            Student_code = "StudentySTJvVj4"
                        },
                        new
                        {
                            Id = 19,
                            Address = "658 Balistreri Cliffs, East Jayneville, Guinea-Bissau",
                            City = "North Gideonburgh",
                            DateOfBirth = new DateTime(2023, 8, 9, 7, 31, 2, 368, DateTimeKind.Local).AddTicks(2713),
                            Email = "onhdexmapletest19919@gmail.com",
                            FirstName = "Dangelo",
                            FullName = "Dangelo O'Reilly",
                            Gender = false,
                            LastName = "O'Reilly",
                            Phone = "248-461-3170",
                            Student_code = "StudentDDS6FG03"
                        },
                        new
                        {
                            Id = 21,
                            Address = "5831 Spencer Cliffs, Josephinefort, Swaziland",
                            City = "East Corinetown",
                            DateOfBirth = new DateTime(2023, 2, 28, 11, 26, 16, 657, DateTimeKind.Local).AddTicks(2665),
                            Email = "onhdexmapletest19921@gmail.com",
                            FirstName = "Athena",
                            FullName = "Athena Ebert",
                            Gender = true,
                            LastName = "Ebert",
                            Phone = "704-280-7039 x0422",
                            Student_code = "StudentaLghlM7e"
                        },
                        new
                        {
                            Id = 23,
                            Address = "5605 Derrick Prairie, New Pinkie, Guadeloupe",
                            City = "Langhaven",
                            DateOfBirth = new DateTime(2023, 4, 30, 4, 4, 58, 206, DateTimeKind.Local).AddTicks(3962),
                            Email = "onhdexmapletest19923@gmail.com",
                            FirstName = "Maverick",
                            FullName = "Maverick Mueller",
                            Gender = true,
                            LastName = "Mueller",
                            Phone = "499-449-6551",
                            Student_code = "StudentN6btcKpe"
                        },
                        new
                        {
                            Id = 25,
                            Address = "4663 Kihn Mills, Kesslerhaven, Madagascar",
                            City = "Port Abdullahland",
                            DateOfBirth = new DateTime(2023, 1, 25, 21, 14, 8, 741, DateTimeKind.Local).AddTicks(3961),
                            Email = "onhdexmapletest19925@gmail.com",
                            FirstName = "Gail",
                            FullName = "Gail Boyle",
                            Gender = false,
                            LastName = "Boyle",
                            Phone = "251-937-4702 x1108",
                            Student_code = "StudentvGoQCxN2"
                        },
                        new
                        {
                            Id = 27,
                            Address = "6479 Kyler Lights, Kingborough, Dominican Republic",
                            City = "Wunschchester",
                            DateOfBirth = new DateTime(2023, 4, 6, 3, 52, 54, 466, DateTimeKind.Local).AddTicks(727),
                            Email = "onhdexmapletest19927@gmail.com",
                            FirstName = "Jasmin",
                            FullName = "Jasmin Cartwright",
                            Gender = true,
                            LastName = "Cartwright",
                            Phone = "893.576.9663 x96570",
                            Student_code = "StudentDu0fRhcv"
                        },
                        new
                        {
                            Id = 29,
                            Address = "961 Billie Well, West Ashtyn, Libyan Arab Jamahiriya",
                            City = "North Ally",
                            DateOfBirth = new DateTime(2023, 3, 7, 21, 28, 0, 955, DateTimeKind.Local).AddTicks(5947),
                            Email = "onhdexmapletest19929@gmail.com",
                            FirstName = "Marion",
                            FullName = "Marion Schowalter",
                            Gender = false,
                            LastName = "Schowalter",
                            Phone = "(838) 235-1145 x8514",
                            Student_code = "StudentsCeIlsIy"
                        },
                        new
                        {
                            Id = 31,
                            Address = "741 Fay Valleys, North Mathew, Isle of Man",
                            City = "Lake Arlo",
                            DateOfBirth = new DateTime(2022, 10, 5, 7, 18, 44, 482, DateTimeKind.Local).AddTicks(3064),
                            Email = "onhdexmapletest19931@gmail.com",
                            FirstName = "Lenore",
                            FullName = "Lenore Herzog",
                            Gender = false,
                            LastName = "Herzog",
                            Phone = "923.887.2356 x1482",
                            Student_code = "StudentLZKRkYDP"
                        },
                        new
                        {
                            Id = 33,
                            Address = "5123 Leanne Centers, Dakotaville, Pakistan",
                            City = "Bartellville",
                            DateOfBirth = new DateTime(2023, 3, 29, 17, 48, 35, 199, DateTimeKind.Local).AddTicks(2873),
                            Email = "onhdexmapletest19933@gmail.com",
                            FirstName = "Virginia",
                            FullName = "Virginia Hansen",
                            Gender = false,
                            LastName = "Hansen",
                            Phone = "1-644-907-9105 x48930",
                            Student_code = "StudentbSNH31k3"
                        },
                        new
                        {
                            Id = 35,
                            Address = "623 Volkman Ridges, South Alitown, Armenia",
                            City = "New Carissamouth",
                            DateOfBirth = new DateTime(2023, 3, 4, 6, 2, 9, 257, DateTimeKind.Local).AddTicks(7726),
                            Email = "onhdexmapletest19935@gmail.com",
                            FirstName = "Alfonzo",
                            FullName = "Alfonzo Skiles",
                            Gender = false,
                            LastName = "Skiles",
                            Phone = "(381) 594-3493 x6879",
                            Student_code = "StudentZOOov2rK"
                        },
                        new
                        {
                            Id = 37,
                            Address = "18477 Ahmad Center, South Bradley, Cambodia",
                            City = "West Raina",
                            DateOfBirth = new DateTime(2023, 8, 21, 0, 45, 42, 627, DateTimeKind.Local).AddTicks(4243),
                            Email = "onhdexmapletest19937@gmail.com",
                            FirstName = "Robb",
                            FullName = "Robb Frami",
                            Gender = true,
                            LastName = "Frami",
                            Phone = "1-644-436-4512 x4390",
                            Student_code = "StudenteZ5riMmO"
                        },
                        new
                        {
                            Id = 39,
                            Address = "873 Hobart Ridges, East Saul, Gibraltar",
                            City = "Mrazmouth",
                            DateOfBirth = new DateTime(2022, 12, 29, 13, 29, 15, 58, DateTimeKind.Local).AddTicks(1296),
                            Email = "onhdexmapletest19939@gmail.com",
                            FirstName = "Wyman",
                            FullName = "Wyman Haag",
                            Gender = true,
                            LastName = "Haag",
                            Phone = "(713) 237-8808",
                            Student_code = "Student63LaooCr"
                        },
                        new
                        {
                            Id = 41,
                            Address = "0201 Anissa Circle, Wilfridmouth, Tanzania",
                            City = "South Reinholdland",
                            DateOfBirth = new DateTime(2023, 3, 20, 5, 59, 36, 977, DateTimeKind.Local).AddTicks(9294),
                            Email = "onhdexmapletest19941@gmail.com",
                            FirstName = "Marley",
                            FullName = "Marley Wunsch",
                            Gender = true,
                            LastName = "Wunsch",
                            Phone = "1-470-644-9247 x74088",
                            Student_code = "StudentDt5qbBRz"
                        },
                        new
                        {
                            Id = 43,
                            Address = "70096 Huels Brooks, Budmouth, Afghanistan",
                            City = "South Bennie",
                            DateOfBirth = new DateTime(2023, 9, 6, 0, 25, 57, 914, DateTimeKind.Local).AddTicks(9529),
                            Email = "onhdexmapletest19943@gmail.com",
                            FirstName = "Kathryne",
                            FullName = "Kathryne Harvey",
                            Gender = true,
                            LastName = "Harvey",
                            Phone = "784-669-8304",
                            Student_code = "StudentIMiWaxQq"
                        },
                        new
                        {
                            Id = 45,
                            Address = "775 Queen Highway, New Emily, Saint Barthelemy",
                            City = "Wavaville",
                            DateOfBirth = new DateTime(2023, 3, 14, 18, 46, 35, 47, DateTimeKind.Local).AddTicks(4907),
                            Email = "onhdexmapletest19945@gmail.com",
                            FirstName = "Haylee",
                            FullName = "Haylee Auer",
                            Gender = true,
                            LastName = "Auer",
                            Phone = "820.468.3553",
                            Student_code = "StudentytOJKjhl"
                        },
                        new
                        {
                            Id = 47,
                            Address = "0302 Samson Ridge, Lake Scottyville, Zambia",
                            City = "Pouroshaven",
                            DateOfBirth = new DateTime(2023, 5, 13, 16, 34, 2, 258, DateTimeKind.Local).AddTicks(9406),
                            Email = "onhdexmapletest19947@gmail.com",
                            FirstName = "Imogene",
                            FullName = "Imogene Jenkins",
                            Gender = false,
                            LastName = "Jenkins",
                            Phone = "1-538-904-9854 x066",
                            Student_code = "Student5tKdpKET"
                        },
                        new
                        {
                            Id = 49,
                            Address = "928 Justen Courts, Port Maynardburgh, Mauritania",
                            City = "West Kenya",
                            DateOfBirth = new DateTime(2022, 10, 26, 3, 29, 23, 944, DateTimeKind.Local).AddTicks(7553),
                            Email = "onhdexmapletest19949@gmail.com",
                            FirstName = "Emil",
                            FullName = "Emil Parisian",
                            Gender = false,
                            LastName = "Parisian",
                            Phone = "473-349-1142",
                            Student_code = "StudentE8v5KQCb"
                        },
                        new
                        {
                            Id = 51,
                            Address = "615 Pasquale Orchard, Osbaldostad, Netherlands Antilles",
                            City = "Isaiberg",
                            DateOfBirth = new DateTime(2023, 8, 22, 17, 52, 36, 418, DateTimeKind.Local).AddTicks(654),
                            Email = "onhdexmapletest19951@gmail.com",
                            FirstName = "Zula",
                            FullName = "Zula Kautzer",
                            Gender = true,
                            LastName = "Kautzer",
                            Phone = "1-317-542-7375 x45667",
                            Student_code = "StudentvzWmOm0k"
                        },
                        new
                        {
                            Id = 53,
                            Address = "206 Huel Parkways, North Cheyanne, Albania",
                            City = "Port Maybelletown",
                            DateOfBirth = new DateTime(2023, 9, 5, 22, 50, 19, 159, DateTimeKind.Local).AddTicks(2573),
                            Email = "onhdexmapletest19953@gmail.com",
                            FirstName = "Ima",
                            FullName = "Ima Wyman",
                            Gender = true,
                            LastName = "Wyman",
                            Phone = "(869) 654-3845 x18160",
                            Student_code = "StudentzME8L9XM"
                        },
                        new
                        {
                            Id = 55,
                            Address = "66378 Eugene Orchard, Runolfsdottirfurt, Moldova",
                            City = "Jailynfort",
                            DateOfBirth = new DateTime(2023, 3, 27, 19, 36, 16, 528, DateTimeKind.Local).AddTicks(8507),
                            Email = "onhdexmapletest19955@gmail.com",
                            FirstName = "Eladio",
                            FullName = "Eladio Zulauf",
                            Gender = false,
                            LastName = "Zulauf",
                            Phone = "1-986-458-8789",
                            Student_code = "Student7K2S632b"
                        },
                        new
                        {
                            Id = 57,
                            Address = "7376 Alia Pike, North Jensenport, Bhutan",
                            City = "Port Nikolas",
                            DateOfBirth = new DateTime(2022, 12, 27, 16, 59, 10, 709, DateTimeKind.Local).AddTicks(3619),
                            Email = "onhdexmapletest19957@gmail.com",
                            FirstName = "Roxanne",
                            FullName = "Roxanne O'Connell",
                            Gender = false,
                            LastName = "O'Connell",
                            Phone = "698-953-6059 x0533",
                            Student_code = "StudentiGWLy1cE"
                        },
                        new
                        {
                            Id = 59,
                            Address = "5745 Eduardo Junctions, Armstrongstad, Anguilla",
                            City = "East Luisabury",
                            DateOfBirth = new DateTime(2023, 4, 7, 16, 35, 43, 929, DateTimeKind.Local).AddTicks(2190),
                            Email = "onhdexmapletest19959@gmail.com",
                            FirstName = "Rodrick",
                            FullName = "Rodrick Price",
                            Gender = true,
                            LastName = "Price",
                            Phone = "809-691-5133",
                            Student_code = "StudentnboUdIfv"
                        },
                        new
                        {
                            Id = 61,
                            Address = "93632 Mayer Well, Port Jennie, Lao People's Democratic Republic",
                            City = "East Tyson",
                            DateOfBirth = new DateTime(2022, 11, 19, 23, 38, 27, 4, DateTimeKind.Local).AddTicks(5047),
                            Email = "onhdexmapletest19961@gmail.com",
                            FirstName = "Gabriel",
                            FullName = "Gabriel Koelpin",
                            Gender = true,
                            LastName = "Koelpin",
                            Phone = "844.639.1418",
                            Student_code = "StudentBuBUYncQ"
                        },
                        new
                        {
                            Id = 63,
                            Address = "9277 Palma Way, East Julesville, Belize",
                            City = "Port Rosie",
                            DateOfBirth = new DateTime(2023, 3, 3, 22, 44, 41, 43, DateTimeKind.Local).AddTicks(7480),
                            Email = "onhdexmapletest19963@gmail.com",
                            FirstName = "Monte",
                            FullName = "Monte Jerde",
                            Gender = true,
                            LastName = "Jerde",
                            Phone = "1-951-535-0270 x753",
                            Student_code = "StudentWeVRcfbO"
                        },
                        new
                        {
                            Id = 65,
                            Address = "04452 Heathcote Corner, Electaberg, Tokelau",
                            City = "New Monserrat",
                            DateOfBirth = new DateTime(2023, 8, 28, 10, 29, 17, 601, DateTimeKind.Local).AddTicks(8805),
                            Email = "onhdexmapletest19965@gmail.com",
                            FirstName = "Libby",
                            FullName = "Libby Fisher",
                            Gender = false,
                            LastName = "Fisher",
                            Phone = "973.360.6363 x41825",
                            Student_code = "StudentUqr8sysq"
                        },
                        new
                        {
                            Id = 67,
                            Address = "357 Stokes Centers, Kaceyhaven, Guam",
                            City = "Mooreland",
                            DateOfBirth = new DateTime(2023, 7, 8, 2, 22, 58, 222, DateTimeKind.Local).AddTicks(7094),
                            Email = "onhdexmapletest19967@gmail.com",
                            FirstName = "Lura",
                            FullName = "Lura Wilkinson",
                            Gender = true,
                            LastName = "Wilkinson",
                            Phone = "1-996-359-8870 x8911",
                            Student_code = "StudentLslARYEn"
                        },
                        new
                        {
                            Id = 69,
                            Address = "98987 Jaylen Viaduct, South Zoila, Tajikistan",
                            City = "Emmieport",
                            DateOfBirth = new DateTime(2023, 5, 12, 13, 33, 49, 545, DateTimeKind.Local).AddTicks(605),
                            Email = "onhdexmapletest19969@gmail.com",
                            FirstName = "Haley",
                            FullName = "Haley Aufderhar",
                            Gender = true,
                            LastName = "Aufderhar",
                            Phone = "(598) 264-1621 x202",
                            Student_code = "StudentmHMY1zsy"
                        },
                        new
                        {
                            Id = 71,
                            Address = "933 Daniel Summit, New Della, Barbados",
                            City = "West Erwin",
                            DateOfBirth = new DateTime(2023, 5, 31, 13, 2, 32, 352, DateTimeKind.Local).AddTicks(9766),
                            Email = "onhdexmapletest19971@gmail.com",
                            FirstName = "Devonte",
                            FullName = "Devonte Jenkins",
                            Gender = true,
                            LastName = "Jenkins",
                            Phone = "1-239-826-7216 x682",
                            Student_code = "Studenth4l1CGfY"
                        },
                        new
                        {
                            Id = 73,
                            Address = "996 Bode Tunnel, Quigleyland, Marshall Islands",
                            City = "New Golda",
                            DateOfBirth = new DateTime(2022, 10, 12, 6, 56, 30, 911, DateTimeKind.Local).AddTicks(9917),
                            Email = "onhdexmapletest19973@gmail.com",
                            FirstName = "Westley",
                            FullName = "Westley McDermott",
                            Gender = false,
                            LastName = "McDermott",
                            Phone = "576.619.2673",
                            Student_code = "StudentMZ863XkA"
                        },
                        new
                        {
                            Id = 75,
                            Address = "72500 Donato Prairie, Lake Orlandberg, Slovakia (Slovak Republic)",
                            City = "Zoeymouth",
                            DateOfBirth = new DateTime(2023, 2, 9, 1, 49, 10, 201, DateTimeKind.Local).AddTicks(9514),
                            Email = "onhdexmapletest19975@gmail.com",
                            FirstName = "Sophia",
                            FullName = "Sophia Abernathy",
                            Gender = false,
                            LastName = "Abernathy",
                            Phone = "400.671.7250",
                            Student_code = "StudentCSIkfAFX"
                        },
                        new
                        {
                            Id = 77,
                            Address = "70503 Zulauf Camp, West Chadburgh, French Guiana",
                            City = "North Mauricio",
                            DateOfBirth = new DateTime(2023, 9, 18, 12, 35, 53, 697, DateTimeKind.Local).AddTicks(8941),
                            Email = "onhdexmapletest19977@gmail.com",
                            FirstName = "Fabian",
                            FullName = "Fabian Zieme",
                            Gender = true,
                            LastName = "Zieme",
                            Phone = "224.880.5956 x988",
                            Student_code = "StudentNrOF0gc5"
                        },
                        new
                        {
                            Id = 79,
                            Address = "889 Leslie Mills, Port Rethabury, Hong Kong",
                            City = "West D'angelo",
                            DateOfBirth = new DateTime(2023, 7, 10, 14, 44, 11, 430, DateTimeKind.Local).AddTicks(7540),
                            Email = "onhdexmapletest19979@gmail.com",
                            FirstName = "Arthur",
                            FullName = "Arthur Lemke",
                            Gender = true,
                            LastName = "Lemke",
                            Phone = "(988) 286-2621 x208",
                            Student_code = "StudentPhANBWuw"
                        },
                        new
                        {
                            Id = 81,
                            Address = "707 Spencer Plain, Port Brantview, Romania",
                            City = "Zulaufview",
                            DateOfBirth = new DateTime(2023, 1, 12, 6, 20, 56, 66, DateTimeKind.Local).AddTicks(8173),
                            Email = "onhdexmapletest19981@gmail.com",
                            FirstName = "Owen",
                            FullName = "Owen Ward",
                            Gender = false,
                            LastName = "Ward",
                            Phone = "602-354-2787 x72514",
                            Student_code = "StudentwQ1boHQB"
                        },
                        new
                        {
                            Id = 83,
                            Address = "96679 Hauck Pass, Cynthiaburgh, British Indian Ocean Territory (Chagos Archipelago)",
                            City = "West Veda",
                            DateOfBirth = new DateTime(2023, 9, 20, 14, 17, 33, 737, DateTimeKind.Local).AddTicks(634),
                            Email = "onhdexmapletest19983@gmail.com",
                            FirstName = "Tod",
                            FullName = "Tod Herman",
                            Gender = false,
                            LastName = "Herman",
                            Phone = "1-585-293-6236",
                            Student_code = "StudentHFu2UKVR"
                        },
                        new
                        {
                            Id = 85,
                            Address = "185 Grayce Lane, New Isidro, Latvia",
                            City = "Angelicaburgh",
                            DateOfBirth = new DateTime(2022, 11, 12, 18, 2, 18, 813, DateTimeKind.Local).AddTicks(545),
                            Email = "onhdexmapletest19985@gmail.com",
                            FirstName = "Aubrey",
                            FullName = "Aubrey Langworth",
                            Gender = true,
                            LastName = "Langworth",
                            Phone = "1-301-611-5203 x3945",
                            Student_code = "StudentlFKvWyEO"
                        },
                        new
                        {
                            Id = 87,
                            Address = "701 Elmer Ranch, Port Arno, Wallis and Futuna",
                            City = "Lake Ravenshire",
                            DateOfBirth = new DateTime(2023, 6, 11, 8, 50, 12, 924, DateTimeKind.Local).AddTicks(5184),
                            Email = "onhdexmapletest19987@gmail.com",
                            FirstName = "Zoey",
                            FullName = "Zoey Stroman",
                            Gender = false,
                            LastName = "Stroman",
                            Phone = "(564) 921-4909 x69258",
                            Student_code = "StudentFPM3i7PP"
                        },
                        new
                        {
                            Id = 89,
                            Address = "63267 Roberto Motorway, East Joannieshire, Trinidad and Tobago",
                            City = "West Jaiden",
                            DateOfBirth = new DateTime(2022, 12, 26, 13, 42, 57, 970, DateTimeKind.Local).AddTicks(4871),
                            Email = "onhdexmapletest19989@gmail.com",
                            FirstName = "Luciano",
                            FullName = "Luciano Schuppe",
                            Gender = true,
                            LastName = "Schuppe",
                            Phone = "563.582.0324 x8740",
                            Student_code = "StudentW7shYL8Z"
                        },
                        new
                        {
                            Id = 91,
                            Address = "8504 Russel Manors, New Jailynville, Venezuela",
                            City = "North Olgashire",
                            DateOfBirth = new DateTime(2022, 11, 28, 2, 12, 23, 481, DateTimeKind.Local).AddTicks(1143),
                            Email = "onhdexmapletest19991@gmail.com",
                            FirstName = "Elisa",
                            FullName = "Elisa Upton",
                            Gender = false,
                            LastName = "Upton",
                            Phone = "(450) 776-2040 x39327",
                            Student_code = "StudentSrbhP12z"
                        },
                        new
                        {
                            Id = 93,
                            Address = "423 Brielle Tunnel, Lake Katrina, Malaysia",
                            City = "Strackebury",
                            DateOfBirth = new DateTime(2023, 9, 20, 1, 25, 40, 870, DateTimeKind.Local).AddTicks(8250),
                            Email = "onhdexmapletest19993@gmail.com",
                            FirstName = "Tyson",
                            FullName = "Tyson Wilkinson",
                            Gender = true,
                            LastName = "Wilkinson",
                            Phone = "857-847-0356",
                            Student_code = "StudentEmGO6E8x"
                        },
                        new
                        {
                            Id = 95,
                            Address = "410 Williamson Parkways, Port Mariahchester, Equatorial Guinea",
                            City = "Lake Aiden",
                            DateOfBirth = new DateTime(2022, 11, 30, 3, 23, 16, 108, DateTimeKind.Local).AddTicks(1579),
                            Email = "onhdexmapletest19995@gmail.com",
                            FirstName = "Aurelie",
                            FullName = "Aurelie Spencer",
                            Gender = true,
                            LastName = "Spencer",
                            Phone = "977-566-7141",
                            Student_code = "StudentTsYNRmzS"
                        },
                        new
                        {
                            Id = 97,
                            Address = "7925 Sonia Isle, New Lavonberg, Peru",
                            City = "West Vernonborough",
                            DateOfBirth = new DateTime(2022, 11, 9, 21, 18, 44, 373, DateTimeKind.Local).AddTicks(9354),
                            Email = "onhdexmapletest19997@gmail.com",
                            FirstName = "Fidel",
                            FullName = "Fidel Schowalter",
                            Gender = false,
                            LastName = "Schowalter",
                            Phone = "608-238-8278",
                            Student_code = "StudentmVhgaaHu"
                        },
                        new
                        {
                            Id = 99,
                            Address = "82070 Oberbrunner Mall, New Zander, Pakistan",
                            City = "West Keshawn",
                            DateOfBirth = new DateTime(2022, 12, 20, 9, 42, 8, 966, DateTimeKind.Local).AddTicks(4499),
                            Email = "onhdexmapletest19999@gmail.com",
                            FirstName = "Deshawn",
                            FullName = "Deshawn Gusikowski",
                            Gender = true,
                            LastName = "Gusikowski",
                            Phone = "965.389.7580",
                            Student_code = "StudentzpJdmlvL"
                        });
                });

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.HasOne("LibraryModels.News", "News")
                        .WithMany("Comments")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.Priority", "Priority")
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Priority");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
