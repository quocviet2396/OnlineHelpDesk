// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230924055723_OHD")]
    partial class OHD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "superadmin@gmail.com",
                            Password = "123",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "supporter@gmail.com",
                            Password = "123",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Email = "user@gmail.com",
                            Password = "123",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "90829 Monroe Garden, Port Reginaldhaven, Vanuatu",
                            City = "Joshuaport",
                            DateOfBirth = new DateTime(2023, 5, 20, 13, 2, 7, 952, DateTimeKind.Local).AddTicks(8764),
                            Email = "Litzy43@hotmail.com",
                            FirstName = "Litzy",
                            FullName = "Litzy Johns",
                            Gender = true,
                            LastName = "Johns",
                            Phone = "(963) 999-3548 x805",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/589.jpg",
                            Student_code = "Studentso5mOluR"
                        },
                        new
                        {
                            Id = 2,
                            Address = "819 Pat Ports, Presleystad, Guyana",
                            City = "West Eribertostad",
                            DateOfBirth = new DateTime(2023, 7, 12, 14, 37, 54, 662, DateTimeKind.Local).AddTicks(7588),
                            Email = "Margaret.McGlynn@hotmail.com",
                            FirstName = "Margaret",
                            FullName = "Margaret McGlynn",
                            Gender = true,
                            LastName = "McGlynn",
                            Phone = "705.269.9160 x2270",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/953.jpg",
                            Student_code = "StudentUxfHDOBF"
                        },
                        new
                        {
                            Id = 3,
                            Address = "5746 Enoch Centers, Douglasport, British Indian Ocean Territory (Chagos Archipelago)",
                            City = "West Nina",
                            DateOfBirth = new DateTime(2023, 4, 28, 12, 7, 49, 544, DateTimeKind.Local).AddTicks(3333),
                            Email = "Guy55@gmail.com",
                            FirstName = "Guy",
                            FullName = "Guy Monahan",
                            Gender = true,
                            LastName = "Monahan",
                            Phone = "(480) 376-4507 x97829",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/319.jpg",
                            Student_code = "StudentNcWo5019"
                        },
                        new
                        {
                            Id = 4,
                            Address = "44380 Trantow Flat, North Jude, Antigua and Barbuda",
                            City = "South Dorcasside",
                            DateOfBirth = new DateTime(2022, 10, 5, 5, 47, 13, 492, DateTimeKind.Local).AddTicks(1942),
                            Email = "Stanford.Morar@gmail.com",
                            FirstName = "Stanford",
                            FullName = "Stanford Morar",
                            Gender = true,
                            LastName = "Morar",
                            Phone = "229-373-2285 x53099",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/659.jpg",
                            Student_code = "StudentIcpa62Zg"
                        },
                        new
                        {
                            Id = 5,
                            Address = "3348 Brionna Isle, Henriettechester, Turkey",
                            City = "East Viola",
                            DateOfBirth = new DateTime(2022, 10, 7, 0, 51, 16, 53, DateTimeKind.Local).AddTicks(6736),
                            Email = "Lewis53@hotmail.com",
                            FirstName = "Lewis",
                            FullName = "Lewis Blanda",
                            Gender = true,
                            LastName = "Blanda",
                            Phone = "520-404-0249 x121",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/564.jpg",
                            Student_code = "StudentZFfDPQjO"
                        },
                        new
                        {
                            Id = 6,
                            Address = "02061 Kunze Route, Haskelltown, Pakistan",
                            City = "Lake Arturo",
                            DateOfBirth = new DateTime(2023, 6, 27, 22, 29, 11, 63, DateTimeKind.Local).AddTicks(8422),
                            Email = "Consuelo40@hotmail.com",
                            FirstName = "Consuelo",
                            FullName = "Consuelo Kuphal",
                            Gender = false,
                            LastName = "Kuphal",
                            Phone = "1-287-317-8381 x72993",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/20.jpg",
                            Student_code = "Studentm2nnIKeR"
                        },
                        new
                        {
                            Id = 7,
                            Address = "4924 Bill Stream, Lake Mylene, Syrian Arab Republic",
                            City = "East Adonisview",
                            DateOfBirth = new DateTime(2023, 5, 11, 9, 10, 25, 359, DateTimeKind.Local).AddTicks(344),
                            Email = "Bradley.Towne24@gmail.com",
                            FirstName = "Bradley",
                            FullName = "Bradley Towne",
                            Gender = false,
                            LastName = "Towne",
                            Phone = "1-320-874-0317 x9463",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/497.jpg",
                            Student_code = "StudentY2nYLDEM"
                        },
                        new
                        {
                            Id = 8,
                            Address = "40408 Tad Loop, East Brent, Algeria",
                            City = "Lavontown",
                            DateOfBirth = new DateTime(2023, 5, 8, 13, 33, 52, 89, DateTimeKind.Local).AddTicks(7947),
                            Email = "Camren_Shields87@hotmail.com",
                            FirstName = "Camren",
                            FullName = "Camren Shields",
                            Gender = false,
                            LastName = "Shields",
                            Phone = "1-962-281-4641 x24183",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/188.jpg",
                            Student_code = "StudentRGpzUF5b"
                        },
                        new
                        {
                            Id = 9,
                            Address = "014 Prudence Crossing, Handland, Liberia",
                            City = "New Hattie",
                            DateOfBirth = new DateTime(2023, 3, 20, 17, 39, 38, 193, DateTimeKind.Local).AddTicks(171),
                            Email = "Daija.Mante92@hotmail.com",
                            FirstName = "Daija",
                            FullName = "Daija Mante",
                            Gender = false,
                            LastName = "Mante",
                            Phone = "246.354.2000 x2031",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/956.jpg",
                            Student_code = "StudentxZrouRin"
                        },
                        new
                        {
                            Id = 10,
                            Address = "2014 Patsy Island, Schroederview, Sierra Leone",
                            City = "Hauckville",
                            DateOfBirth = new DateTime(2023, 6, 1, 11, 12, 13, 254, DateTimeKind.Local).AddTicks(8437),
                            Email = "Eliane_Okuneva58@yahoo.com",
                            FirstName = "Eliane",
                            FullName = "Eliane Okuneva",
                            Gender = false,
                            LastName = "Okuneva",
                            Phone = "(836) 897-1244 x31238",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1018.jpg",
                            Student_code = "StudentDnaTu5Fk"
                        },
                        new
                        {
                            Id = 11,
                            Address = "699 Mayer Parkway, Santinaland, Portugal",
                            City = "Lake Mariafort",
                            DateOfBirth = new DateTime(2023, 3, 1, 8, 41, 29, 572, DateTimeKind.Local).AddTicks(8757),
                            Email = "Cecilia.Kihn21@yahoo.com",
                            FirstName = "Cecilia",
                            FullName = "Cecilia Kihn",
                            Gender = true,
                            LastName = "Kihn",
                            Phone = "207-408-9686 x409",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/262.jpg",
                            Student_code = "StudentOZkgwNpd"
                        },
                        new
                        {
                            Id = 12,
                            Address = "26962 Ciara Greens, Rosenbaummouth, Ghana",
                            City = "North Doughaven",
                            DateOfBirth = new DateTime(2022, 12, 28, 22, 34, 19, 630, DateTimeKind.Local).AddTicks(2294),
                            Email = "Jesus41@yahoo.com",
                            FirstName = "Jesus",
                            FullName = "Jesus Tromp",
                            Gender = true,
                            LastName = "Tromp",
                            Phone = "1-766-468-2464",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/653.jpg",
                            Student_code = "Students76ytHA6"
                        },
                        new
                        {
                            Id = 13,
                            Address = "0631 Gerhold Forks, Aubreyport, Puerto Rico",
                            City = "Destineyhaven",
                            DateOfBirth = new DateTime(2023, 5, 26, 21, 56, 35, 469, DateTimeKind.Local).AddTicks(6455),
                            Email = "Dashawn.Dibbert36@hotmail.com",
                            FirstName = "Dashawn",
                            FullName = "Dashawn Dibbert",
                            Gender = true,
                            LastName = "Dibbert",
                            Phone = "(464) 718-1146 x377",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/408.jpg",
                            Student_code = "Studentmk9Y6LTN"
                        },
                        new
                        {
                            Id = 14,
                            Address = "450 Brandt Pines, Stammshire, Kazakhstan",
                            City = "West Jarenhaven",
                            DateOfBirth = new DateTime(2023, 2, 1, 8, 55, 11, 385, DateTimeKind.Local).AddTicks(8173),
                            Email = "Paul_Schoen24@yahoo.com",
                            FirstName = "Paul",
                            FullName = "Paul Schoen",
                            Gender = false,
                            LastName = "Schoen",
                            Phone = "339.531.0373",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/290.jpg",
                            Student_code = "StudentZKfoAxne"
                        },
                        new
                        {
                            Id = 15,
                            Address = "664 Joe Glens, East Barrett, Thailand",
                            City = "Pfefferstad",
                            DateOfBirth = new DateTime(2023, 6, 26, 15, 57, 47, 783, DateTimeKind.Local).AddTicks(763),
                            Email = "Vincenzo70@hotmail.com",
                            FirstName = "Vincenzo",
                            FullName = "Vincenzo Bergstrom",
                            Gender = false,
                            LastName = "Bergstrom",
                            Phone = "1-987-814-2168 x52078",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/61.jpg",
                            Student_code = "StudentUCKsmu3r"
                        },
                        new
                        {
                            Id = 16,
                            Address = "76337 Swift Shore, Mariahmouth, Gibraltar",
                            City = "Volkmanfort",
                            DateOfBirth = new DateTime(2022, 11, 3, 21, 31, 27, 640, DateTimeKind.Local).AddTicks(6131),
                            Email = "Zoe35@hotmail.com",
                            FirstName = "Zoe",
                            FullName = "Zoe Brakus",
                            Gender = true,
                            LastName = "Brakus",
                            Phone = "(579) 718-1966 x8096",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/398.jpg",
                            Student_code = "Student0rfqRR7H"
                        },
                        new
                        {
                            Id = 17,
                            Address = "0544 Jeffrey Court, West Cordieton, Sweden",
                            City = "Aufderharmouth",
                            DateOfBirth = new DateTime(2022, 10, 31, 13, 44, 40, 515, DateTimeKind.Local).AddTicks(8278),
                            Email = "Ewald.Schimmel78@hotmail.com",
                            FirstName = "Ewald",
                            FullName = "Ewald Schimmel",
                            Gender = false,
                            LastName = "Schimmel",
                            Phone = "549.283.3713",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/173.jpg",
                            Student_code = "StudentMKEniXCw"
                        },
                        new
                        {
                            Id = 18,
                            Address = "1014 Alanis Route, Burleyside, Botswana",
                            City = "Port Elijahport",
                            DateOfBirth = new DateTime(2023, 7, 8, 22, 16, 36, 6, DateTimeKind.Local).AddTicks(2750),
                            Email = "Reta76@hotmail.com",
                            FirstName = "Reta",
                            FullName = "Reta Schamberger",
                            Gender = false,
                            LastName = "Schamberger",
                            Phone = "878-326-1076",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/280.jpg",
                            Student_code = "StudentzzRknMuD"
                        },
                        new
                        {
                            Id = 19,
                            Address = "5756 Kuhlman Land, South Brigitte, Slovenia",
                            City = "New Daynefurt",
                            DateOfBirth = new DateTime(2023, 2, 12, 18, 36, 26, 821, DateTimeKind.Local).AddTicks(7244),
                            Email = "Isaiah_Wintheiser@yahoo.com",
                            FirstName = "Isaiah",
                            FullName = "Isaiah Wintheiser",
                            Gender = false,
                            LastName = "Wintheiser",
                            Phone = "1-774-620-8737 x99526",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/823.jpg",
                            Student_code = "StudentlTkNtRlN"
                        },
                        new
                        {
                            Id = 20,
                            Address = "0466 Fahey Via, West Annabelchester, Uzbekistan",
                            City = "East Elizabethshire",
                            DateOfBirth = new DateTime(2023, 9, 10, 21, 17, 57, 769, DateTimeKind.Local).AddTicks(730),
                            Email = "Zack73@yahoo.com",
                            FirstName = "Zack",
                            FullName = "Zack Collier",
                            Gender = false,
                            LastName = "Collier",
                            Phone = "741-618-3458 x5973",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/706.jpg",
                            Student_code = "Studentmmd4tFhH"
                        },
                        new
                        {
                            Id = 21,
                            Address = "277 Turner Corners, Port Gavin, Slovakia (Slovak Republic)",
                            City = "South Maya",
                            DateOfBirth = new DateTime(2023, 3, 15, 20, 9, 24, 658, DateTimeKind.Local).AddTicks(1052),
                            Email = "Stevie_Hagenes92@gmail.com",
                            FirstName = "Stevie",
                            FullName = "Stevie Hagenes",
                            Gender = true,
                            LastName = "Hagenes",
                            Phone = "1-492-657-1003 x12594",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/86.jpg",
                            Student_code = "Studentl4dzBFMW"
                        },
                        new
                        {
                            Id = 22,
                            Address = "89486 Noel Gateway, Myrtiemouth, Togo",
                            City = "Steuberville",
                            DateOfBirth = new DateTime(2022, 10, 5, 23, 6, 10, 361, DateTimeKind.Local).AddTicks(9797),
                            Email = "Berneice_Waelchi@hotmail.com",
                            FirstName = "Berneice",
                            FullName = "Berneice Waelchi",
                            Gender = true,
                            LastName = "Waelchi",
                            Phone = "655.966.7936",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/36.jpg",
                            Student_code = "StudentZka6ObzK"
                        },
                        new
                        {
                            Id = 23,
                            Address = "81434 Hansen Station, Madelinetown, Republic of Korea",
                            City = "South Ameliabury",
                            DateOfBirth = new DateTime(2023, 6, 15, 14, 22, 50, 769, DateTimeKind.Local).AddTicks(841),
                            Email = "Davin_Hansen7@gmail.com",
                            FirstName = "Davin",
                            FullName = "Davin Hansen",
                            Gender = true,
                            LastName = "Hansen",
                            Phone = "1-445-361-4223",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/689.jpg",
                            Student_code = "StudentUCZq6XGg"
                        },
                        new
                        {
                            Id = 24,
                            Address = "57499 Schamberger Route, Krisville, British Indian Ocean Territory (Chagos Archipelago)",
                            City = "Jacobsonfurt",
                            DateOfBirth = new DateTime(2023, 2, 18, 18, 40, 59, 580, DateTimeKind.Local).AddTicks(9446),
                            Email = "Quentin88@hotmail.com",
                            FirstName = "Quentin",
                            FullName = "Quentin Bins",
                            Gender = true,
                            LastName = "Bins",
                            Phone = "(764) 314-6210 x3856",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/801.jpg",
                            Student_code = "StudentxCheelK7"
                        },
                        new
                        {
                            Id = 25,
                            Address = "7196 Moore Course, Kurtishaven, Argentina",
                            City = "Cummerataport",
                            DateOfBirth = new DateTime(2023, 8, 20, 4, 45, 0, 313, DateTimeKind.Local).AddTicks(586),
                            Email = "Virgie.Howell@gmail.com",
                            FirstName = "Virgie",
                            FullName = "Virgie Howell",
                            Gender = true,
                            LastName = "Howell",
                            Phone = "341.263.7570",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/260.jpg",
                            Student_code = "StudentXLLnLASr"
                        },
                        new
                        {
                            Id = 26,
                            Address = "78960 Senger Estates, West Chaz, Sri Lanka",
                            City = "North Shad",
                            DateOfBirth = new DateTime(2022, 11, 7, 18, 23, 0, 683, DateTimeKind.Local).AddTicks(5100),
                            Email = "Kaden_Reinger@yahoo.com",
                            FirstName = "Kaden",
                            FullName = "Kaden Reinger",
                            Gender = false,
                            LastName = "Reinger",
                            Phone = "885-596-2732 x8971",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1025.jpg",
                            Student_code = "Studenth7Ek61Ye"
                        },
                        new
                        {
                            Id = 27,
                            Address = "02851 Novella Overpass, Lake Xavierhaven, Chile",
                            City = "Croninshire",
                            DateOfBirth = new DateTime(2023, 1, 17, 4, 3, 56, 862, DateTimeKind.Local).AddTicks(9248),
                            Email = "Harold.Klein@hotmail.com",
                            FirstName = "Harold",
                            FullName = "Harold Klein",
                            Gender = false,
                            LastName = "Klein",
                            Phone = "1-825-242-2063 x77989",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/633.jpg",
                            Student_code = "StudentJOEErmfj"
                        },
                        new
                        {
                            Id = 28,
                            Address = "0407 Leslie Glen, Ortizhaven, United States of America",
                            City = "Olgaside",
                            DateOfBirth = new DateTime(2022, 10, 14, 10, 8, 54, 619, DateTimeKind.Local).AddTicks(81),
                            Email = "Ashleigh46@gmail.com",
                            FirstName = "Ashleigh",
                            FullName = "Ashleigh Schuppe",
                            Gender = true,
                            LastName = "Schuppe",
                            Phone = "(888) 971-0258 x768",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/708.jpg",
                            Student_code = "Studentn7qaerDH"
                        },
                        new
                        {
                            Id = 29,
                            Address = "549 Sporer Circle, Cheyennechester, Saint Pierre and Miquelon",
                            City = "Smithville",
                            DateOfBirth = new DateTime(2022, 10, 20, 20, 39, 29, 911, DateTimeKind.Local).AddTicks(4479),
                            Email = "Alan.Leffler@hotmail.com",
                            FirstName = "Alan",
                            FullName = "Alan Leffler",
                            Gender = true,
                            LastName = "Leffler",
                            Phone = "823-798-2616",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/541.jpg",
                            Student_code = "StudentRbJk8G8O"
                        },
                        new
                        {
                            Id = 30,
                            Address = "1809 Reichel Port, Port Herminiochester, Niger",
                            City = "Port Kathlynton",
                            DateOfBirth = new DateTime(2022, 10, 25, 6, 22, 35, 725, DateTimeKind.Local).AddTicks(4640),
                            Email = "Xavier_Yost7@hotmail.com",
                            FirstName = "Xavier",
                            FullName = "Xavier Yost",
                            Gender = true,
                            LastName = "Yost",
                            Phone = "511-760-5049 x421",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/672.jpg",
                            Student_code = "Student6BnB02va"
                        },
                        new
                        {
                            Id = 31,
                            Address = "1087 Champlin Stravenue, Aglaeshire, Palau",
                            City = "McCulloughshire",
                            DateOfBirth = new DateTime(2023, 5, 27, 4, 13, 39, 217, DateTimeKind.Local).AddTicks(6491),
                            Email = "Myron.Strosin@hotmail.com",
                            FirstName = "Myron",
                            FullName = "Myron Strosin",
                            Gender = false,
                            LastName = "Strosin",
                            Phone = "595.957.7263",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/18.jpg",
                            Student_code = "Studentxj8i8GGP"
                        },
                        new
                        {
                            Id = 32,
                            Address = "0154 Brekke Flat, West Burleymouth, Panama",
                            City = "South Garnett",
                            DateOfBirth = new DateTime(2023, 6, 1, 15, 55, 2, 561, DateTimeKind.Local).AddTicks(228),
                            Email = "Sydni_Halvorson@yahoo.com",
                            FirstName = "Sydni",
                            FullName = "Sydni Halvorson",
                            Gender = false,
                            LastName = "Halvorson",
                            Phone = "456-941-1177",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1038.jpg",
                            Student_code = "StudentKgGBxI2K"
                        },
                        new
                        {
                            Id = 33,
                            Address = "2652 Alexandre Lodge, Lake Elfrieda, Niue",
                            City = "Harrisborough",
                            DateOfBirth = new DateTime(2023, 1, 11, 19, 3, 26, 389, DateTimeKind.Local).AddTicks(3616),
                            Email = "Kennith38@yahoo.com",
                            FirstName = "Kennith",
                            FullName = "Kennith Gerhold",
                            Gender = true,
                            LastName = "Gerhold",
                            Phone = "(703) 997-1928",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/74.jpg",
                            Student_code = "StudenthlBeukf6"
                        },
                        new
                        {
                            Id = 34,
                            Address = "61454 Margaretta Lights, Kreigerfurt, Saudi Arabia",
                            City = "Kundehaven",
                            DateOfBirth = new DateTime(2023, 3, 30, 15, 0, 2, 740, DateTimeKind.Local).AddTicks(4158),
                            Email = "Yasmeen_Conn15@hotmail.com",
                            FirstName = "Yasmeen",
                            FullName = "Yasmeen Conn",
                            Gender = false,
                            LastName = "Conn",
                            Phone = "1-721-301-3054 x943",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/932.jpg",
                            Student_code = "StudentWRPTBi6d"
                        },
                        new
                        {
                            Id = 35,
                            Address = "2119 Llewellyn Crossing, Melvinville, Burundi",
                            City = "Lindsayland",
                            DateOfBirth = new DateTime(2023, 4, 6, 17, 32, 40, 563, DateTimeKind.Local).AddTicks(219),
                            Email = "Dahlia_Flatley@yahoo.com",
                            FirstName = "Dahlia",
                            FullName = "Dahlia Flatley",
                            Gender = true,
                            LastName = "Flatley",
                            Phone = "1-889-729-3321",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1086.jpg",
                            Student_code = "StudentfZ4RRYw1"
                        },
                        new
                        {
                            Id = 36,
                            Address = "2813 Golden Road, South Jettchester, Pitcairn Islands",
                            City = "Jennieberg",
                            DateOfBirth = new DateTime(2023, 8, 11, 3, 4, 21, 773, DateTimeKind.Local).AddTicks(8646),
                            Email = "Keara_Legros@gmail.com",
                            FirstName = "Keara",
                            FullName = "Keara Legros",
                            Gender = false,
                            LastName = "Legros",
                            Phone = "1-735-262-7837 x5379",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/150.jpg",
                            Student_code = "StudentIhMfUu7Q"
                        },
                        new
                        {
                            Id = 37,
                            Address = "5524 Gulgowski Forest, Auerstad, Lao People's Democratic Republic",
                            City = "West Stephanieville",
                            DateOfBirth = new DateTime(2023, 8, 14, 23, 10, 4, 240, DateTimeKind.Local).AddTicks(4342),
                            Email = "Myah_Wintheiser57@hotmail.com",
                            FirstName = "Myah",
                            FullName = "Myah Wintheiser",
                            Gender = false,
                            LastName = "Wintheiser",
                            Phone = "1-447-385-3863",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/28.jpg",
                            Student_code = "Studento50UDZPA"
                        },
                        new
                        {
                            Id = 38,
                            Address = "8391 O'Hara Camp, Lake Amanimouth, Thailand",
                            City = "Lake Dasiabury",
                            DateOfBirth = new DateTime(2022, 11, 3, 13, 12, 33, 420, DateTimeKind.Local).AddTicks(4242),
                            Email = "Darlene11@gmail.com",
                            FirstName = "Darlene",
                            FullName = "Darlene Kessler",
                            Gender = false,
                            LastName = "Kessler",
                            Phone = "(761) 594-0581 x0269",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/227.jpg",
                            Student_code = "Student9z9UJQy5"
                        },
                        new
                        {
                            Id = 39,
                            Address = "1454 Kay Brook, New Payton, Albania",
                            City = "South Eribertostad",
                            DateOfBirth = new DateTime(2023, 3, 20, 18, 1, 48, 749, DateTimeKind.Local).AddTicks(6951),
                            Email = "Kyla.Borer@gmail.com",
                            FirstName = "Kyla",
                            FullName = "Kyla Borer",
                            Gender = false,
                            LastName = "Borer",
                            Phone = "779-560-8226",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/390.jpg",
                            Student_code = "StudentXLV3OGAB"
                        },
                        new
                        {
                            Id = 40,
                            Address = "3003 Schulist Rue, West Ebbatown, Albania",
                            City = "Port Adolphport",
                            DateOfBirth = new DateTime(2023, 2, 27, 19, 13, 44, 19, DateTimeKind.Local).AddTicks(6453),
                            Email = "Blanche92@yahoo.com",
                            FirstName = "Blanche",
                            FullName = "Blanche Smith",
                            Gender = true,
                            LastName = "Smith",
                            Phone = "(310) 521-4551",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/445.jpg",
                            Student_code = "StudentuRTyoLYp"
                        },
                        new
                        {
                            Id = 41,
                            Address = "75292 Rutherford Alley, Rodriguezborough, Austria",
                            City = "East Derick",
                            DateOfBirth = new DateTime(2022, 11, 2, 5, 50, 52, 474, DateTimeKind.Local).AddTicks(5190),
                            Email = "Broderick_Lebsack90@gmail.com",
                            FirstName = "Broderick",
                            FullName = "Broderick Lebsack",
                            Gender = true,
                            LastName = "Lebsack",
                            Phone = "(714) 294-5067 x0563",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/641.jpg",
                            Student_code = "StudentWzT0gDj2"
                        },
                        new
                        {
                            Id = 42,
                            Address = "72910 Cummerata Parks, Port Americamouth, Puerto Rico",
                            City = "Wizaview",
                            DateOfBirth = new DateTime(2022, 11, 6, 18, 19, 25, 973, DateTimeKind.Local).AddTicks(977),
                            Email = "Jerad42@yahoo.com",
                            FirstName = "Jerad",
                            FullName = "Jerad Baumbach",
                            Gender = true,
                            LastName = "Baumbach",
                            Phone = "1-346-364-4417",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/288.jpg",
                            Student_code = "StudentX1DFUi1Z"
                        },
                        new
                        {
                            Id = 43,
                            Address = "9564 Watsica Springs, East Emersonview, Jamaica",
                            City = "Keshawnshire",
                            DateOfBirth = new DateTime(2023, 6, 30, 9, 36, 16, 760, DateTimeKind.Local).AddTicks(1478),
                            Email = "Pete_Hauck92@gmail.com",
                            FirstName = "Pete",
                            FullName = "Pete Hauck",
                            Gender = true,
                            LastName = "Hauck",
                            Phone = "695-478-9484 x9069",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/751.jpg",
                            Student_code = "Student0Arn1nyU"
                        },
                        new
                        {
                            Id = 44,
                            Address = "29817 Liana Rest, Stacyfurt, Sri Lanka",
                            City = "Annabellberg",
                            DateOfBirth = new DateTime(2023, 4, 20, 13, 38, 21, 719, DateTimeKind.Local).AddTicks(2094),
                            Email = "Nicolette19@gmail.com",
                            FirstName = "Nicolette",
                            FullName = "Nicolette Yundt",
                            Gender = false,
                            LastName = "Yundt",
                            Phone = "(823) 276-9222 x1289",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/980.jpg",
                            Student_code = "StudentbbTyATEb"
                        },
                        new
                        {
                            Id = 45,
                            Address = "36994 Lindsay Road, East Tiffanyhaven, Sierra Leone",
                            City = "North Robbie",
                            DateOfBirth = new DateTime(2022, 11, 16, 9, 20, 18, 67, DateTimeKind.Local).AddTicks(9486),
                            Email = "Dangelo_Turner31@yahoo.com",
                            FirstName = "D'angelo",
                            FullName = "D'angelo Turner",
                            Gender = false,
                            LastName = "Turner",
                            Phone = "979.448.0765",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/733.jpg",
                            Student_code = "StudentHnneGi48"
                        },
                        new
                        {
                            Id = 46,
                            Address = "5233 Hintz Mountains, North Rubychester, Liberia",
                            City = "Haagside",
                            DateOfBirth = new DateTime(2023, 3, 22, 11, 24, 19, 57, DateTimeKind.Local).AddTicks(4635),
                            Email = "Horacio_Schimmel51@yahoo.com",
                            FirstName = "Horacio",
                            FullName = "Horacio Schimmel",
                            Gender = false,
                            LastName = "Schimmel",
                            Phone = "688-842-9168",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/425.jpg",
                            Student_code = "StudentypCpMMu6"
                        },
                        new
                        {
                            Id = 47,
                            Address = "841 Willms Courts, West Coryburgh, South Africa",
                            City = "New Feliciaborough",
                            DateOfBirth = new DateTime(2022, 10, 30, 2, 14, 16, 517, DateTimeKind.Local).AddTicks(9445),
                            Email = "Myles86@yahoo.com",
                            FirstName = "Myles",
                            FullName = "Myles Stokes",
                            Gender = false,
                            LastName = "Stokes",
                            Phone = "279-667-3164 x361",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/956.jpg",
                            Student_code = "Studenter0ikZWZ"
                        },
                        new
                        {
                            Id = 48,
                            Address = "4269 Jessyca Expressway, Jaylanhaven, Samoa",
                            City = "Rubenport",
                            DateOfBirth = new DateTime(2023, 3, 24, 23, 11, 10, 575, DateTimeKind.Local).AddTicks(5357),
                            Email = "Sydnie1@gmail.com",
                            FirstName = "Sydnie",
                            FullName = "Sydnie Bayer",
                            Gender = false,
                            LastName = "Bayer",
                            Phone = "1-574-433-3830",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/891.jpg",
                            Student_code = "StudentzvrLUVDQ"
                        },
                        new
                        {
                            Id = 49,
                            Address = "053 Parisian Expressway, Gavinton, Democratic People's Republic of Korea",
                            City = "West Oran",
                            DateOfBirth = new DateTime(2023, 7, 25, 15, 54, 4, 734, DateTimeKind.Local).AddTicks(5553),
                            Email = "Keshawn_Stoltenberg69@hotmail.com",
                            FirstName = "Keshawn",
                            FullName = "Keshawn Stoltenberg",
                            Gender = true,
                            LastName = "Stoltenberg",
                            Phone = "726-500-3611 x3387",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/915.jpg",
                            Student_code = "Student29EKQeUs"
                        },
                        new
                        {
                            Id = 50,
                            Address = "0023 Kerluke Extension, Port Aldenburgh, Cook Islands",
                            City = "Mercedesmouth",
                            DateOfBirth = new DateTime(2023, 7, 31, 5, 23, 14, 864, DateTimeKind.Local).AddTicks(4925),
                            Email = "Jeromy_Kshlerin71@gmail.com",
                            FirstName = "Jeromy",
                            FullName = "Jeromy Kshlerin",
                            Gender = true,
                            LastName = "Kshlerin",
                            Phone = "781.889.7697 x2486",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/858.jpg",
                            Student_code = "StudentUWz8mH0l"
                        });
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Priority", null)
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
