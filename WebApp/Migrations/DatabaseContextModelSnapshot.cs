// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "ggRaHyI9",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$9oNccigKVQ9fXGLJLVjGs.PyA09Y34P6f1k2CEoA65KD1jhiaRat.",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "VR30NI2p",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$xLAojRFZouxKw6R9Zrfv3O2QmRh4Vvq0TS43TQielf7XaEPLUhozm",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "SPlCRvAM",
                            Email = "user@gmail.com",
                            Password = "$2a$11$CFT/aNomljxd534NEIPh7Ort5QU5XMEq1ZgZSpqrkBYVKw2EXPPha",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "346 Ara Gateway, North Sammie, Cayman Islands",
                            City = "East Nelsonborough",
                            DateOfBirth = new DateTime(2023, 1, 11, 3, 1, 34, 941, DateTimeKind.Local).AddTicks(1435),
                            Email = "Connor32@gmail.com",
                            FirstName = "Connor",
                            FullName = "Connor Crist",
                            Gender = true,
                            LastName = "Crist",
                            Phone = "1-782-388-3603",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/149.jpg",
                            Student_code = "StudentsPlSEEBJ"
                        },
                        new
                        {
                            Id = 2,
                            Address = "82113 Philip Dale, Lake Lawrence, Marshall Islands",
                            City = "South Marquise",
                            DateOfBirth = new DateTime(2022, 9, 27, 9, 39, 44, 606, DateTimeKind.Local).AddTicks(4720),
                            Email = "Jaron.Rogahn@yahoo.com",
                            FirstName = "Jaron",
                            FullName = "Jaron Rogahn",
                            Gender = false,
                            LastName = "Rogahn",
                            Phone = "1-614-553-2141 x161",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1046.jpg",
                            Student_code = "StudentuvzgVvsF"
                        },
                        new
                        {
                            Id = 3,
                            Address = "370 Paucek Plaza, Lake Jarrellshire, Anguilla",
                            City = "New Philip",
                            DateOfBirth = new DateTime(2023, 3, 18, 11, 58, 41, 673, DateTimeKind.Local).AddTicks(5111),
                            Email = "Lillian88@yahoo.com",
                            FirstName = "Lillian",
                            FullName = "Lillian Bashirian",
                            Gender = false,
                            LastName = "Bashirian",
                            Phone = "(294) 654-2087",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1219.jpg",
                            Student_code = "StudenttG9hxr05"
                        },
                        new
                        {
                            Id = 4,
                            Address = "686 Muller Mount, Schadenchester, Guinea-Bissau",
                            City = "North Kaley",
                            DateOfBirth = new DateTime(2023, 4, 3, 11, 10, 48, 203, DateTimeKind.Local).AddTicks(3843),
                            Email = "Moises_Corkery@yahoo.com",
                            FirstName = "Moises",
                            FullName = "Moises Corkery",
                            Gender = true,
                            LastName = "Corkery",
                            Phone = "888-830-4831 x460",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/615.jpg",
                            Student_code = "StudentGYK3mevu"
                        },
                        new
                        {
                            Id = 5,
                            Address = "588 Einar Locks, Destinchester, Saint Pierre and Miquelon",
                            City = "East Ambroseton",
                            DateOfBirth = new DateTime(2023, 6, 26, 1, 38, 25, 708, DateTimeKind.Local).AddTicks(6518),
                            Email = "Riley41@gmail.com",
                            FirstName = "Riley",
                            FullName = "Riley Schowalter",
                            Gender = false,
                            LastName = "Schowalter",
                            Phone = "630-557-8654 x436",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/774.jpg",
                            Student_code = "Studentg0WojEnA"
                        },
                        new
                        {
                            Id = 6,
                            Address = "766 Garland Manors, Port Maximillian, Ethiopia",
                            City = "Port Kennedi",
                            DateOfBirth = new DateTime(2023, 2, 14, 4, 54, 19, 530, DateTimeKind.Local).AddTicks(2089),
                            Email = "Braulio79@gmail.com",
                            FirstName = "Braulio",
                            FullName = "Braulio Smith",
                            Gender = true,
                            LastName = "Smith",
                            Phone = "(348) 744-0270",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/21.jpg",
                            Student_code = "StudentroDu0Dxw"
                        },
                        new
                        {
                            Id = 7,
                            Address = "9300 Wisoky Park, Ilianaborough, Egypt",
                            City = "Gerholdton",
                            DateOfBirth = new DateTime(2022, 11, 8, 13, 22, 38, 824, DateTimeKind.Local).AddTicks(994),
                            Email = "Mckenna_McKenzie@hotmail.com",
                            FirstName = "Mckenna",
                            FullName = "Mckenna McKenzie",
                            Gender = false,
                            LastName = "McKenzie",
                            Phone = "1-275-774-9516 x75818",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/393.jpg",
                            Student_code = "Student2tI8KuGE"
                        },
                        new
                        {
                            Id = 8,
                            Address = "999 John Views, Halvorsonport, Cook Islands",
                            City = "Kubland",
                            DateOfBirth = new DateTime(2023, 3, 10, 19, 19, 13, 40, DateTimeKind.Local).AddTicks(6397),
                            Email = "Anais.King@yahoo.com",
                            FirstName = "Anais",
                            FullName = "Anais King",
                            Gender = true,
                            LastName = "King",
                            Phone = "332-840-7453",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/216.jpg",
                            Student_code = "Student1WS7AJ8C"
                        },
                        new
                        {
                            Id = 9,
                            Address = "6940 Lilliana Walk, Port Derrick, New Caledonia",
                            City = "East Codyside",
                            DateOfBirth = new DateTime(2023, 5, 28, 21, 14, 45, 514, DateTimeKind.Local).AddTicks(8465),
                            Email = "Keshaun_Hansen@gmail.com",
                            FirstName = "Keshaun",
                            FullName = "Keshaun Hansen",
                            Gender = false,
                            LastName = "Hansen",
                            Phone = "371-747-8788",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/966.jpg",
                            Student_code = "StudentB0al0ZaI"
                        },
                        new
                        {
                            Id = 10,
                            Address = "019 Kerluke Parkway, Port Carli, Armenia",
                            City = "Maudeshire",
                            DateOfBirth = new DateTime(2023, 1, 18, 20, 58, 29, 154, DateTimeKind.Local).AddTicks(9936),
                            Email = "Lafayette_Hettinger@gmail.com",
                            FirstName = "Lafayette",
                            FullName = "Lafayette Hettinger",
                            Gender = false,
                            LastName = "Hettinger",
                            Phone = "870.675.1107 x4201",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1087.jpg",
                            Student_code = "StudentOVsgd5pj"
                        },
                        new
                        {
                            Id = 11,
                            Address = "96585 Mekhi Turnpike, Huldamouth, Equatorial Guinea",
                            City = "West Raquel",
                            DateOfBirth = new DateTime(2023, 6, 28, 16, 52, 1, 716, DateTimeKind.Local).AddTicks(934),
                            Email = "Miles.Marquardt@hotmail.com",
                            FirstName = "Miles",
                            FullName = "Miles Marquardt",
                            Gender = true,
                            LastName = "Marquardt",
                            Phone = "(803) 542-6885 x4709",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/311.jpg",
                            Student_code = "Student29RjRW1d"
                        },
                        new
                        {
                            Id = 12,
                            Address = "46086 Ryder Mills, Ernserton, American Samoa",
                            City = "South Dalechester",
                            DateOfBirth = new DateTime(2023, 5, 12, 0, 42, 57, 56, DateTimeKind.Local).AddTicks(9131),
                            Email = "Lucas.Hagenes52@hotmail.com",
                            FirstName = "Lucas",
                            FullName = "Lucas Hagenes",
                            Gender = true,
                            LastName = "Hagenes",
                            Phone = "1-827-609-4365 x641",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/823.jpg",
                            Student_code = "Studentm2yMkCis"
                        },
                        new
                        {
                            Id = 13,
                            Address = "3046 Roberts Mill, Geovannyborough, Saint Vincent and the Grenadines",
                            City = "South Ariane",
                            DateOfBirth = new DateTime(2022, 10, 22, 18, 6, 40, 959, DateTimeKind.Local).AddTicks(2244),
                            Email = "Johathan_Bauch@gmail.com",
                            FirstName = "Johathan",
                            FullName = "Johathan Bauch",
                            Gender = false,
                            LastName = "Bauch",
                            Phone = "900-723-3900",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/412.jpg",
                            Student_code = "Student7G3vwXeg"
                        },
                        new
                        {
                            Id = 14,
                            Address = "49094 Jermaine Haven, North Beauhaven, Benin",
                            City = "Eviestad",
                            DateOfBirth = new DateTime(2023, 3, 31, 1, 30, 13, 121, DateTimeKind.Local).AddTicks(9192),
                            Email = "Astrid37@hotmail.com",
                            FirstName = "Astrid",
                            FullName = "Astrid Willms",
                            Gender = true,
                            LastName = "Willms",
                            Phone = "1-903-509-9098 x676",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/197.jpg",
                            Student_code = "Studentmu3rb3Ak"
                        },
                        new
                        {
                            Id = 15,
                            Address = "8843 Heathcote Station, Port Destanyshire, Bahrain",
                            City = "Port Orionburgh",
                            DateOfBirth = new DateTime(2023, 6, 23, 12, 38, 50, 654, DateTimeKind.Local).AddTicks(6639),
                            Email = "Isaias_Aufderhar30@yahoo.com",
                            FirstName = "Isaias",
                            FullName = "Isaias Aufderhar",
                            Gender = true,
                            LastName = "Aufderhar",
                            Phone = "283.960.6286 x1380",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/804.jpg",
                            Student_code = "StudentrpRdrvtb"
                        },
                        new
                        {
                            Id = 16,
                            Address = "63210 Reichel Parks, Bayerfort, Samoa",
                            City = "Adellaberg",
                            DateOfBirth = new DateTime(2022, 12, 1, 19, 35, 32, 797, DateTimeKind.Local).AddTicks(9404),
                            Email = "Trey_Smith77@yahoo.com",
                            FirstName = "Trey",
                            FullName = "Trey Smith",
                            Gender = false,
                            LastName = "Smith",
                            Phone = "(241) 518-0419",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/119.jpg",
                            Student_code = "StudentrsW1M51j"
                        },
                        new
                        {
                            Id = 17,
                            Address = "640 Abbott Greens, Christopherbury, San Marino",
                            City = "East Brodericktown",
                            DateOfBirth = new DateTime(2023, 7, 14, 8, 25, 43, 454, DateTimeKind.Local).AddTicks(1321),
                            Email = "Elaina.Durgan55@yahoo.com",
                            FirstName = "Elaina",
                            FullName = "Elaina Durgan",
                            Gender = false,
                            LastName = "Durgan",
                            Phone = "324-599-0918 x763",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/412.jpg",
                            Student_code = "Student2hHtDSMp"
                        },
                        new
                        {
                            Id = 18,
                            Address = "58641 McLaughlin Lights, Abbeyside, Swaziland",
                            City = "Nicklausmouth",
                            DateOfBirth = new DateTime(2023, 3, 31, 21, 28, 20, 436, DateTimeKind.Local).AddTicks(1744),
                            Email = "Franco77@hotmail.com",
                            FirstName = "Franco",
                            FullName = "Franco Howe",
                            Gender = false,
                            LastName = "Howe",
                            Phone = "(865) 660-5563 x3717",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1016.jpg",
                            Student_code = "StudentYI43iRaK"
                        },
                        new
                        {
                            Id = 19,
                            Address = "675 Heller Junctions, South Einar, Dominica",
                            City = "New Sandra",
                            DateOfBirth = new DateTime(2022, 11, 28, 14, 17, 7, 356, DateTimeKind.Local).AddTicks(1580),
                            Email = "Dayton_Bahringer@gmail.com",
                            FirstName = "Dayton",
                            FullName = "Dayton Bahringer",
                            Gender = false,
                            LastName = "Bahringer",
                            Phone = "(385) 453-7839 x4614",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/454.jpg",
                            Student_code = "StudentUAzb689y"
                        },
                        new
                        {
                            Id = 20,
                            Address = "6833 Norene Harbors, Terranceview, Papua New Guinea",
                            City = "Gradymouth",
                            DateOfBirth = new DateTime(2022, 10, 8, 7, 58, 56, 107, DateTimeKind.Local).AddTicks(4917),
                            Email = "Reva_Gutmann81@hotmail.com",
                            FirstName = "Reva",
                            FullName = "Reva Gutmann",
                            Gender = false,
                            LastName = "Gutmann",
                            Phone = "876.872.8659 x3079",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1131.jpg",
                            Student_code = "Student22MtGss0"
                        },
                        new
                        {
                            Id = 21,
                            Address = "80802 Rupert Unions, Abbottland, Malawi",
                            City = "New Yasmeenfurt",
                            DateOfBirth = new DateTime(2022, 12, 4, 1, 29, 54, 843, DateTimeKind.Local).AddTicks(509),
                            Email = "Hillard_Dicki43@yahoo.com",
                            FirstName = "Hillard",
                            FullName = "Hillard Dicki",
                            Gender = true,
                            LastName = "Dicki",
                            Phone = "726-988-2481 x251",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1096.jpg",
                            Student_code = "Studentn74wvZt8"
                        },
                        new
                        {
                            Id = 22,
                            Address = "6074 Maggio Ways, Lake Josh, Spain",
                            City = "West Kenstad",
                            DateOfBirth = new DateTime(2023, 9, 22, 2, 8, 51, 410, DateTimeKind.Local).AddTicks(2743),
                            Email = "Ransom91@hotmail.com",
                            FirstName = "Ransom",
                            FullName = "Ransom Wehner",
                            Gender = false,
                            LastName = "Wehner",
                            Phone = "1-601-983-6542 x26166",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/997.jpg",
                            Student_code = "StudentFt2DdYlV"
                        },
                        new
                        {
                            Id = 23,
                            Address = "2504 Marcus Motorway, Lake Coty, Nigeria",
                            City = "Port Antonio",
                            DateOfBirth = new DateTime(2022, 11, 25, 4, 39, 33, 763, DateTimeKind.Local).AddTicks(2839),
                            Email = "Leora_Kshlerin46@gmail.com",
                            FirstName = "Leora",
                            FullName = "Leora Kshlerin",
                            Gender = false,
                            LastName = "Kshlerin",
                            Phone = "1-806-490-3278",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/868.jpg",
                            Student_code = "Student20AECezX"
                        },
                        new
                        {
                            Id = 24,
                            Address = "148 Deckow Course, New Margarita, South Africa",
                            City = "Conradland",
                            DateOfBirth = new DateTime(2022, 11, 11, 18, 50, 17, 108, DateTimeKind.Local).AddTicks(5480),
                            Email = "Arjun14@yahoo.com",
                            FirstName = "Arjun",
                            FullName = "Arjun Schoen",
                            Gender = false,
                            LastName = "Schoen",
                            Phone = "830-950-9283 x502",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1112.jpg",
                            Student_code = "StudentSwjfgC0I"
                        },
                        new
                        {
                            Id = 25,
                            Address = "778 Hirthe Flat, Philipfort, Montenegro",
                            City = "Melynaside",
                            DateOfBirth = new DateTime(2023, 8, 8, 9, 0, 29, 342, DateTimeKind.Local).AddTicks(5594),
                            Email = "Sherwood37@hotmail.com",
                            FirstName = "Sherwood",
                            FullName = "Sherwood Toy",
                            Gender = true,
                            LastName = "Toy",
                            Phone = "344.968.4498",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/509.jpg",
                            Student_code = "StudentNjtJT7lq"
                        },
                        new
                        {
                            Id = 26,
                            Address = "076 Skiles Alley, Reyesburgh, Bolivia",
                            City = "Gilbertfurt",
                            DateOfBirth = new DateTime(2023, 5, 7, 5, 32, 59, 117, DateTimeKind.Local).AddTicks(2043),
                            Email = "Fern_Dickinson69@hotmail.com",
                            FirstName = "Fern",
                            FullName = "Fern Dickinson",
                            Gender = false,
                            LastName = "Dickinson",
                            Phone = "1-955-744-2280",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1070.jpg",
                            Student_code = "StudentX3NtpHfk"
                        },
                        new
                        {
                            Id = 27,
                            Address = "9223 Glover Locks, North Emilio, Guam",
                            City = "North Brisa",
                            DateOfBirth = new DateTime(2023, 4, 15, 18, 3, 47, 523, DateTimeKind.Local).AddTicks(7385),
                            Email = "Vicente2@hotmail.com",
                            FirstName = "Vicente",
                            FullName = "Vicente Bins",
                            Gender = false,
                            LastName = "Bins",
                            Phone = "(224) 213-2090 x8218",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/780.jpg",
                            Student_code = "StudentntBWfBmz"
                        },
                        new
                        {
                            Id = 28,
                            Address = "6360 George Via, North Laurianne, Peru",
                            City = "Sanfordchester",
                            DateOfBirth = new DateTime(2023, 4, 22, 19, 51, 4, 367, DateTimeKind.Local).AddTicks(5503),
                            Email = "Clair_Bernhard49@yahoo.com",
                            FirstName = "Clair",
                            FullName = "Clair Bernhard",
                            Gender = true,
                            LastName = "Bernhard",
                            Phone = "532.346.3421 x48533",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/754.jpg",
                            Student_code = "StudentH0HcDN50"
                        },
                        new
                        {
                            Id = 29,
                            Address = "688 Joaquin Viaduct, Joshuaport, Niger",
                            City = "West Abnershire",
                            DateOfBirth = new DateTime(2023, 1, 5, 0, 38, 4, 618, DateTimeKind.Local).AddTicks(9456),
                            Email = "Giovanna72@gmail.com",
                            FirstName = "Giovanna",
                            FullName = "Giovanna Kuhn",
                            Gender = true,
                            LastName = "Kuhn",
                            Phone = "454.276.0283 x0388",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/58.jpg",
                            Student_code = "StudentCMwXlJuh"
                        },
                        new
                        {
                            Id = 30,
                            Address = "18401 Clint Shores, Kirlinmouth, French Southern Territories",
                            City = "Port Carlotta",
                            DateOfBirth = new DateTime(2023, 8, 21, 21, 8, 53, 93, DateTimeKind.Local).AddTicks(2358),
                            Email = "Gregg.Yost@yahoo.com",
                            FirstName = "Gregg",
                            FullName = "Gregg Yost",
                            Gender = true,
                            LastName = "Yost",
                            Phone = "514-350-6912 x774",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/130.jpg",
                            Student_code = "StudentDn02q6kT"
                        },
                        new
                        {
                            Id = 31,
                            Address = "959 Doug Groves, Cruickshankfort, Brazil",
                            City = "Eliezerborough",
                            DateOfBirth = new DateTime(2023, 5, 14, 16, 52, 42, 550, DateTimeKind.Local).AddTicks(4617),
                            Email = "Shad_Kertzmann34@gmail.com",
                            FirstName = "Shad",
                            FullName = "Shad Kertzmann",
                            Gender = false,
                            LastName = "Kertzmann",
                            Phone = "1-790-529-3591",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1098.jpg",
                            Student_code = "StudentP07NW1Ue"
                        },
                        new
                        {
                            Id = 32,
                            Address = "34632 Stehr Light, Nolanport, Mexico",
                            City = "Port Jeraldtown",
                            DateOfBirth = new DateTime(2023, 7, 26, 19, 18, 7, 742, DateTimeKind.Local).AddTicks(3429),
                            Email = "Maude26@gmail.com",
                            FirstName = "Maude",
                            FullName = "Maude Kerluke",
                            Gender = false,
                            LastName = "Kerluke",
                            Phone = "349-566-6498 x3065",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/967.jpg",
                            Student_code = "StudentqE7HPqCe"
                        },
                        new
                        {
                            Id = 33,
                            Address = "511 Botsford Stream, Lake Esthertown, Timor-Leste",
                            City = "Gorczanyview",
                            DateOfBirth = new DateTime(2023, 3, 30, 1, 12, 3, 844, DateTimeKind.Local).AddTicks(5688),
                            Email = "Loma_Cassin@gmail.com",
                            FirstName = "Loma",
                            FullName = "Loma Cassin",
                            Gender = true,
                            LastName = "Cassin",
                            Phone = "275.686.7807 x45182",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/660.jpg",
                            Student_code = "StudentGsaSlyYg"
                        },
                        new
                        {
                            Id = 34,
                            Address = "33757 Rice Stream, South Sisterchester, Iceland",
                            City = "Lemkeland",
                            DateOfBirth = new DateTime(2022, 12, 4, 11, 11, 14, 448, DateTimeKind.Local).AddTicks(3873),
                            Email = "Jarret.Goodwin@gmail.com",
                            FirstName = "Jarret",
                            FullName = "Jarret Goodwin",
                            Gender = false,
                            LastName = "Goodwin",
                            Phone = "243-319-6913",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/896.jpg",
                            Student_code = "Student9x97dLxy"
                        },
                        new
                        {
                            Id = 35,
                            Address = "1506 Brakus Corner, New Rodhaven, Virgin Islands, British",
                            City = "Demetrishaven",
                            DateOfBirth = new DateTime(2022, 12, 2, 12, 11, 32, 178, DateTimeKind.Local).AddTicks(5566),
                            Email = "Akeem_Koelpin@hotmail.com",
                            FirstName = "Akeem",
                            FullName = "Akeem Koelpin",
                            Gender = true,
                            LastName = "Koelpin",
                            Phone = "658-901-8900",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/76.jpg",
                            Student_code = "Studentmj1EFsUY"
                        },
                        new
                        {
                            Id = 36,
                            Address = "86899 Hintz Land, Torphyville, Turks and Caicos Islands",
                            City = "Lake Milanshire",
                            DateOfBirth = new DateTime(2023, 9, 23, 12, 26, 13, 509, DateTimeKind.Local).AddTicks(2935),
                            Email = "Enid48@yahoo.com",
                            FirstName = "Enid",
                            FullName = "Enid Wilkinson",
                            Gender = false,
                            LastName = "Wilkinson",
                            Phone = "655.710.1328",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/316.jpg",
                            Student_code = "Studentf9szyt5h"
                        },
                        new
                        {
                            Id = 37,
                            Address = "475 Zieme Shoals, West Kenberg, United Kingdom",
                            City = "West Luciennetown",
                            DateOfBirth = new DateTime(2022, 11, 24, 15, 39, 11, 456, DateTimeKind.Local).AddTicks(9805),
                            Email = "Herbert.Zemlak55@yahoo.com",
                            FirstName = "Herbert",
                            FullName = "Herbert Zemlak",
                            Gender = true,
                            LastName = "Zemlak",
                            Phone = "1-996-738-5742 x514",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/362.jpg",
                            Student_code = "StudenthUZqIl5J"
                        },
                        new
                        {
                            Id = 38,
                            Address = "23832 Yundt Union, Kiehnfort, Lao People's Democratic Republic",
                            City = "East Zakary",
                            DateOfBirth = new DateTime(2023, 8, 24, 23, 7, 40, 87, DateTimeKind.Local).AddTicks(3766),
                            Email = "Antonetta.McKenzie91@hotmail.com",
                            FirstName = "Antonetta",
                            FullName = "Antonetta McKenzie",
                            Gender = true,
                            LastName = "McKenzie",
                            Phone = "830.395.5183",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1223.jpg",
                            Student_code = "StudentgZwrzGNC"
                        },
                        new
                        {
                            Id = 39,
                            Address = "0830 Hansen Mill, New Johann, Australia",
                            City = "Mateoville",
                            DateOfBirth = new DateTime(2023, 6, 24, 14, 2, 51, 743, DateTimeKind.Local).AddTicks(1567),
                            Email = "Edwin55@hotmail.com",
                            FirstName = "Edwin",
                            FullName = "Edwin Buckridge",
                            Gender = false,
                            LastName = "Buckridge",
                            Phone = "847.665.2234 x466",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/418.jpg",
                            Student_code = "Student4vXRkEJI"
                        },
                        new
                        {
                            Id = 40,
                            Address = "35475 Kihn Circle, New Revaberg, Sri Lanka",
                            City = "Lake Margarettefurt",
                            DateOfBirth = new DateTime(2023, 4, 17, 15, 48, 1, 296, DateTimeKind.Local).AddTicks(4643),
                            Email = "Billie18@gmail.com",
                            FirstName = "Billie",
                            FullName = "Billie Harber",
                            Gender = false,
                            LastName = "Harber",
                            Phone = "1-261-959-6205",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/866.jpg",
                            Student_code = "StudentCudVz9RK"
                        },
                        new
                        {
                            Id = 41,
                            Address = "0667 Stroman Park, New Glenna, Saint Helena",
                            City = "Mustafatown",
                            DateOfBirth = new DateTime(2023, 3, 29, 10, 11, 8, 710, DateTimeKind.Local).AddTicks(4305),
                            Email = "Annetta.Brown11@yahoo.com",
                            FirstName = "Annetta",
                            FullName = "Annetta Brown",
                            Gender = false,
                            LastName = "Brown",
                            Phone = "1-870-801-1192 x7542",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/532.jpg",
                            Student_code = "Studentxukw3Tlq"
                        },
                        new
                        {
                            Id = 42,
                            Address = "3689 Maya Forge, Osinskiton, Cocos (Keeling) Islands",
                            City = "Nikkiberg",
                            DateOfBirth = new DateTime(2023, 3, 31, 2, 55, 27, 866, DateTimeKind.Local).AddTicks(9665),
                            Email = "Amalia_Stoltenberg75@yahoo.com",
                            FirstName = "Amalia",
                            FullName = "Amalia Stoltenberg",
                            Gender = false,
                            LastName = "Stoltenberg",
                            Phone = "(746) 251-7504 x3261",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1218.jpg",
                            Student_code = "StudentF0PwZbdn"
                        },
                        new
                        {
                            Id = 43,
                            Address = "58365 Littel Trace, Guadalupeville, Swaziland",
                            City = "Schmidtborough",
                            DateOfBirth = new DateTime(2023, 3, 24, 0, 51, 6, 824, DateTimeKind.Local).AddTicks(1946),
                            Email = "Annamae.Predovic61@yahoo.com",
                            FirstName = "Annamae",
                            FullName = "Annamae Predovic",
                            Gender = true,
                            LastName = "Predovic",
                            Phone = "(817) 347-4564 x69711",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/495.jpg",
                            Student_code = "StudentcFpdrShM"
                        },
                        new
                        {
                            Id = 44,
                            Address = "7063 Myrtle Mission, Lake Ivoryberg, France",
                            City = "Westborough",
                            DateOfBirth = new DateTime(2023, 5, 24, 14, 55, 26, 195, DateTimeKind.Local).AddTicks(7872),
                            Email = "Eula.Terry21@yahoo.com",
                            FirstName = "Eula",
                            FullName = "Eula Terry",
                            Gender = false,
                            LastName = "Terry",
                            Phone = "1-932-973-3784 x590",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/710.jpg",
                            Student_code = "StudentrXh5bqNJ"
                        },
                        new
                        {
                            Id = 45,
                            Address = "887 Bartoletti Highway, Uptonstad, Brazil",
                            City = "Rocioland",
                            DateOfBirth = new DateTime(2023, 3, 20, 22, 46, 15, 965, DateTimeKind.Local).AddTicks(1671),
                            Email = "Greg_Larson@hotmail.com",
                            FirstName = "Greg",
                            FullName = "Greg Larson",
                            Gender = false,
                            LastName = "Larson",
                            Phone = "1-200-311-3854 x296",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/787.jpg",
                            Student_code = "StudentLa9INXu9"
                        },
                        new
                        {
                            Id = 46,
                            Address = "584 Amie Ways, Bergebury, Burundi",
                            City = "Sylviashire",
                            DateOfBirth = new DateTime(2023, 1, 25, 5, 37, 38, 251, DateTimeKind.Local).AddTicks(7738),
                            Email = "Ephraim.Balistreri36@hotmail.com",
                            FirstName = "Ephraim",
                            FullName = "Ephraim Balistreri",
                            Gender = false,
                            LastName = "Balistreri",
                            Phone = "1-812-554-3538",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/195.jpg",
                            Student_code = "StudentXsOuWzXj"
                        },
                        new
                        {
                            Id = 47,
                            Address = "76259 Jast Streets, Rowetown, India",
                            City = "Ebertchester",
                            DateOfBirth = new DateTime(2023, 8, 11, 3, 55, 21, 216, DateTimeKind.Local).AddTicks(8629),
                            Email = "Evie.Blick75@yahoo.com",
                            FirstName = "Evie",
                            FullName = "Evie Blick",
                            Gender = true,
                            LastName = "Blick",
                            Phone = "(722) 319-9560 x667",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/218.jpg",
                            Student_code = "StudentY9tRsWJH"
                        },
                        new
                        {
                            Id = 48,
                            Address = "74101 Cormier Streets, Abbigailside, Mali",
                            City = "O'Reillyberg",
                            DateOfBirth = new DateTime(2023, 4, 2, 21, 27, 45, 420, DateTimeKind.Local).AddTicks(2759),
                            Email = "Anabel_West@yahoo.com",
                            FirstName = "Anabel",
                            FullName = "Anabel West",
                            Gender = false,
                            LastName = "West",
                            Phone = "467-588-0963",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1059.jpg",
                            Student_code = "StudentnBhmOL8F"
                        },
                        new
                        {
                            Id = 49,
                            Address = "7376 Leanna Haven, East Chad, Slovakia (Slovak Republic)",
                            City = "Melisaland",
                            DateOfBirth = new DateTime(2022, 10, 22, 21, 5, 50, 94, DateTimeKind.Local).AddTicks(5260),
                            Email = "Zachary.Mayert23@yahoo.com",
                            FirstName = "Zachary",
                            FullName = "Zachary Mayert",
                            Gender = true,
                            LastName = "Mayert",
                            Phone = "1-313-537-8543 x0427",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/293.jpg",
                            Student_code = "StudentyEvwLsZB"
                        },
                        new
                        {
                            Id = 50,
                            Address = "83835 Wisozk Manors, North Randalburgh, Japan",
                            City = "Bufordton",
                            DateOfBirth = new DateTime(2023, 4, 18, 8, 51, 41, 152, DateTimeKind.Local).AddTicks(381),
                            Email = "Reta_Murray@hotmail.com",
                            FirstName = "Reta",
                            FullName = "Reta Murray",
                            Gender = false,
                            LastName = "Murray",
                            Phone = "1-760-452-6983 x074",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/816.jpg",
                            Student_code = "StudentCC0oKvGL"
                        });
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.Priority", null)
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
