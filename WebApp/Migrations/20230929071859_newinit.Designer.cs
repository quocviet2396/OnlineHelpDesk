// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230929071859_newinit")]
    partial class newinit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewId")
                        .HasColumnType("int");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("tbComments");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbNews");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.Property<string>("feedback")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "oansNlDy",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$.HPR9At1R9ZksRGiDslnAOreeA17L1YMPcPQCcTD9NHiltyPNK1SS",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "kiAJEJy7",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$Fs.bZxTa0SJjGRwYOE41gecvyYLL2rXofe3DO1MFG1alwCzfVNSsC",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "WXiltPBD",
                            Email = "user@gmail.com",
                            Password = "$2a$11$pTf1yHGLth6KubIGHj4pEe/DV.m/bHvufiQMt44NQHYrzTVF8mR0C",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "471 Hintz Glen, Lake Jace, Palau",
                            City = "North Kirsten",
                            DateOfBirth = new DateTime(2023, 7, 8, 10, 26, 45, 684, DateTimeKind.Local).AddTicks(1074),
                            Email = "Jody.Veum@yahoo.com",
                            FirstName = "Jody",
                            FullName = "Jody Veum",
                            Gender = true,
                            LastName = "Veum",
                            Phone = "1-325-968-8144 x1451",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/944.jpg",
                            Student_code = "StudentjgQuK9lV"
                        },
                        new
                        {
                            Id = 2,
                            Address = "657 Prohaska Gateway, Lake Beryl, Montserrat",
                            City = "Port Tiaraborough",
                            DateOfBirth = new DateTime(2022, 11, 13, 10, 49, 2, 614, DateTimeKind.Local).AddTicks(3794),
                            Email = "Zackary_Weber@gmail.com",
                            FirstName = "Zackary",
                            FullName = "Zackary Weber",
                            Gender = true,
                            LastName = "Weber",
                            Phone = "(302) 420-8584 x00741",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/234.jpg",
                            Student_code = "Student4iwlgPXY"
                        },
                        new
                        {
                            Id = 3,
                            Address = "9256 Lucio Station, Jenkinshaven, Nicaragua",
                            City = "Lake Janyville",
                            DateOfBirth = new DateTime(2023, 2, 17, 23, 41, 44, 837, DateTimeKind.Local).AddTicks(8923),
                            Email = "Jermey32@yahoo.com",
                            FirstName = "Jermey",
                            FullName = "Jermey Dicki",
                            Gender = true,
                            LastName = "Dicki",
                            Phone = "875-815-5770 x944",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/828.jpg",
                            Student_code = "StudentIfniNaxe"
                        },
                        new
                        {
                            Id = 4,
                            Address = "6642 Anderson Station, East Turner, Guatemala",
                            City = "Daijashire",
                            DateOfBirth = new DateTime(2023, 2, 20, 22, 48, 7, 956, DateTimeKind.Local).AddTicks(7580),
                            Email = "Jaron_Macejkovic82@gmail.com",
                            FirstName = "Jaron",
                            FullName = "Jaron Macejkovic",
                            Gender = true,
                            LastName = "Macejkovic",
                            Phone = "578-363-3731 x9665",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/156.jpg",
                            Student_code = "StudenthS6mo7Hw"
                        },
                        new
                        {
                            Id = 5,
                            Address = "6045 Bayer Light, Port Jaylen, Libyan Arab Jamahiriya",
                            City = "VonRuedenport",
                            DateOfBirth = new DateTime(2023, 6, 29, 11, 9, 7, 5, DateTimeKind.Local).AddTicks(386),
                            Email = "Damon.Moore78@gmail.com",
                            FirstName = "Damon",
                            FullName = "Damon Moore",
                            Gender = false,
                            LastName = "Moore",
                            Phone = "(569) 920-5991",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1142.jpg",
                            Student_code = "Studenty219nQ6r"
                        },
                        new
                        {
                            Id = 6,
                            Address = "04834 Renner Manor, South Samanta, Wallis and Futuna",
                            City = "Rodrigoton",
                            DateOfBirth = new DateTime(2023, 9, 14, 12, 34, 49, 814, DateTimeKind.Local).AddTicks(9338),
                            Email = "Vicente_Gutmann65@yahoo.com",
                            FirstName = "Vicente",
                            FullName = "Vicente Gutmann",
                            Gender = true,
                            LastName = "Gutmann",
                            Phone = "498.954.0536",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/812.jpg",
                            Student_code = "StudentscqPjjvD"
                        },
                        new
                        {
                            Id = 7,
                            Address = "55683 Goyette Gateway, West Garret, Serbia",
                            City = "Ubaldoburgh",
                            DateOfBirth = new DateTime(2023, 6, 12, 8, 10, 34, 177, DateTimeKind.Local).AddTicks(548),
                            Email = "Jadyn62@yahoo.com",
                            FirstName = "Jadyn",
                            FullName = "Jadyn Rodriguez",
                            Gender = true,
                            LastName = "Rodriguez",
                            Phone = "761-760-5631 x00902",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/683.jpg",
                            Student_code = "StudentaZjOK2vy"
                        },
                        new
                        {
                            Id = 8,
                            Address = "323 Roxanne Rapid, East Jan, Chile",
                            City = "Marcosport",
                            DateOfBirth = new DateTime(2023, 8, 20, 15, 47, 41, 648, DateTimeKind.Local).AddTicks(4803),
                            Email = "Loyal.Feeney54@hotmail.com",
                            FirstName = "Loyal",
                            FullName = "Loyal Feeney",
                            Gender = true,
                            LastName = "Feeney",
                            Phone = "743.477.9628",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1101.jpg",
                            Student_code = "Studentbb9tEy7L"
                        },
                        new
                        {
                            Id = 9,
                            Address = "89360 Etha Fort, West Kaleigh, Lithuania",
                            City = "Zboncakfurt",
                            DateOfBirth = new DateTime(2022, 11, 26, 16, 25, 7, 305, DateTimeKind.Local).AddTicks(457),
                            Email = "Keara6@yahoo.com",
                            FirstName = "Keara",
                            FullName = "Keara Rodriguez",
                            Gender = false,
                            LastName = "Rodriguez",
                            Phone = "936-576-9605",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/904.jpg",
                            Student_code = "StudentsY6SAnsm"
                        },
                        new
                        {
                            Id = 10,
                            Address = "794 Schaefer Centers, Murazikmouth, Bosnia and Herzegovina",
                            City = "Malliefurt",
                            DateOfBirth = new DateTime(2023, 9, 8, 11, 2, 7, 254, DateTimeKind.Local).AddTicks(6708),
                            Email = "Jessie89@hotmail.com",
                            FirstName = "Jessie",
                            FullName = "Jessie Johnson",
                            Gender = true,
                            LastName = "Johnson",
                            Phone = "403.510.8123",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/598.jpg",
                            Student_code = "Studentpqlh6UvX"
                        },
                        new
                        {
                            Id = 11,
                            Address = "2755 Koepp Rest, West Tamara, Grenada",
                            City = "East Gina",
                            DateOfBirth = new DateTime(2023, 5, 22, 6, 33, 47, 255, DateTimeKind.Local).AddTicks(8004),
                            Email = "Serenity.Daniel@hotmail.com",
                            FirstName = "Serenity",
                            FullName = "Serenity Daniel",
                            Gender = true,
                            LastName = "Daniel",
                            Phone = "1-831-246-4314 x8225",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/549.jpg",
                            Student_code = "Student4qqLS2d2"
                        },
                        new
                        {
                            Id = 12,
                            Address = "35574 Towne Skyway, East Gillian, South Africa",
                            City = "West Shanelleburgh",
                            DateOfBirth = new DateTime(2023, 3, 3, 18, 25, 5, 274, DateTimeKind.Local).AddTicks(5153),
                            Email = "Elmore.Moore@gmail.com",
                            FirstName = "Elmore",
                            FullName = "Elmore Moore",
                            Gender = true,
                            LastName = "Moore",
                            Phone = "954.872.2368 x40209",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/867.jpg",
                            Student_code = "StudentmqIsZaAE"
                        },
                        new
                        {
                            Id = 13,
                            Address = "508 Rita River, Leannontown, Algeria",
                            City = "New Bernita",
                            DateOfBirth = new DateTime(2023, 2, 26, 20, 29, 48, 353, DateTimeKind.Local).AddTicks(9604),
                            Email = "Amir91@yahoo.com",
                            FirstName = "Amir",
                            FullName = "Amir Haag",
                            Gender = false,
                            LastName = "Haag",
                            Phone = "(724) 878-6553 x1121",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/899.jpg",
                            Student_code = "Student4n3iZcNX"
                        },
                        new
                        {
                            Id = 14,
                            Address = "2197 Kling Shore, Jacobibury, Bahrain",
                            City = "Dorotheaside",
                            DateOfBirth = new DateTime(2023, 4, 3, 5, 22, 58, 940, DateTimeKind.Local).AddTicks(6657),
                            Email = "Margaret.Reichert84@yahoo.com",
                            FirstName = "Margaret",
                            FullName = "Margaret Reichert",
                            Gender = false,
                            LastName = "Reichert",
                            Phone = "508-770-7711 x78111",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/339.jpg",
                            Student_code = "StudentM3hhIKDZ"
                        },
                        new
                        {
                            Id = 15,
                            Address = "58290 Alisa Rapids, Yundttown, Lithuania",
                            City = "East Ariel",
                            DateOfBirth = new DateTime(2023, 7, 9, 2, 55, 13, 15, DateTimeKind.Local).AddTicks(9263),
                            Email = "Freida_Toy@hotmail.com",
                            FirstName = "Freida",
                            FullName = "Freida Toy",
                            Gender = true,
                            LastName = "Toy",
                            Phone = "(250) 297-7939 x032",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1150.jpg",
                            Student_code = "StudentBqdYMa2p"
                        },
                        new
                        {
                            Id = 16,
                            Address = "7671 Bernhard Trail, Simonisview, Bermuda",
                            City = "North Lorainemouth",
                            DateOfBirth = new DateTime(2023, 5, 30, 12, 3, 54, 980, DateTimeKind.Local).AddTicks(1234),
                            Email = "Taya94@yahoo.com",
                            FirstName = "Taya",
                            FullName = "Taya Ward",
                            Gender = false,
                            LastName = "Ward",
                            Phone = "302-922-7546",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/309.jpg",
                            Student_code = "StudentDUUu9Tsf"
                        },
                        new
                        {
                            Id = 17,
                            Address = "2461 King Shore, South Abelardo, Gibraltar",
                            City = "Dooleyborough",
                            DateOfBirth = new DateTime(2023, 5, 17, 12, 18, 10, 980, DateTimeKind.Local).AddTicks(8087),
                            Email = "Christa.Greenfelder34@yahoo.com",
                            FirstName = "Christa",
                            FullName = "Christa Greenfelder",
                            Gender = false,
                            LastName = "Greenfelder",
                            Phone = "(667) 299-1759 x473",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/858.jpg",
                            Student_code = "StudentvdnVlZE0"
                        },
                        new
                        {
                            Id = 18,
                            Address = "4666 Goldner Stravenue, Karianneport, Saint Kitts and Nevis",
                            City = "West Luellaville",
                            DateOfBirth = new DateTime(2023, 1, 8, 8, 41, 51, 130, DateTimeKind.Local).AddTicks(4455),
                            Email = "Ernestine.Walker22@hotmail.com",
                            FirstName = "Ernestine",
                            FullName = "Ernestine Walker",
                            Gender = true,
                            LastName = "Walker",
                            Phone = "759.659.9099 x624",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/221.jpg",
                            Student_code = "StudentQ2LC00L3"
                        },
                        new
                        {
                            Id = 19,
                            Address = "12191 Elisa Keys, Port Teresa, Kenya",
                            City = "South Vaughn",
                            DateOfBirth = new DateTime(2023, 3, 15, 6, 39, 56, 34, DateTimeKind.Local).AddTicks(63),
                            Email = "Martina_Rolfson@hotmail.com",
                            FirstName = "Martina",
                            FullName = "Martina Rolfson",
                            Gender = true,
                            LastName = "Rolfson",
                            Phone = "1-439-777-9121 x26378",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/782.jpg",
                            Student_code = "StudentPy8NlLPO"
                        },
                        new
                        {
                            Id = 20,
                            Address = "72459 Larkin Manor, Omafort, Tokelau",
                            City = "West Elsaton",
                            DateOfBirth = new DateTime(2023, 6, 1, 11, 30, 58, 951, DateTimeKind.Local).AddTicks(1644),
                            Email = "Afton15@gmail.com",
                            FirstName = "Afton",
                            FullName = "Afton Hickle",
                            Gender = true,
                            LastName = "Hickle",
                            Phone = "1-363-302-6090 x2715",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1086.jpg",
                            Student_code = "Student4ehJbprl"
                        },
                        new
                        {
                            Id = 21,
                            Address = "943 Grant Passage, West Tess, Mauritius",
                            City = "Simonisfort",
                            DateOfBirth = new DateTime(2022, 11, 14, 2, 1, 19, 208, DateTimeKind.Local).AddTicks(9203),
                            Email = "Jena.Simonis62@hotmail.com",
                            FirstName = "Jena",
                            FullName = "Jena Simonis",
                            Gender = false,
                            LastName = "Simonis",
                            Phone = "299-528-4721",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1231.jpg",
                            Student_code = "StudentKO9pR1s1"
                        },
                        new
                        {
                            Id = 22,
                            Address = "7750 Royce Viaduct, Francismouth, Mongolia",
                            City = "Kevonton",
                            DateOfBirth = new DateTime(2023, 7, 20, 11, 31, 23, 936, DateTimeKind.Local).AddTicks(7600),
                            Email = "Westley71@gmail.com",
                            FirstName = "Westley",
                            FullName = "Westley Crist",
                            Gender = false,
                            LastName = "Crist",
                            Phone = "1-874-643-6757 x4207",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/434.jpg",
                            Student_code = "StudentrYVAgY4c"
                        },
                        new
                        {
                            Id = 23,
                            Address = "8402 Treutel Fall, New Chetside, Pakistan",
                            City = "East Vince",
                            DateOfBirth = new DateTime(2023, 4, 3, 8, 47, 57, 748, DateTimeKind.Local).AddTicks(2934),
                            Email = "Alana86@hotmail.com",
                            FirstName = "Alana",
                            FullName = "Alana Kovacek",
                            Gender = true,
                            LastName = "Kovacek",
                            Phone = "426-340-6983",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/877.jpg",
                            Student_code = "StudentvzDFXFIa"
                        },
                        new
                        {
                            Id = 24,
                            Address = "020 Aron Summit, Port Carolina, France",
                            City = "Millsberg",
                            DateOfBirth = new DateTime(2022, 11, 11, 17, 11, 45, 188, DateTimeKind.Local).AddTicks(6772),
                            Email = "Nelson67@hotmail.com",
                            FirstName = "Nelson",
                            FullName = "Nelson Luettgen",
                            Gender = false,
                            LastName = "Luettgen",
                            Phone = "1-933-482-6393 x0381",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1135.jpg",
                            Student_code = "StudentnRQLmETH"
                        },
                        new
                        {
                            Id = 25,
                            Address = "712 Mante Spurs, Hellenland, Lithuania",
                            City = "North Piper",
                            DateOfBirth = new DateTime(2023, 6, 4, 18, 51, 7, 984, DateTimeKind.Local).AddTicks(2032),
                            Email = "Adalberto43@gmail.com",
                            FirstName = "Adalberto",
                            FullName = "Adalberto Runte",
                            Gender = true,
                            LastName = "Runte",
                            Phone = "328.830.9916",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/496.jpg",
                            Student_code = "StudentacDGzPNP"
                        },
                        new
                        {
                            Id = 26,
                            Address = "566 Kerluke Forest, South Velvashire, Vanuatu",
                            City = "New Charityhaven",
                            DateOfBirth = new DateTime(2022, 11, 19, 21, 44, 3, 562, DateTimeKind.Local).AddTicks(4080),
                            Email = "Nya_Mayer@hotmail.com",
                            FirstName = "Nya",
                            FullName = "Nya Mayer",
                            Gender = true,
                            LastName = "Mayer",
                            Phone = "238.859.7850",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/722.jpg",
                            Student_code = "Student0jWe2v1W"
                        },
                        new
                        {
                            Id = 27,
                            Address = "391 Spinka Hill, East Clevefurt, Andorra",
                            City = "Bauchport",
                            DateOfBirth = new DateTime(2022, 11, 6, 1, 18, 18, 413, DateTimeKind.Local).AddTicks(4946),
                            Email = "Oliver17@gmail.com",
                            FirstName = "Oliver",
                            FullName = "Oliver Brown",
                            Gender = false,
                            LastName = "Brown",
                            Phone = "1-728-518-3678",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/417.jpg",
                            Student_code = "Student01kstanQ"
                        },
                        new
                        {
                            Id = 28,
                            Address = "71508 Collin Mills, South Sanford, Denmark",
                            City = "Reichelville",
                            DateOfBirth = new DateTime(2022, 11, 5, 11, 59, 59, 997, DateTimeKind.Local).AddTicks(3994),
                            Email = "Dillan_Witting@yahoo.com",
                            FirstName = "Dillan",
                            FullName = "Dillan Witting",
                            Gender = true,
                            LastName = "Witting",
                            Phone = "1-906-615-6492",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/356.jpg",
                            Student_code = "StudentS9hqE7Zv"
                        },
                        new
                        {
                            Id = 29,
                            Address = "066 Wiza Gardens, New Jewell, Ukraine",
                            City = "South Marguerite",
                            DateOfBirth = new DateTime(2022, 12, 2, 11, 55, 17, 461, DateTimeKind.Local).AddTicks(6641),
                            Email = "Harley_Dickens85@yahoo.com",
                            FirstName = "Harley",
                            FullName = "Harley Dickens",
                            Gender = true,
                            LastName = "Dickens",
                            Phone = "348.948.7487",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/583.jpg",
                            Student_code = "StudentxQJBZrSQ"
                        },
                        new
                        {
                            Id = 30,
                            Address = "053 Myra Lodge, Rosenbaumchester, Moldova",
                            City = "West Yvonnehaven",
                            DateOfBirth = new DateTime(2023, 1, 28, 3, 49, 37, 361, DateTimeKind.Local).AddTicks(2879),
                            Email = "Trinity_Hauck9@gmail.com",
                            FirstName = "Trinity",
                            FullName = "Trinity Hauck",
                            Gender = true,
                            LastName = "Hauck",
                            Phone = "1-822-818-3556 x19159",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/265.jpg",
                            Student_code = "StudentG0u4Mpkh"
                        },
                        new
                        {
                            Id = 31,
                            Address = "3973 Rogahn Ferry, South Kyleborough, Mexico",
                            City = "South Katlyn",
                            DateOfBirth = new DateTime(2023, 5, 5, 0, 17, 13, 291, DateTimeKind.Local).AddTicks(5656),
                            Email = "Darius23@hotmail.com",
                            FirstName = "Darius",
                            FullName = "Darius Keebler",
                            Gender = true,
                            LastName = "Keebler",
                            Phone = "308-888-7556 x948",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1095.jpg",
                            Student_code = "Studentd0RMIYeo"
                        },
                        new
                        {
                            Id = 32,
                            Address = "18783 Fadel Drives, Langworthmouth, Benin",
                            City = "East Kareemshire",
                            DateOfBirth = new DateTime(2022, 11, 17, 20, 31, 30, 78, DateTimeKind.Local).AddTicks(9830),
                            Email = "Moses_Senger@hotmail.com",
                            FirstName = "Moses",
                            FullName = "Moses Senger",
                            Gender = true,
                            LastName = "Senger",
                            Phone = "1-884-711-9281",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/249.jpg",
                            Student_code = "StudentLFFRul13"
                        },
                        new
                        {
                            Id = 33,
                            Address = "854 Carmelo Freeway, North Mauricechester, Mali",
                            City = "Schaeferland",
                            DateOfBirth = new DateTime(2023, 3, 28, 13, 8, 54, 432, DateTimeKind.Local).AddTicks(9672),
                            Email = "Colt_Auer88@yahoo.com",
                            FirstName = "Colt",
                            FullName = "Colt Auer",
                            Gender = true,
                            LastName = "Auer",
                            Phone = "386.974.8591 x0260",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/126.jpg",
                            Student_code = "StudentwpuK18Gt"
                        },
                        new
                        {
                            Id = 34,
                            Address = "3173 Kling Turnpike, New Charlenestad, Cuba",
                            City = "Patsytown",
                            DateOfBirth = new DateTime(2022, 10, 14, 15, 40, 49, 397, DateTimeKind.Local).AddTicks(9336),
                            Email = "Margarete90@hotmail.com",
                            FirstName = "Margarete",
                            FullName = "Margarete Spinka",
                            Gender = true,
                            LastName = "Spinka",
                            Phone = "1-736-838-2489 x448",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/60.jpg",
                            Student_code = "Studentcqhdh9EI"
                        },
                        new
                        {
                            Id = 35,
                            Address = "284 Williamson Isle, Ocieport, Republic of Korea",
                            City = "Friesenchester",
                            DateOfBirth = new DateTime(2023, 4, 10, 2, 52, 53, 473, DateTimeKind.Local).AddTicks(4321),
                            Email = "Alvina.Daniel96@yahoo.com",
                            FirstName = "Alvina",
                            FullName = "Alvina Daniel",
                            Gender = true,
                            LastName = "Daniel",
                            Phone = "1-557-241-2525",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/952.jpg",
                            Student_code = "StudentuKN49uVa"
                        },
                        new
                        {
                            Id = 36,
                            Address = "9120 Haley Pine, Meganemouth, Armenia",
                            City = "Klockoside",
                            DateOfBirth = new DateTime(2023, 5, 8, 21, 12, 45, 395, DateTimeKind.Local).AddTicks(3273),
                            Email = "Marilyne_Lehner14@hotmail.com",
                            FirstName = "Marilyne",
                            FullName = "Marilyne Lehner",
                            Gender = true,
                            LastName = "Lehner",
                            Phone = "1-721-733-3830",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/728.jpg",
                            Student_code = "StudentTCkz37x6"
                        },
                        new
                        {
                            Id = 37,
                            Address = "32028 Mayer Walks, Lake Meta, Pakistan",
                            City = "Jacquesfort",
                            DateOfBirth = new DateTime(2023, 9, 3, 23, 4, 23, 803, DateTimeKind.Local).AddTicks(7731),
                            Email = "Cordie_Breitenberg@gmail.com",
                            FirstName = "Cordie",
                            FullName = "Cordie Breitenberg",
                            Gender = false,
                            LastName = "Breitenberg",
                            Phone = "1-238-390-6274 x20959",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/243.jpg",
                            Student_code = "Studentf8NPVrrU"
                        },
                        new
                        {
                            Id = 38,
                            Address = "501 Wilkinson Terrace, New Kamren, Tanzania",
                            City = "West Gilberto",
                            DateOfBirth = new DateTime(2023, 8, 30, 23, 47, 29, 966, DateTimeKind.Local).AddTicks(2294),
                            Email = "Kian_Runolfsdottir75@yahoo.com",
                            FirstName = "Kian",
                            FullName = "Kian Runolfsdottir",
                            Gender = true,
                            LastName = "Runolfsdottir",
                            Phone = "893-276-3401",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/125.jpg",
                            Student_code = "Studentd9DcfyMV"
                        },
                        new
                        {
                            Id = 39,
                            Address = "58898 Gislason Pass, East Xanderland, Singapore",
                            City = "Grahambury",
                            DateOfBirth = new DateTime(2023, 3, 22, 15, 7, 15, 958, DateTimeKind.Local).AddTicks(8579),
                            Email = "Sylvia.Johnston21@yahoo.com",
                            FirstName = "Sylvia",
                            FullName = "Sylvia Johnston",
                            Gender = true,
                            LastName = "Johnston",
                            Phone = "863.473.0127 x50106",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/632.jpg",
                            Student_code = "Studentn2f8QLRk"
                        },
                        new
                        {
                            Id = 40,
                            Address = "1162 King Mills, East Jaydenland, Papua New Guinea",
                            City = "Willisland",
                            DateOfBirth = new DateTime(2023, 7, 1, 14, 39, 58, 394, DateTimeKind.Local).AddTicks(9589),
                            Email = "Sadye26@yahoo.com",
                            FirstName = "Sadye",
                            FullName = "Sadye Friesen",
                            Gender = false,
                            LastName = "Friesen",
                            Phone = "787.747.3251",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/557.jpg",
                            Student_code = "StudenthDuzbe40"
                        },
                        new
                        {
                            Id = 41,
                            Address = "25171 Fred Green, South Kielbury, Cameroon",
                            City = "North Jaquanville",
                            DateOfBirth = new DateTime(2023, 9, 23, 9, 14, 12, 832, DateTimeKind.Local).AddTicks(3707),
                            Email = "Eryn_Gaylord@hotmail.com",
                            FirstName = "Eryn",
                            FullName = "Eryn Gaylord",
                            Gender = true,
                            LastName = "Gaylord",
                            Phone = "544-334-4802 x5341",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/277.jpg",
                            Student_code = "StudentAXUCxhhk"
                        },
                        new
                        {
                            Id = 42,
                            Address = "9753 Ivy Fall, Claudeville, Bulgaria",
                            City = "Larsonview",
                            DateOfBirth = new DateTime(2023, 2, 19, 1, 43, 35, 633, DateTimeKind.Local).AddTicks(1308),
                            Email = "Erik.Grimes92@hotmail.com",
                            FirstName = "Erik",
                            FullName = "Erik Grimes",
                            Gender = false,
                            LastName = "Grimes",
                            Phone = "1-358-507-2700 x6972",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/997.jpg",
                            Student_code = "Student5k2wGSw6"
                        },
                        new
                        {
                            Id = 43,
                            Address = "657 Zulauf Neck, Edaburgh, Somalia",
                            City = "Port Oswaldmouth",
                            DateOfBirth = new DateTime(2022, 12, 23, 8, 59, 26, 281, DateTimeKind.Local).AddTicks(3550),
                            Email = "Kylie.Kuhn72@yahoo.com",
                            FirstName = "Kylie",
                            FullName = "Kylie Kuhn",
                            Gender = false,
                            LastName = "Kuhn",
                            Phone = "519-966-6744",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/677.jpg",
                            Student_code = "Student9dFpddCz"
                        },
                        new
                        {
                            Id = 44,
                            Address = "83148 Ardith Viaduct, East Kiphaven, Latvia",
                            City = "Schadentown",
                            DateOfBirth = new DateTime(2022, 11, 25, 5, 39, 12, 219, DateTimeKind.Local).AddTicks(5493),
                            Email = "Uriel_Kozey15@yahoo.com",
                            FirstName = "Uriel",
                            FullName = "Uriel Kozey",
                            Gender = false,
                            LastName = "Kozey",
                            Phone = "1-484-355-3719",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1231.jpg",
                            Student_code = "StudentxO7aofXN"
                        },
                        new
                        {
                            Id = 45,
                            Address = "3881 Jerde Alley, New Angieburgh, Qatar",
                            City = "Lake Buckfurt",
                            DateOfBirth = new DateTime(2023, 4, 27, 3, 5, 36, 802, DateTimeKind.Local).AddTicks(9473),
                            Email = "Justen_Abbott@yahoo.com",
                            FirstName = "Justen",
                            FullName = "Justen Abbott",
                            Gender = false,
                            LastName = "Abbott",
                            Phone = "646-810-0487 x79460",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/548.jpg",
                            Student_code = "StudentjOWmRA7j"
                        },
                        new
                        {
                            Id = 46,
                            Address = "799 Stark Dam, South Arnulfo, Liechtenstein",
                            City = "Lake Danteton",
                            DateOfBirth = new DateTime(2022, 11, 22, 18, 4, 14, 44, DateTimeKind.Local).AddTicks(2196),
                            Email = "Micah75@hotmail.com",
                            FirstName = "Micah",
                            FullName = "Micah Hane",
                            Gender = true,
                            LastName = "Hane",
                            Phone = "(470) 344-2394 x90805",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1172.jpg",
                            Student_code = "StudentLkHk5KvJ"
                        },
                        new
                        {
                            Id = 47,
                            Address = "895 Nitzsche Ways, Kochfort, Andorra",
                            City = "Dickinsonland",
                            DateOfBirth = new DateTime(2023, 9, 28, 15, 28, 12, 715, DateTimeKind.Local).AddTicks(6304),
                            Email = "Cydney30@gmail.com",
                            FirstName = "Cydney",
                            FullName = "Cydney Koss",
                            Gender = false,
                            LastName = "Koss",
                            Phone = "1-220-288-6430",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/411.jpg",
                            Student_code = "Studentqyn1WJS9"
                        },
                        new
                        {
                            Id = 48,
                            Address = "3671 Lexus Spring, East Tia, Honduras",
                            City = "East Camilleville",
                            DateOfBirth = new DateTime(2023, 1, 14, 15, 7, 24, 615, DateTimeKind.Local).AddTicks(1753),
                            Email = "Stacey13@gmail.com",
                            FirstName = "Stacey",
                            FullName = "Stacey DuBuque",
                            Gender = false,
                            LastName = "DuBuque",
                            Phone = "1-643-209-7126",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/622.jpg",
                            Student_code = "Studentl6zIN1Re"
                        },
                        new
                        {
                            Id = 49,
                            Address = "15571 Ana Radial, West Sheilaberg, Indonesia",
                            City = "Bahringermouth",
                            DateOfBirth = new DateTime(2023, 9, 16, 1, 48, 19, 939, DateTimeKind.Local).AddTicks(5152),
                            Email = "Hertha_Ullrich@gmail.com",
                            FirstName = "Hertha",
                            FullName = "Hertha Ullrich",
                            Gender = false,
                            LastName = "Ullrich",
                            Phone = "895.426.8850 x1640",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/268.jpg",
                            Student_code = "StudentpdZzcmOH"
                        },
                        new
                        {
                            Id = 50,
                            Address = "4465 Dooley Views, Breitenbergfurt, Solomon Islands",
                            City = "Alexysport",
                            DateOfBirth = new DateTime(2023, 7, 18, 0, 29, 31, 55, DateTimeKind.Local).AddTicks(8620),
                            Email = "Jarrett10@yahoo.com",
                            FirstName = "Jarrett",
                            FullName = "Jarrett Dach",
                            Gender = false,
                            LastName = "Dach",
                            Phone = "1-701-209-6611",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/659.jpg",
                            Student_code = "StudentKGEysEPs"
                        });
                });

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.HasOne("LibraryModels.News", "News")
                        .WithMany("Comments")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.Priority", "Priority")
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Priority");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
