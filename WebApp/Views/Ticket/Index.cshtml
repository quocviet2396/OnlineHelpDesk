@{
    int i = 1;
    Layout = ViewData["Layout"]?.ToString() ?? "_DefaultLayout";
}
@inject WebApp.Repositories.IAuthenService AuthenService
@model IEnumerable<LibraryModels.Ticket>
@if (TempData["Message"] != null)
{
    <div class="alert alert-@TempData["MessageType"]" role="alert">
        @TempData["Message"]
    </div>
}
<div class="body-wrapper">
    <!-- Change this content if you need to modify -->
    <div class="col-lg-12 d-flex align-items-stretch">
        <div class="card w-100">
            <div class="card-body p-4">
                <h5 class="card-title fw-semibold mb-4">Ticket Status</h5>
                <a class="btn btn-info" asp-action="Create" asp-controller="Ticket">Create New Ticket</a>

                <div class="table-responsive">
                    <table class="table text-nowrap mb-0 align-middle">
                        <thead class="text-dark fs-4">
                            <tr class="text-center">
                                <th class="border-bottom-0">
                                    <h4 class="fw-semibold mb-0">#</h4>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.Title)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.Description)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.CreateDate)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.ModifiedDate)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.Attachment)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.TicketStatus)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">Category</h6>

                                </th>
                                <th class="border-bottom-0">
                                    <h6 @ViewBag.us class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.Creator)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.Supporter)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">Supporter @Html.DisplayNameFor(model => model.feedback)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">@Html.DisplayNameFor(model => model.Priority)</h6>
                                </th>
                                <th class="border-bottom-0">
                                    <h6 class="fw-semibold mb-0">Action</h6>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr class="text-center">
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0"> @i </h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Title)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Description)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.CreateDate)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.ModifiedDate)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">
                                            @if (!string.IsNullOrEmpty(item.Attachment))
                                            {
                                                <img src="~/images/attachment/@item.Attachment" class="img-thumbnail" width="100" height="100" />
                                            }
                                        </h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.TicketStatus.Name)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Category.Name)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 @ViewBag.us class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Creator.Email)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Supporter.Email)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.feedback)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <h6 class="fw-semibold mb-0">@Html.DisplayFor(modelItem => item.Priority.Name)</h6>
                                    </td>
                                    <td class="border-bottom-0">
                                        <div class="d-flex align-items-center gap-2" style="justify-content:center">

                                            @if (AuthenService.IsAdmin() || AuthenService.IsSupporter() || (AuthenService.IsUserLoggedIn() && item.TicketStatusId == null))
                                            {
                                                @if (item.feedback == null)
                                                {
                                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning"><i class="fa fa-gear"></i></a>
                                                }

                                            }





                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info"><i class="fa fa-info-circle"></i></a>
                                            @if (item.TicketStatusId == null && item.feedback == null && item.PriorityId == null && item.SupporterId == null)
                                            {
                                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger"><i class="fa fa-trash"></i></a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                                i++;
                            }
                        </tbody>
                    </table>
                    <div class="pagination justify-content-center">
                        <ul class="pagination">
                            @if (ViewBag.CurrentPage > 1)
                            {
                                <li class="page-item"><a class="page-link" href="/Ticket/Index?page=1&pageSize=@ViewBag.PageSize">First</a></li>
                                <li class="page-item"><a class="page-link" href="/Ticket/Index?page=@(ViewBag.CurrentPage - 1)&pageSize=@ViewBag.PageSize">Previous</a></li>
                            }

                            @for (int a = 1; a <= (int)Math.Ceiling((double)ViewBag.TotalItemCount / ViewBag.PageSize); a++)
                            {
                                <li class="page-item @(a == ViewBag.CurrentPage ? "active" : "")"><a class="page-link" href="/Ticket/Index?page=@a&pageSize=@ViewBag.PageSize">@a</a></li>
                            }

                            @if (ViewBag.CurrentPage < (int)Math.Ceiling((double)ViewBag.TotalItemCount / ViewBag.PageSize))
                            {
                                <li class="page-item"><a class="page-link" href="/Ticket/Index?page=@(ViewBag.CurrentPage + 1)&pageSize=@ViewBag.PageSize">Next</a></li>
                            }

                            @{
                                int totalPages = (int)Math.Ceiling((double)ViewBag.TotalItemCount / ViewBag.PageSize);
                            }

                            <li class="page-item"><a class="page-link" href="/Ticket/Index?page=@totalPages&pageSize=@ViewBag.PageSize">Last</a></li>
                        </ul>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <!-- End change -->

</div>


<script>
    // Lắng nghe sự kiện thay đổi của dropdown
    document.getElementById('categoryFilter').addEventListener('change', function () {
        var selectedCategoryId = this.value; // Lấy giá trị đã chọn

        // Gửi yêu cầu lọc đến máy chủ và cập nhật danh sách phiếu
        // Sử dụng JavaScript/AJAX hoặc jQuery để thực hiện điều này

        // Ví dụ: Sử dụng jQuery
        $.ajax({
            url: '/Ticket/Index', // Điều hướng đến hành động Index để xử lý yêu cầu lọc
            method: 'GET',
            data: { categoryId: selectedCategoryId },
            success: function (data) {
                // Cập nhật bảng danh sách phiếu bằng dữ liệu trả về từ máy chủ
                // data chứa dữ liệu phiếu đã được lọc
                // Cập nhật bảng bằng cách thay thế nội dung tbody bằng dữ liệu mới
                $('table tbody').html(data);
            },
            error: function () {
                alert('Error occurred while filtering.');
            }
        });
    });
</script>
