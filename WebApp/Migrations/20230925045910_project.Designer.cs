// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230925045910_project")]
    partial class project
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "wqglypHd",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$wWgTO0PUiU3DkV6AhwWTS.Q5rqjUp/jjKvP6th9o0t4d7k.W/PEr6",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "2rHDfT2p",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$NpqwIosyCJuTuIMsyrn4seePHSFjfjLIh4DMZOfHYMbDW2beEhdxq",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "n8nEEFPg",
                            Email = "user@gmail.com",
                            Password = "$2a$11$609mX9JtnAOzPJu.28ymFOvxSMNuhT7g.wBbvQyI5DPIOGry/1PC6",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "40182 Swift Coves, New Odiemouth, Taiwan",
                            City = "New Gailshire",
                            DateOfBirth = new DateTime(2023, 5, 9, 13, 48, 16, 593, DateTimeKind.Local).AddTicks(5734),
                            Email = "Ashton99@yahoo.com",
                            FirstName = "Ashton",
                            FullName = "Ashton Balistreri",
                            Gender = true,
                            LastName = "Balistreri",
                            Phone = "1-757-631-7905 x14990",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/132.jpg",
                            Student_code = "StudentHK7iRIdB"
                        },
                        new
                        {
                            Id = 2,
                            Address = "4339 Pollich Mountain, Rosemarieville, Zambia",
                            City = "Loymouth",
                            DateOfBirth = new DateTime(2022, 12, 11, 6, 28, 2, 304, DateTimeKind.Local).AddTicks(5697),
                            Email = "Bonnie_Kiehn@gmail.com",
                            FirstName = "Bonnie",
                            FullName = "Bonnie Kiehn",
                            Gender = true,
                            LastName = "Kiehn",
                            Phone = "1-771-952-1087 x6877",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1141.jpg",
                            Student_code = "StudentGfDk2UkI"
                        },
                        new
                        {
                            Id = 3,
                            Address = "42849 Adelbert Bridge, Veldachester, Myanmar",
                            City = "Jaylinberg",
                            DateOfBirth = new DateTime(2023, 7, 11, 5, 56, 8, 85, DateTimeKind.Local).AddTicks(3813),
                            Email = "Assunta_Hintz@yahoo.com",
                            FirstName = "Assunta",
                            FullName = "Assunta Hintz",
                            Gender = false,
                            LastName = "Hintz",
                            Phone = "768-500-3829",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/60.jpg",
                            Student_code = "StudentpE7xeP2y"
                        },
                        new
                        {
                            Id = 4,
                            Address = "6455 Flatley Lodge, Johnsonstad, Costa Rica",
                            City = "South John",
                            DateOfBirth = new DateTime(2022, 12, 17, 23, 54, 45, 826, DateTimeKind.Local).AddTicks(7949),
                            Email = "Lucio55@hotmail.com",
                            FirstName = "Lucio",
                            FullName = "Lucio Reichel",
                            Gender = false,
                            LastName = "Reichel",
                            Phone = "1-911-715-3480 x7121",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/319.jpg",
                            Student_code = "StudentnpSevO9e"
                        },
                        new
                        {
                            Id = 5,
                            Address = "192 Kaylin Branch, East Jarrod, Uruguay",
                            City = "Hillsfurt",
                            DateOfBirth = new DateTime(2023, 5, 19, 11, 20, 22, 694, DateTimeKind.Local).AddTicks(2890),
                            Email = "Danielle_Kshlerin94@hotmail.com",
                            FirstName = "Danielle",
                            FullName = "Danielle Kshlerin",
                            Gender = false,
                            LastName = "Kshlerin",
                            Phone = "829.787.3362",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1112.jpg",
                            Student_code = "StudentxKfxUsIo"
                        },
                        new
                        {
                            Id = 6,
                            Address = "25863 Wallace Courts, North Sterling, Pakistan",
                            City = "West Thaddeusview",
                            DateOfBirth = new DateTime(2023, 6, 16, 11, 40, 26, 19, DateTimeKind.Local).AddTicks(9453),
                            Email = "Lorenza61@yahoo.com",
                            FirstName = "Lorenza",
                            FullName = "Lorenza O'Kon",
                            Gender = true,
                            LastName = "O'Kon",
                            Phone = "449.406.4572 x667",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/155.jpg",
                            Student_code = "StudentoUAiRhll"
                        },
                        new
                        {
                            Id = 7,
                            Address = "601 Wilhelmine Way, West Raleigh, Tonga",
                            City = "Garlandmouth",
                            DateOfBirth = new DateTime(2022, 12, 20, 10, 46, 40, 402, DateTimeKind.Local).AddTicks(6455),
                            Email = "Carley4@yahoo.com",
                            FirstName = "Carley",
                            FullName = "Carley Gislason",
                            Gender = true,
                            LastName = "Gislason",
                            Phone = "904.706.0416",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/939.jpg",
                            Student_code = "StudentInO7WNre"
                        },
                        new
                        {
                            Id = 8,
                            Address = "08787 Pacocha Glen, Port Eliezer, Sao Tome and Principe",
                            City = "Geovanyberg",
                            DateOfBirth = new DateTime(2022, 11, 18, 17, 34, 18, 930, DateTimeKind.Local).AddTicks(4918),
                            Email = "Kasey66@hotmail.com",
                            FirstName = "Kasey",
                            FullName = "Kasey Johnson",
                            Gender = false,
                            LastName = "Johnson",
                            Phone = "(229) 213-3467 x7590",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/442.jpg",
                            Student_code = "Student9eZbatuc"
                        },
                        new
                        {
                            Id = 9,
                            Address = "044 Selena Summit, Cristville, Liechtenstein",
                            City = "New Busterview",
                            DateOfBirth = new DateTime(2023, 3, 24, 23, 38, 15, 988, DateTimeKind.Local).AddTicks(8276),
                            Email = "Jerry_Becker@hotmail.com",
                            FirstName = "Jerry",
                            FullName = "Jerry Becker",
                            Gender = false,
                            LastName = "Becker",
                            Phone = "(816) 721-3679 x3916",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/119.jpg",
                            Student_code = "StudentsGJllX5R"
                        },
                        new
                        {
                            Id = 10,
                            Address = "584 Lacy Trace, Florinetown, Bosnia and Herzegovina",
                            City = "Heathcoteburgh",
                            DateOfBirth = new DateTime(2022, 10, 7, 4, 13, 28, 52, DateTimeKind.Local).AddTicks(1004),
                            Email = "Raymundo.OHara@yahoo.com",
                            FirstName = "Raymundo",
                            FullName = "Raymundo O'Hara",
                            Gender = true,
                            LastName = "O'Hara",
                            Phone = "468.598.1053",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/85.jpg",
                            Student_code = "StudentVqD8t9bU"
                        },
                        new
                        {
                            Id = 11,
                            Address = "693 Von Mission, Rohanchester, Dominican Republic",
                            City = "Lake Ilamouth",
                            DateOfBirth = new DateTime(2023, 8, 11, 11, 58, 30, 280, DateTimeKind.Local).AddTicks(7930),
                            Email = "Bernard_Rosenbaum@hotmail.com",
                            FirstName = "Bernard",
                            FullName = "Bernard Rosenbaum",
                            Gender = false,
                            LastName = "Rosenbaum",
                            Phone = "930.970.7556",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/494.jpg",
                            Student_code = "Student0xaBuGhM"
                        },
                        new
                        {
                            Id = 12,
                            Address = "4551 Tierra Overpass, Chloemouth, Nauru",
                            City = "South Keventon",
                            DateOfBirth = new DateTime(2022, 10, 6, 5, 40, 3, 903, DateTimeKind.Local).AddTicks(1892),
                            Email = "Brennon60@yahoo.com",
                            FirstName = "Brennon",
                            FullName = "Brennon Cole",
                            Gender = false,
                            LastName = "Cole",
                            Phone = "1-355-350-1480 x30023",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/353.jpg",
                            Student_code = "StudentLMmHpkBQ"
                        },
                        new
                        {
                            Id = 13,
                            Address = "167 Muriel Square, Jakubowskiland, Fiji",
                            City = "Cormierland",
                            DateOfBirth = new DateTime(2023, 8, 24, 8, 53, 14, 675, DateTimeKind.Local).AddTicks(4431),
                            Email = "Shanel.Hoppe@yahoo.com",
                            FirstName = "Shanel",
                            FullName = "Shanel Hoppe",
                            Gender = true,
                            LastName = "Hoppe",
                            Phone = "943-547-5710 x87611",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/575.jpg",
                            Student_code = "StudentDEqD8QWV"
                        },
                        new
                        {
                            Id = 14,
                            Address = "95742 West Trail, Kariside, Faroe Islands",
                            City = "Kathleenton",
                            DateOfBirth = new DateTime(2023, 5, 19, 5, 6, 40, 609, DateTimeKind.Local).AddTicks(643),
                            Email = "Fannie_Pacocha30@hotmail.com",
                            FirstName = "Fannie",
                            FullName = "Fannie Pacocha",
                            Gender = true,
                            LastName = "Pacocha",
                            Phone = "(421) 258-1060 x3370",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/486.jpg",
                            Student_code = "StudentvOumULPZ"
                        },
                        new
                        {
                            Id = 15,
                            Address = "81718 Clyde Greens, Veummouth, Belgium",
                            City = "South Salmamouth",
                            DateOfBirth = new DateTime(2022, 10, 21, 9, 28, 9, 592, DateTimeKind.Local).AddTicks(5777),
                            Email = "Tatum57@gmail.com",
                            FirstName = "Tatum",
                            FullName = "Tatum Cruickshank",
                            Gender = true,
                            LastName = "Cruickshank",
                            Phone = "556.282.7057",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1181.jpg",
                            Student_code = "StudentGtobTDuC"
                        },
                        new
                        {
                            Id = 16,
                            Address = "8790 Stamm Summit, Jarrodville, Tajikistan",
                            City = "Lake Erich",
                            DateOfBirth = new DateTime(2022, 11, 20, 6, 33, 13, 492, DateTimeKind.Local).AddTicks(355),
                            Email = "Helena.Powlowski@yahoo.com",
                            FirstName = "Helena",
                            FullName = "Helena Powlowski",
                            Gender = true,
                            LastName = "Powlowski",
                            Phone = "(979) 267-1298 x63505",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/159.jpg",
                            Student_code = "StudentlnPbR6TO"
                        },
                        new
                        {
                            Id = 17,
                            Address = "176 Larson Mission, Port Lucy, Brunei Darussalam",
                            City = "Port Catharine",
                            DateOfBirth = new DateTime(2023, 1, 20, 3, 25, 36, 179, DateTimeKind.Local).AddTicks(7502),
                            Email = "Ericka61@yahoo.com",
                            FirstName = "Ericka",
                            FullName = "Ericka Hintz",
                            Gender = true,
                            LastName = "Hintz",
                            Phone = "869-279-6613",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/958.jpg",
                            Student_code = "StudentqwjbEqoN"
                        },
                        new
                        {
                            Id = 18,
                            Address = "77348 Bernadette Prairie, West Sadye, Sweden",
                            City = "Langburgh",
                            DateOfBirth = new DateTime(2023, 8, 28, 17, 23, 6, 898, DateTimeKind.Local).AddTicks(6324),
                            Email = "Kamren_Bechtelar4@yahoo.com",
                            FirstName = "Kamren",
                            FullName = "Kamren Bechtelar",
                            Gender = false,
                            LastName = "Bechtelar",
                            Phone = "702-887-7336 x79037",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/131.jpg",
                            Student_code = "StudentR1RR1AKS"
                        },
                        new
                        {
                            Id = 19,
                            Address = "028 Murphy Pines, Hirthechester, Venezuela",
                            City = "Alexandreberg",
                            DateOfBirth = new DateTime(2023, 3, 26, 18, 11, 0, 467, DateTimeKind.Local).AddTicks(5268),
                            Email = "Geovany78@gmail.com",
                            FirstName = "Geovany",
                            FullName = "Geovany Mayer",
                            Gender = true,
                            LastName = "Mayer",
                            Phone = "(499) 931-4259",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/308.jpg",
                            Student_code = "StudentUNKM4i38"
                        },
                        new
                        {
                            Id = 20,
                            Address = "94841 Stoltenberg Forks, South Anderson, Sao Tome and Principe",
                            City = "Eldonchester",
                            DateOfBirth = new DateTime(2022, 12, 13, 20, 8, 51, 625, DateTimeKind.Local).AddTicks(1644),
                            Email = "Asia.Marquardt@hotmail.com",
                            FirstName = "Asia",
                            FullName = "Asia Marquardt",
                            Gender = true,
                            LastName = "Marquardt",
                            Phone = "342-746-3432 x89641",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/171.jpg",
                            Student_code = "StudentMHCTwM5I"
                        },
                        new
                        {
                            Id = 21,
                            Address = "00856 Conn Shoals, Garrisonshire, Macedonia",
                            City = "Jacobiview",
                            DateOfBirth = new DateTime(2022, 10, 11, 16, 39, 55, 322, DateTimeKind.Local).AddTicks(455),
                            Email = "Willard76@yahoo.com",
                            FirstName = "Willard",
                            FullName = "Willard Kemmer",
                            Gender = false,
                            LastName = "Kemmer",
                            Phone = "630-286-5753",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/88.jpg",
                            Student_code = "Student4HYFyNlu"
                        },
                        new
                        {
                            Id = 22,
                            Address = "9759 Myra Ridges, Port Brice, British Indian Ocean Territory (Chagos Archipelago)",
                            City = "Bayerfurt",
                            DateOfBirth = new DateTime(2023, 9, 10, 7, 10, 44, 625, DateTimeKind.Local).AddTicks(5338),
                            Email = "Lamont.Hoeger65@hotmail.com",
                            FirstName = "Lamont",
                            FullName = "Lamont Hoeger",
                            Gender = false,
                            LastName = "Hoeger",
                            Phone = "710-202-0760",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/13.jpg",
                            Student_code = "StudenttnkuyL3L"
                        },
                        new
                        {
                            Id = 23,
                            Address = "50101 Bins Keys, Beckerport, Austria",
                            City = "South Ethel",
                            DateOfBirth = new DateTime(2022, 11, 3, 15, 58, 14, 70, DateTimeKind.Local).AddTicks(8368),
                            Email = "Herbert.Huels@yahoo.com",
                            FirstName = "Herbert",
                            FullName = "Herbert Huels",
                            Gender = true,
                            LastName = "Huels",
                            Phone = "568-377-9203",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/673.jpg",
                            Student_code = "Student4ayAEiNf"
                        },
                        new
                        {
                            Id = 24,
                            Address = "9189 Flatley View, Wittington, Palestinian Territory",
                            City = "Port Altatown",
                            DateOfBirth = new DateTime(2022, 12, 16, 8, 20, 0, 33, DateTimeKind.Local).AddTicks(6546),
                            Email = "Aniyah_Nader@hotmail.com",
                            FirstName = "Aniyah",
                            FullName = "Aniyah Nader",
                            Gender = true,
                            LastName = "Nader",
                            Phone = "375-712-7050",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/852.jpg",
                            Student_code = "StudentfkRtcCE2"
                        },
                        new
                        {
                            Id = 25,
                            Address = "53958 Gerhard Wall, Lake Rylanfurt, Mali",
                            City = "North Marcoberg",
                            DateOfBirth = new DateTime(2023, 4, 24, 22, 30, 33, 585, DateTimeKind.Local).AddTicks(2806),
                            Email = "Immanuel.Hegmann26@hotmail.com",
                            FirstName = "Immanuel",
                            FullName = "Immanuel Hegmann",
                            Gender = true,
                            LastName = "Hegmann",
                            Phone = "782.869.2327",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1174.jpg",
                            Student_code = "Student3xE7TGd4"
                        },
                        new
                        {
                            Id = 26,
                            Address = "7326 Alaina Club, West Allieberg, Madagascar",
                            City = "Gulgowskihaven",
                            DateOfBirth = new DateTime(2023, 3, 6, 21, 32, 37, 464, DateTimeKind.Local).AddTicks(4464),
                            Email = "Bernardo_Larson@gmail.com",
                            FirstName = "Bernardo",
                            FullName = "Bernardo Larson",
                            Gender = false,
                            LastName = "Larson",
                            Phone = "(290) 608-4745",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/608.jpg",
                            Student_code = "StudentWCrFyAtx"
                        },
                        new
                        {
                            Id = 27,
                            Address = "5123 Ethel Pine, Rutherfordtown, Mali",
                            City = "Candelarioville",
                            DateOfBirth = new DateTime(2022, 10, 30, 20, 35, 58, 460, DateTimeKind.Local).AddTicks(7624),
                            Email = "Lenora21@gmail.com",
                            FirstName = "Lenora",
                            FullName = "Lenora Christiansen",
                            Gender = true,
                            LastName = "Christiansen",
                            Phone = "280-949-4571 x485",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/250.jpg",
                            Student_code = "StudentoB1NkdM9"
                        },
                        new
                        {
                            Id = 28,
                            Address = "488 West Junction, Haleyburgh, Belgium",
                            City = "Beattyville",
                            DateOfBirth = new DateTime(2023, 1, 22, 19, 50, 4, 514, DateTimeKind.Local).AddTicks(9442),
                            Email = "Betsy55@yahoo.com",
                            FirstName = "Betsy",
                            FullName = "Betsy Hamill",
                            Gender = false,
                            LastName = "Hamill",
                            Phone = "529.284.4916 x8939",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/686.jpg",
                            Student_code = "Student08g4mSc3"
                        },
                        new
                        {
                            Id = 29,
                            Address = "584 Shanahan Cove, East Marguerite, Samoa",
                            City = "Erinport",
                            DateOfBirth = new DateTime(2022, 9, 30, 23, 0, 40, 455, DateTimeKind.Local).AddTicks(8379),
                            Email = "Fletcher.Koss@gmail.com",
                            FirstName = "Fletcher",
                            FullName = "Fletcher Koss",
                            Gender = true,
                            LastName = "Koss",
                            Phone = "285-769-8905",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1161.jpg",
                            Student_code = "StudentgeqfKXJH"
                        },
                        new
                        {
                            Id = 30,
                            Address = "4578 Buckridge Valleys, South Enidhaven, Congo",
                            City = "Sadyebury",
                            DateOfBirth = new DateTime(2022, 12, 1, 19, 50, 40, 916, DateTimeKind.Local).AddTicks(5205),
                            Email = "Burdette33@yahoo.com",
                            FirstName = "Burdette",
                            FullName = "Burdette Ruecker",
                            Gender = true,
                            LastName = "Ruecker",
                            Phone = "(587) 334-7546",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/108.jpg",
                            Student_code = "StudentMzEvPS2I"
                        },
                        new
                        {
                            Id = 31,
                            Address = "6262 Porter Mountains, North Samanthaside, Portugal",
                            City = "West Donaldmouth",
                            DateOfBirth = new DateTime(2022, 12, 1, 4, 48, 40, 11, DateTimeKind.Local).AddTicks(9775),
                            Email = "Amina.Bins27@yahoo.com",
                            FirstName = "Amina",
                            FullName = "Amina Bins",
                            Gender = true,
                            LastName = "Bins",
                            Phone = "1-340-683-1589 x4698",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/880.jpg",
                            Student_code = "StudentQblGmKlf"
                        },
                        new
                        {
                            Id = 32,
                            Address = "3000 Esmeralda Drive, South Margeport, Liberia",
                            City = "West Marshall",
                            DateOfBirth = new DateTime(2022, 12, 21, 18, 46, 59, 57, DateTimeKind.Local).AddTicks(6688),
                            Email = "Wallace_Sauer48@gmail.com",
                            FirstName = "Wallace",
                            FullName = "Wallace Sauer",
                            Gender = true,
                            LastName = "Sauer",
                            Phone = "922-640-4126",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/61.jpg",
                            Student_code = "StudenteqysmO0p"
                        },
                        new
                        {
                            Id = 33,
                            Address = "45874 Legros Mill, Mossieberg, Togo",
                            City = "Balistrerimouth",
                            DateOfBirth = new DateTime(2023, 4, 25, 10, 56, 9, 180, DateTimeKind.Local).AddTicks(6206),
                            Email = "Mustafa72@gmail.com",
                            FirstName = "Mustafa",
                            FullName = "Mustafa Boyer",
                            Gender = true,
                            LastName = "Boyer",
                            Phone = "1-370-755-9732",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/292.jpg",
                            Student_code = "StudentGMcFdCNh"
                        },
                        new
                        {
                            Id = 34,
                            Address = "2650 Spinka Brook, Diegoville, France",
                            City = "Cruickshankburgh",
                            DateOfBirth = new DateTime(2023, 8, 20, 9, 49, 11, 209, DateTimeKind.Local).AddTicks(9597),
                            Email = "Aric_Hickle78@hotmail.com",
                            FirstName = "Aric",
                            FullName = "Aric Hickle",
                            Gender = true,
                            LastName = "Hickle",
                            Phone = "1-317-653-4860",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/789.jpg",
                            Student_code = "Student6NKL6ksK"
                        },
                        new
                        {
                            Id = 35,
                            Address = "74435 Dawson Drive, North Jenifer, Ethiopia",
                            City = "Pollichburgh",
                            DateOfBirth = new DateTime(2022, 12, 1, 16, 31, 21, 61, DateTimeKind.Local).AddTicks(1730),
                            Email = "Tre_Durgan54@hotmail.com",
                            FirstName = "Tre",
                            FullName = "Tre Durgan",
                            Gender = true,
                            LastName = "Durgan",
                            Phone = "1-355-387-2360",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/720.jpg",
                            Student_code = "StudentvexibZjz"
                        },
                        new
                        {
                            Id = 36,
                            Address = "0355 Leuschke Spur, Purdychester, Congo",
                            City = "East Carmelmouth",
                            DateOfBirth = new DateTime(2023, 4, 7, 3, 57, 44, 481, DateTimeKind.Local).AddTicks(845),
                            Email = "Krista.Hegmann@yahoo.com",
                            FirstName = "Krista",
                            FullName = "Krista Hegmann",
                            Gender = true,
                            LastName = "Hegmann",
                            Phone = "393-939-6840",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/589.jpg",
                            Student_code = "StudentD6k7EbB8"
                        },
                        new
                        {
                            Id = 37,
                            Address = "506 Vita Forest, West Laurineshire, Gabon",
                            City = "Alfredafurt",
                            DateOfBirth = new DateTime(2023, 4, 22, 15, 6, 33, 937, DateTimeKind.Local).AddTicks(1850),
                            Email = "Ruthe_Quitzon66@yahoo.com",
                            FirstName = "Ruthe",
                            FullName = "Ruthe Quitzon",
                            Gender = true,
                            LastName = "Quitzon",
                            Phone = "449-236-0255 x32144",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/997.jpg",
                            Student_code = "StudentAvXTjtFA"
                        },
                        new
                        {
                            Id = 38,
                            Address = "610 Ankunding View, North Micah, New Caledonia",
                            City = "Lueilwitzborough",
                            DateOfBirth = new DateTime(2022, 10, 25, 13, 53, 45, 280, DateTimeKind.Local).AddTicks(9881),
                            Email = "Aileen_Klocko@gmail.com",
                            FirstName = "Aileen",
                            FullName = "Aileen Klocko",
                            Gender = true,
                            LastName = "Klocko",
                            Phone = "963.294.0247 x669",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/614.jpg",
                            Student_code = "StudenttMDa7qj7"
                        },
                        new
                        {
                            Id = 39,
                            Address = "13921 Krystina Road, Port Edythe, Virgin Islands, British",
                            City = "Port Lilyan",
                            DateOfBirth = new DateTime(2023, 2, 1, 11, 1, 20, 557, DateTimeKind.Local).AddTicks(5127),
                            Email = "Napoleon.Treutel0@gmail.com",
                            FirstName = "Napoleon",
                            FullName = "Napoleon Treutel",
                            Gender = true,
                            LastName = "Treutel",
                            Phone = "1-656-645-0933 x384",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/922.jpg",
                            Student_code = "Student2cCCl5Kl"
                        },
                        new
                        {
                            Id = 40,
                            Address = "116 Lilyan Falls, Stammton, Lebanon",
                            City = "East Ansley",
                            DateOfBirth = new DateTime(2023, 5, 19, 14, 1, 2, 827, DateTimeKind.Local).AddTicks(2669),
                            Email = "Percival64@yahoo.com",
                            FirstName = "Percival",
                            FullName = "Percival Bernhard",
                            Gender = false,
                            LastName = "Bernhard",
                            Phone = "1-884-697-8693",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/36.jpg",
                            Student_code = "StudentKn8ECrA7"
                        },
                        new
                        {
                            Id = 41,
                            Address = "59133 Benjamin Circles, Mantemouth, Botswana",
                            City = "Prosaccoside",
                            DateOfBirth = new DateTime(2023, 7, 2, 11, 36, 34, 500, DateTimeKind.Local).AddTicks(5583),
                            Email = "Raina_Collier@gmail.com",
                            FirstName = "Raina",
                            FullName = "Raina Collier",
                            Gender = true,
                            LastName = "Collier",
                            Phone = "1-776-795-8994 x12375",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/122.jpg",
                            Student_code = "StudentObFn8q12"
                        },
                        new
                        {
                            Id = 42,
                            Address = "123 Trudie Trace, Bashirianfurt, Bosnia and Herzegovina",
                            City = "Kleinstad",
                            DateOfBirth = new DateTime(2023, 3, 25, 22, 14, 11, 929, DateTimeKind.Local).AddTicks(6422),
                            Email = "Henri_Fisher@gmail.com",
                            FirstName = "Henri",
                            FullName = "Henri Fisher",
                            Gender = false,
                            LastName = "Fisher",
                            Phone = "(499) 667-2161 x562",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/609.jpg",
                            Student_code = "StudenttnlC4ZnF"
                        },
                        new
                        {
                            Id = 43,
                            Address = "166 Anne Groves, North Cassieshire, Virgin Islands, U.S.",
                            City = "New Fionafurt",
                            DateOfBirth = new DateTime(2023, 7, 20, 13, 21, 8, 405, DateTimeKind.Local).AddTicks(8188),
                            Email = "Missouri_Quitzon99@gmail.com",
                            FirstName = "Missouri",
                            FullName = "Missouri Quitzon",
                            Gender = false,
                            LastName = "Quitzon",
                            Phone = "843.419.7177",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/191.jpg",
                            Student_code = "StudentDyQPBOYi"
                        },
                        new
                        {
                            Id = 44,
                            Address = "835 Beatty Rue, Lake Octaviaport, Iraq",
                            City = "Kathrynburgh",
                            DateOfBirth = new DateTime(2022, 11, 4, 0, 6, 50, 25, DateTimeKind.Local).AddTicks(3143),
                            Email = "Tremayne.VonRueden5@hotmail.com",
                            FirstName = "Tremayne",
                            FullName = "Tremayne VonRueden",
                            Gender = true,
                            LastName = "VonRueden",
                            Phone = "324-241-8737",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/259.jpg",
                            Student_code = "StudentKIyDdZYR"
                        },
                        new
                        {
                            Id = 45,
                            Address = "9637 Prosacco Track, East Bricemouth, Hungary",
                            City = "Mrazborough",
                            DateOfBirth = new DateTime(2023, 2, 28, 18, 27, 28, 641, DateTimeKind.Local).AddTicks(6947),
                            Email = "Junior.Nicolas28@hotmail.com",
                            FirstName = "Junior",
                            FullName = "Junior Nicolas",
                            Gender = true,
                            LastName = "Nicolas",
                            Phone = "248.830.6446 x2214",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/475.jpg",
                            Student_code = "Student310bOM2o"
                        },
                        new
                        {
                            Id = 46,
                            Address = "6042 Wehner Manors, Jaylenville, Czech Republic",
                            City = "East Gennarochester",
                            DateOfBirth = new DateTime(2023, 1, 12, 23, 53, 54, 342, DateTimeKind.Local).AddTicks(3629),
                            Email = "Gardner63@hotmail.com",
                            FirstName = "Gardner",
                            FullName = "Gardner Lubowitz",
                            Gender = true,
                            LastName = "Lubowitz",
                            Phone = "576-305-2946",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/187.jpg",
                            Student_code = "Studenth8XmFc4Q"
                        },
                        new
                        {
                            Id = 47,
                            Address = "95600 Benjamin Field, North Filibertohaven, India",
                            City = "North Itzelberg",
                            DateOfBirth = new DateTime(2022, 12, 4, 15, 52, 59, 975, DateTimeKind.Local).AddTicks(8671),
                            Email = "Manuela.Pollich@hotmail.com",
                            FirstName = "Manuela",
                            FullName = "Manuela Pollich",
                            Gender = false,
                            LastName = "Pollich",
                            Phone = "1-359-954-7432 x556",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/16.jpg",
                            Student_code = "StudentfFUfU6GF"
                        },
                        new
                        {
                            Id = 48,
                            Address = "63248 Dandre Burg, New Lorainemouth, French Southern Territories",
                            City = "Zemlakfurt",
                            DateOfBirth = new DateTime(2023, 9, 24, 11, 9, 8, 900, DateTimeKind.Local).AddTicks(2060),
                            Email = "Magali32@gmail.com",
                            FirstName = "Magali",
                            FullName = "Magali Waelchi",
                            Gender = true,
                            LastName = "Waelchi",
                            Phone = "1-350-791-8355",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/632.jpg",
                            Student_code = "StudentLSRTxAmH"
                        },
                        new
                        {
                            Id = 49,
                            Address = "61731 Daugherty Gateway, Kiehntown, Czech Republic",
                            City = "East Andystad",
                            DateOfBirth = new DateTime(2023, 3, 22, 6, 7, 35, 498, DateTimeKind.Local).AddTicks(1547),
                            Email = "Dino.Batz@hotmail.com",
                            FirstName = "Dino",
                            FullName = "Dino Batz",
                            Gender = false,
                            LastName = "Batz",
                            Phone = "357.496.2427 x87877",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/477.jpg",
                            Student_code = "StudentxbDvmqlC"
                        },
                        new
                        {
                            Id = 50,
                            Address = "8225 Elna Way, Cydneybury, Mali",
                            City = "Gaylordburgh",
                            DateOfBirth = new DateTime(2023, 4, 6, 13, 16, 51, 427, DateTimeKind.Local).AddTicks(2342),
                            Email = "Ella.Kling66@gmail.com",
                            FirstName = "Ella",
                            FullName = "Ella Kling",
                            Gender = true,
                            LastName = "Kling",
                            Phone = "677.975.8053 x29038",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/560.jpg",
                            Student_code = "StudentdbgMnFNF"
                        });
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.Priority", null)
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
