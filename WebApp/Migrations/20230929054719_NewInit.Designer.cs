// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230929054719_NewInit")]
    partial class NewInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewId")
                        .HasColumnType("int");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("tbComments");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbNews");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "epLDDoPe",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$d3Iyd6zc61MAkgjHpCEJuOQnNuzWAlpUovvu1wBh0RGH8O3EbLjhu",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "BavlznID",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$TcC/V0mKIJQstt3P7n9FWO2dDmozt6iRz3b7ahC.tw5EyHYR9yr1i",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "lcL3l3qC",
                            Email = "user@gmail.com",
                            Password = "$2a$11$f641hV/Jdf.wAzdiQKN3FubWMxIXxP6nxzHBBKAkWkF0MRA2tEYmq",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "6438 Stamm River, North Shanaview, Bulgaria",
                            City = "Lorenhaven",
                            DateOfBirth = new DateTime(2023, 5, 24, 14, 9, 18, 850, DateTimeKind.Local).AddTicks(4358),
                            Email = "Eveline29@gmail.com",
                            FirstName = "Eveline",
                            FullName = "Eveline Rath",
                            Gender = true,
                            LastName = "Rath",
                            Phone = "732.440.2109 x766",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/270.jpg",
                            Student_code = "StudentbplM5eRJ"
                        },
                        new
                        {
                            Id = 2,
                            Address = "614 Leannon Village, Darrellfurt, Haiti",
                            City = "Emeraldland",
                            DateOfBirth = new DateTime(2022, 11, 29, 3, 3, 8, 446, DateTimeKind.Local).AddTicks(873),
                            Email = "Imogene.Cassin@yahoo.com",
                            FirstName = "Imogene",
                            FullName = "Imogene Cassin",
                            Gender = false,
                            LastName = "Cassin",
                            Phone = "(775) 225-1201 x6151",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1183.jpg",
                            Student_code = "StudentWQCx9TZO"
                        },
                        new
                        {
                            Id = 3,
                            Address = "19401 Izaiah Lake, South Katrina, Guinea-Bissau",
                            City = "New Kaleighfurt",
                            DateOfBirth = new DateTime(2023, 1, 16, 21, 18, 30, 346, DateTimeKind.Local).AddTicks(9691),
                            Email = "Emily.Hoppe@yahoo.com",
                            FirstName = "Emily",
                            FullName = "Emily Hoppe",
                            Gender = true,
                            LastName = "Hoppe",
                            Phone = "439.330.3216 x7682",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/673.jpg",
                            Student_code = "Student7ZDXXSWS"
                        },
                        new
                        {
                            Id = 4,
                            Address = "54201 Little Springs, North Antoniaport, Indonesia",
                            City = "West Hilma",
                            DateOfBirth = new DateTime(2023, 3, 5, 3, 47, 55, 627, DateTimeKind.Local).AddTicks(2756),
                            Email = "Rocky.Moen@yahoo.com",
                            FirstName = "Rocky",
                            FullName = "Rocky Moen",
                            Gender = true,
                            LastName = "Moen",
                            Phone = "(796) 582-1889",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/687.jpg",
                            Student_code = "StudentCjAj1rWw"
                        },
                        new
                        {
                            Id = 5,
                            Address = "056 Isaac Key, Lizaburgh, Congo",
                            City = "North Leeview",
                            DateOfBirth = new DateTime(2022, 11, 11, 19, 6, 38, 690, DateTimeKind.Local).AddTicks(9201),
                            Email = "Julie64@yahoo.com",
                            FirstName = "Julie",
                            FullName = "Julie Wisoky",
                            Gender = false,
                            LastName = "Wisoky",
                            Phone = "507-668-3245 x3610",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1026.jpg",
                            Student_code = "StudentC8U5r9Oe"
                        },
                        new
                        {
                            Id = 6,
                            Address = "20798 Skye Grove, South Ignatius, Georgia",
                            City = "New Llewellynburgh",
                            DateOfBirth = new DateTime(2023, 9, 2, 18, 1, 58, 693, DateTimeKind.Local).AddTicks(6493),
                            Email = "Makayla_Beer38@yahoo.com",
                            FirstName = "Makayla",
                            FullName = "Makayla Beer",
                            Gender = false,
                            LastName = "Beer",
                            Phone = "366.587.1474 x542",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1196.jpg",
                            Student_code = "StudentUij0KHdb"
                        },
                        new
                        {
                            Id = 7,
                            Address = "5941 Goldner Dam, Kaseyhaven, Nepal",
                            City = "East Violetteland",
                            DateOfBirth = new DateTime(2022, 12, 13, 20, 36, 36, 988, DateTimeKind.Local).AddTicks(7428),
                            Email = "Hollie.Hettinger5@gmail.com",
                            FirstName = "Hollie",
                            FullName = "Hollie Hettinger",
                            Gender = false,
                            LastName = "Hettinger",
                            Phone = "(449) 569-3249",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/272.jpg",
                            Student_code = "StudentBJiYMPUb"
                        },
                        new
                        {
                            Id = 8,
                            Address = "0448 Fahey Meadow, New Asha, Iran",
                            City = "Port Luella",
                            DateOfBirth = new DateTime(2023, 8, 23, 16, 44, 9, 574, DateTimeKind.Local).AddTicks(24),
                            Email = "Barry_Runolfsdottir@gmail.com",
                            FirstName = "Barry",
                            FullName = "Barry Runolfsdottir",
                            Gender = false,
                            LastName = "Runolfsdottir",
                            Phone = "(270) 787-4321 x29343",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/314.jpg",
                            Student_code = "StudentvU8fghIF"
                        },
                        new
                        {
                            Id = 9,
                            Address = "054 Yost Underpass, Port Gerardoville, Suriname",
                            City = "New June",
                            DateOfBirth = new DateTime(2023, 7, 15, 18, 21, 54, 215, DateTimeKind.Local).AddTicks(1665),
                            Email = "Sally74@gmail.com",
                            FirstName = "Sally",
                            FullName = "Sally Witting",
                            Gender = false,
                            LastName = "Witting",
                            Phone = "(265) 277-1237 x3791",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/891.jpg",
                            Student_code = "StudentGBL4mrgO"
                        },
                        new
                        {
                            Id = 10,
                            Address = "923 Fiona Island, Satterfieldshire, Vietnam",
                            City = "New Alejandra",
                            DateOfBirth = new DateTime(2023, 5, 9, 8, 6, 38, 49, DateTimeKind.Local).AddTicks(6988),
                            Email = "Eldora_Wilderman93@yahoo.com",
                            FirstName = "Eldora",
                            FullName = "Eldora Wilderman",
                            Gender = true,
                            LastName = "Wilderman",
                            Phone = "(558) 338-7222",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/280.jpg",
                            Student_code = "StudentH6dL8Gtw"
                        },
                        new
                        {
                            Id = 11,
                            Address = "89099 Carrie Roads, Javonbury, Algeria",
                            City = "Hintzton",
                            DateOfBirth = new DateTime(2022, 10, 20, 19, 46, 15, 178, DateTimeKind.Local).AddTicks(937),
                            Email = "Pete.Cormier@yahoo.com",
                            FirstName = "Pete",
                            FullName = "Pete Cormier",
                            Gender = true,
                            LastName = "Cormier",
                            Phone = "371.853.9270",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/816.jpg",
                            Student_code = "StudentmV9PvxOC"
                        },
                        new
                        {
                            Id = 12,
                            Address = "3476 Beatty Drive, North Lloydstad, Luxembourg",
                            City = "New Antoneport",
                            DateOfBirth = new DateTime(2023, 9, 18, 12, 13, 17, 422, DateTimeKind.Local).AddTicks(5009),
                            Email = "London14@gmail.com",
                            FirstName = "London",
                            FullName = "London Rowe",
                            Gender = true,
                            LastName = "Rowe",
                            Phone = "1-563-253-6480",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/690.jpg",
                            Student_code = "StudentgqzO3eFO"
                        },
                        new
                        {
                            Id = 13,
                            Address = "33496 Trudie Prairie, New Palmastad, Philippines",
                            City = "East Kayleeland",
                            DateOfBirth = new DateTime(2022, 11, 26, 20, 21, 3, 890, DateTimeKind.Local).AddTicks(7995),
                            Email = "Arjun.Morissette58@hotmail.com",
                            FirstName = "Arjun",
                            FullName = "Arjun Morissette",
                            Gender = false,
                            LastName = "Morissette",
                            Phone = "(508) 246-6627",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1158.jpg",
                            Student_code = "StudentONLb5NAH"
                        },
                        new
                        {
                            Id = 14,
                            Address = "70789 Mills Stravenue, Rayshire, Cape Verde",
                            City = "Harveyville",
                            DateOfBirth = new DateTime(2023, 6, 6, 17, 41, 37, 911, DateTimeKind.Local).AddTicks(2536),
                            Email = "Gretchen_McKenzie@gmail.com",
                            FirstName = "Gretchen",
                            FullName = "Gretchen McKenzie",
                            Gender = true,
                            LastName = "McKenzie",
                            Phone = "(676) 851-2207 x87701",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/39.jpg",
                            Student_code = "StudentPneRpQiv"
                        },
                        new
                        {
                            Id = 15,
                            Address = "28921 Flatley Avenue, Laceyland, Faroe Islands",
                            City = "New Winstonfort",
                            DateOfBirth = new DateTime(2023, 4, 5, 4, 12, 21, 268, DateTimeKind.Local).AddTicks(9074),
                            Email = "Thora40@yahoo.com",
                            FirstName = "Thora",
                            FullName = "Thora Powlowski",
                            Gender = false,
                            LastName = "Powlowski",
                            Phone = "821-969-1888 x725",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/825.jpg",
                            Student_code = "Studentb0coSFKO"
                        },
                        new
                        {
                            Id = 16,
                            Address = "225 Cassin Plain, East Nia, Rwanda",
                            City = "East Johnnieville",
                            DateOfBirth = new DateTime(2023, 2, 2, 16, 2, 37, 819, DateTimeKind.Local).AddTicks(9989),
                            Email = "Zora46@hotmail.com",
                            FirstName = "Zora",
                            FullName = "Zora Mayer",
                            Gender = false,
                            LastName = "Mayer",
                            Phone = "1-329-597-8728 x4558",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1163.jpg",
                            Student_code = "Student6Rs7FVpU"
                        },
                        new
                        {
                            Id = 17,
                            Address = "5425 Ebony Terrace, Lake Mohamed, Spain",
                            City = "West Sammiebury",
                            DateOfBirth = new DateTime(2023, 9, 18, 19, 24, 55, 348, DateTimeKind.Local).AddTicks(2505),
                            Email = "Johann.Stiedemann36@hotmail.com",
                            FirstName = "Johann",
                            FullName = "Johann Stiedemann",
                            Gender = false,
                            LastName = "Stiedemann",
                            Phone = "1-757-922-8230 x53283",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/420.jpg",
                            Student_code = "StudentEo1DiFW9"
                        },
                        new
                        {
                            Id = 18,
                            Address = "201 Larson Lake, New Gianni, Malaysia",
                            City = "Flatleyfort",
                            DateOfBirth = new DateTime(2023, 6, 20, 4, 30, 51, 633, DateTimeKind.Local).AddTicks(451),
                            Email = "Abdiel.Cartwright@gmail.com",
                            FirstName = "Abdiel",
                            FullName = "Abdiel Cartwright",
                            Gender = false,
                            LastName = "Cartwright",
                            Phone = "233.912.6908 x436",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1182.jpg",
                            Student_code = "Student7WoMUl7U"
                        },
                        new
                        {
                            Id = 19,
                            Address = "387 Margaretta Unions, Port Taya, China",
                            City = "Lake Reidmouth",
                            DateOfBirth = new DateTime(2023, 1, 31, 4, 58, 57, 563, DateTimeKind.Local).AddTicks(2212),
                            Email = "Arjun.Anderson11@yahoo.com",
                            FirstName = "Arjun",
                            FullName = "Arjun Anderson",
                            Gender = false,
                            LastName = "Anderson",
                            Phone = "457.541.4935 x12052",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/654.jpg",
                            Student_code = "Student9kA3O2NM"
                        },
                        new
                        {
                            Id = 20,
                            Address = "250 Veda Shores, Osvaldofurt, Haiti",
                            City = "South Karleeville",
                            DateOfBirth = new DateTime(2023, 8, 22, 14, 40, 39, 888, DateTimeKind.Local).AddTicks(4698),
                            Email = "Rossie.Aufderhar@hotmail.com",
                            FirstName = "Rossie",
                            FullName = "Rossie Aufderhar",
                            Gender = false,
                            LastName = "Aufderhar",
                            Phone = "1-600-200-7741 x748",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/789.jpg",
                            Student_code = "Student2h4Kth21"
                        },
                        new
                        {
                            Id = 21,
                            Address = "4858 Brendon Walk, Kreigerburgh, Sweden",
                            City = "North Talon",
                            DateOfBirth = new DateTime(2022, 10, 12, 20, 11, 10, 365, DateTimeKind.Local).AddTicks(2299),
                            Email = "Horace_Christiansen24@gmail.com",
                            FirstName = "Horace",
                            FullName = "Horace Christiansen",
                            Gender = true,
                            LastName = "Christiansen",
                            Phone = "1-862-581-1472 x03475",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/962.jpg",
                            Student_code = "StudentUndYUfnw"
                        },
                        new
                        {
                            Id = 22,
                            Address = "8782 Borer Centers, Port Oliver, Germany",
                            City = "South Russel",
                            DateOfBirth = new DateTime(2023, 5, 8, 19, 43, 57, 395, DateTimeKind.Local).AddTicks(1462),
                            Email = "Berta_Wisozk@yahoo.com",
                            FirstName = "Berta",
                            FullName = "Berta Wisozk",
                            Gender = false,
                            LastName = "Wisozk",
                            Phone = "942.501.9557",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/349.jpg",
                            Student_code = "StudentN0jAghgr"
                        },
                        new
                        {
                            Id = 23,
                            Address = "1843 Kessler Ford, Blickside, Bulgaria",
                            City = "Kriston",
                            DateOfBirth = new DateTime(2023, 6, 24, 2, 45, 45, 351, DateTimeKind.Local).AddTicks(8690),
                            Email = "Horacio_Watsica77@yahoo.com",
                            FirstName = "Horacio",
                            FullName = "Horacio Watsica",
                            Gender = true,
                            LastName = "Watsica",
                            Phone = "1-617-450-5267 x72598",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/322.jpg",
                            Student_code = "Studentipxb7gfT"
                        },
                        new
                        {
                            Id = 24,
                            Address = "9340 Hadley Path, Lake Hershel, Antarctica (the territory South of 60 deg S)",
                            City = "North Celestineview",
                            DateOfBirth = new DateTime(2023, 7, 17, 6, 51, 43, 722, DateTimeKind.Local).AddTicks(8386),
                            Email = "Kimberly.Kihn35@yahoo.com",
                            FirstName = "Kimberly",
                            FullName = "Kimberly Kihn",
                            Gender = false,
                            LastName = "Kihn",
                            Phone = "1-459-982-8773",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1086.jpg",
                            Student_code = "Studentole5Xur0"
                        },
                        new
                        {
                            Id = 25,
                            Address = "4782 Stracke Junctions, West Sagehaven, Angola",
                            City = "Hintzview",
                            DateOfBirth = new DateTime(2022, 11, 1, 23, 53, 30, 133, DateTimeKind.Local).AddTicks(8871),
                            Email = "Erna_Rempel70@gmail.com",
                            FirstName = "Erna",
                            FullName = "Erna Rempel",
                            Gender = true,
                            LastName = "Rempel",
                            Phone = "1-455-605-9879",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/71.jpg",
                            Student_code = "StudentE4l2XkDT"
                        },
                        new
                        {
                            Id = 26,
                            Address = "58697 Barrows Manors, Lake Ocieview, Andorra",
                            City = "Kiehnville",
                            DateOfBirth = new DateTime(2023, 3, 28, 10, 10, 40, 910, DateTimeKind.Local).AddTicks(6261),
                            Email = "Lavonne99@hotmail.com",
                            FirstName = "Lavonne",
                            FullName = "Lavonne Jakubowski",
                            Gender = false,
                            LastName = "Jakubowski",
                            Phone = "719-536-0263",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/922.jpg",
                            Student_code = "Student2RsSOgjf"
                        },
                        new
                        {
                            Id = 27,
                            Address = "68120 Block Road, East Timmy, Syrian Arab Republic",
                            City = "Billberg",
                            DateOfBirth = new DateTime(2023, 6, 30, 15, 16, 20, 137, DateTimeKind.Local).AddTicks(7446),
                            Email = "Audra.Hansen21@yahoo.com",
                            FirstName = "Audra",
                            FullName = "Audra Hansen",
                            Gender = false,
                            LastName = "Hansen",
                            Phone = "1-543-925-0731",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1066.jpg",
                            Student_code = "Student4LhS2m21"
                        },
                        new
                        {
                            Id = 28,
                            Address = "58331 Josiah Drives, North Dashawnburgh, France",
                            City = "West Darian",
                            DateOfBirth = new DateTime(2023, 2, 27, 18, 6, 17, 444, DateTimeKind.Local).AddTicks(8613),
                            Email = "Arnulfo99@yahoo.com",
                            FirstName = "Arnulfo",
                            FullName = "Arnulfo Kertzmann",
                            Gender = true,
                            LastName = "Kertzmann",
                            Phone = "994.981.8091",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/952.jpg",
                            Student_code = "StudentzZwy0hKU"
                        },
                        new
                        {
                            Id = 29,
                            Address = "220 Becker Summit, Wittingmouth, Cambodia",
                            City = "New Raoulburgh",
                            DateOfBirth = new DateTime(2023, 9, 4, 22, 21, 9, 672, DateTimeKind.Local).AddTicks(3843),
                            Email = "Rachel77@hotmail.com",
                            FirstName = "Rachel",
                            FullName = "Rachel Quitzon",
                            Gender = false,
                            LastName = "Quitzon",
                            Phone = "(498) 621-2957 x169",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1091.jpg",
                            Student_code = "StudentpMH9uxNY"
                        },
                        new
                        {
                            Id = 30,
                            Address = "107 Krajcik Motorway, Connellybury, Gibraltar",
                            City = "Cronaland",
                            DateOfBirth = new DateTime(2023, 9, 8, 2, 44, 33, 550, DateTimeKind.Local).AddTicks(9192),
                            Email = "Carmella.Spinka42@yahoo.com",
                            FirstName = "Carmella",
                            FullName = "Carmella Spinka",
                            Gender = false,
                            LastName = "Spinka",
                            Phone = "1-230-502-4378 x31187",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1131.jpg",
                            Student_code = "Student2boZwdVN"
                        },
                        new
                        {
                            Id = 31,
                            Address = "14997 Deion Curve, North Ikemouth, Indonesia",
                            City = "Israelburgh",
                            DateOfBirth = new DateTime(2023, 9, 9, 11, 48, 36, 367, DateTimeKind.Local).AddTicks(4165),
                            Email = "Sandra52@gmail.com",
                            FirstName = "Sandra",
                            FullName = "Sandra Christiansen",
                            Gender = true,
                            LastName = "Christiansen",
                            Phone = "356.570.7841",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/38.jpg",
                            Student_code = "StudentgRNSMXQB"
                        },
                        new
                        {
                            Id = 32,
                            Address = "55232 Thad Landing, Creminside, Saint Helena",
                            City = "South Vancestad",
                            DateOfBirth = new DateTime(2023, 3, 27, 18, 26, 15, 231, DateTimeKind.Local).AddTicks(8226),
                            Email = "Deondre98@yahoo.com",
                            FirstName = "Deondre",
                            FullName = "Deondre Sanford",
                            Gender = false,
                            LastName = "Sanford",
                            Phone = "(420) 707-5652 x757",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/432.jpg",
                            Student_code = "Student4ByMEnUb"
                        },
                        new
                        {
                            Id = 33,
                            Address = "781 Krajcik Turnpike, Irvingland, Saint Barthelemy",
                            City = "Stiedemannton",
                            DateOfBirth = new DateTime(2022, 11, 6, 15, 42, 44, 1, DateTimeKind.Local).AddTicks(5489),
                            Email = "Jack14@hotmail.com",
                            FirstName = "Jack",
                            FullName = "Jack Rogahn",
                            Gender = false,
                            LastName = "Rogahn",
                            Phone = "409.302.6092",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/564.jpg",
                            Student_code = "StudentvxHbZs4B"
                        },
                        new
                        {
                            Id = 34,
                            Address = "067 Carlotta Lake, South Lurlinebury, Argentina",
                            City = "Bauchmouth",
                            DateOfBirth = new DateTime(2022, 10, 16, 10, 20, 53, 375, DateTimeKind.Local).AddTicks(5143),
                            Email = "Burnice.Blanda@hotmail.com",
                            FirstName = "Burnice",
                            FullName = "Burnice Blanda",
                            Gender = true,
                            LastName = "Blanda",
                            Phone = "207.309.8040",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/688.jpg",
                            Student_code = "StudentSKAWbUFh"
                        },
                        new
                        {
                            Id = 35,
                            Address = "1006 Reinger Tunnel, Connellyside, Saint Martin",
                            City = "Lilaport",
                            DateOfBirth = new DateTime(2022, 12, 25, 14, 42, 49, 215, DateTimeKind.Local).AddTicks(7169),
                            Email = "Leila_Romaguera@hotmail.com",
                            FirstName = "Leila",
                            FullName = "Leila Romaguera",
                            Gender = false,
                            LastName = "Romaguera",
                            Phone = "800-317-1402",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/736.jpg",
                            Student_code = "StudentMZnLS6Le"
                        },
                        new
                        {
                            Id = 36,
                            Address = "48717 Wolff Flats, Rossborough, Tajikistan",
                            City = "Faheymouth",
                            DateOfBirth = new DateTime(2022, 10, 22, 20, 31, 17, 111, DateTimeKind.Local).AddTicks(7705),
                            Email = "Ron.Schuster55@yahoo.com",
                            FirstName = "Ron",
                            FullName = "Ron Schuster",
                            Gender = false,
                            LastName = "Schuster",
                            Phone = "570.477.1645 x1705",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/408.jpg",
                            Student_code = "StudentTz6gqOSk"
                        },
                        new
                        {
                            Id = 37,
                            Address = "333 Brisa Haven, Gorczanyton, Cocos (Keeling) Islands",
                            City = "North Estefaniaport",
                            DateOfBirth = new DateTime(2022, 12, 17, 2, 47, 35, 364, DateTimeKind.Local).AddTicks(3790),
                            Email = "Amber35@gmail.com",
                            FirstName = "Amber",
                            FullName = "Amber Lynch",
                            Gender = true,
                            LastName = "Lynch",
                            Phone = "265.825.4734 x02018",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/463.jpg",
                            Student_code = "Student44H0wPmR"
                        },
                        new
                        {
                            Id = 38,
                            Address = "53949 Narciso Mills, Jonesmouth, Maldives",
                            City = "Lake Porter",
                            DateOfBirth = new DateTime(2022, 11, 9, 11, 7, 41, 374, DateTimeKind.Local).AddTicks(4726),
                            Email = "Mattie_Sporer@hotmail.com",
                            FirstName = "Mattie",
                            FullName = "Mattie Sporer",
                            Gender = true,
                            LastName = "Sporer",
                            Phone = "1-964-699-5117 x2690",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1249.jpg",
                            Student_code = "StudentccO7L09P"
                        },
                        new
                        {
                            Id = 39,
                            Address = "688 Ebert Stream, West Camillamouth, Tuvalu",
                            City = "Christianborough",
                            DateOfBirth = new DateTime(2022, 11, 14, 13, 49, 47, 954, DateTimeKind.Local).AddTicks(8524),
                            Email = "Oliver.OConnell62@yahoo.com",
                            FirstName = "Oliver",
                            FullName = "Oliver O'Connell",
                            Gender = false,
                            LastName = "O'Connell",
                            Phone = "960-553-5572 x23703",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/406.jpg",
                            Student_code = "StudentD8mUNi5A"
                        },
                        new
                        {
                            Id = 40,
                            Address = "342 Stanton Terrace, North Casimerside, Marshall Islands",
                            City = "New Garthmouth",
                            DateOfBirth = new DateTime(2023, 1, 10, 4, 30, 44, 5, DateTimeKind.Local).AddTicks(2493),
                            Email = "Duncan_Brown44@gmail.com",
                            FirstName = "Duncan",
                            FullName = "Duncan Brown",
                            Gender = true,
                            LastName = "Brown",
                            Phone = "1-484-237-3088",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1243.jpg",
                            Student_code = "Student4GRmwAUU"
                        },
                        new
                        {
                            Id = 41,
                            Address = "8119 Cassin Station, West Ludie, Pitcairn Islands",
                            City = "South Naomie",
                            DateOfBirth = new DateTime(2023, 8, 1, 2, 28, 36, 511, DateTimeKind.Local).AddTicks(9531),
                            Email = "Juanita38@gmail.com",
                            FirstName = "Juanita",
                            FullName = "Juanita Gislason",
                            Gender = true,
                            LastName = "Gislason",
                            Phone = "1-958-519-0461 x437",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/909.jpg",
                            Student_code = "StudentiAm9WueM"
                        },
                        new
                        {
                            Id = 42,
                            Address = "0294 Terry Cove, New Letha, Bosnia and Herzegovina",
                            City = "South Katlynnfort",
                            DateOfBirth = new DateTime(2022, 12, 20, 6, 10, 37, 625, DateTimeKind.Local).AddTicks(478),
                            Email = "Nelson78@hotmail.com",
                            FirstName = "Nelson",
                            FullName = "Nelson Block",
                            Gender = false,
                            LastName = "Block",
                            Phone = "507-697-5436 x840",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/146.jpg",
                            Student_code = "StudentyRaUjYtV"
                        },
                        new
                        {
                            Id = 43,
                            Address = "32749 Hermiston Lodge, Port Yesseniaport, Indonesia",
                            City = "New Lydia",
                            DateOfBirth = new DateTime(2023, 8, 10, 8, 17, 2, 124, DateTimeKind.Local).AddTicks(1293),
                            Email = "Gracie_Wehner21@yahoo.com",
                            FirstName = "Gracie",
                            FullName = "Gracie Wehner",
                            Gender = false,
                            LastName = "Wehner",
                            Phone = "(968) 779-9117",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/517.jpg",
                            Student_code = "StudentpGIUBJOU"
                        },
                        new
                        {
                            Id = 44,
                            Address = "1123 Leo Garden, Wiegandborough, American Samoa",
                            City = "Marcosbury",
                            DateOfBirth = new DateTime(2023, 4, 21, 20, 21, 56, 375, DateTimeKind.Local).AddTicks(8881),
                            Email = "Walter_Kuphal@yahoo.com",
                            FirstName = "Walter",
                            FullName = "Walter Kuphal",
                            Gender = true,
                            LastName = "Kuphal",
                            Phone = "1-992-873-5153 x9914",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/952.jpg",
                            Student_code = "StudentSciuJVcP"
                        },
                        new
                        {
                            Id = 45,
                            Address = "109 Prohaska Road, Goyetteborough, Cayman Islands",
                            City = "Cassieton",
                            DateOfBirth = new DateTime(2023, 7, 5, 0, 5, 16, 259, DateTimeKind.Local).AddTicks(8787),
                            Email = "Ricardo_Ebert@gmail.com",
                            FirstName = "Ricardo",
                            FullName = "Ricardo Ebert",
                            Gender = false,
                            LastName = "Ebert",
                            Phone = "206-265-3105 x49423",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/405.jpg",
                            Student_code = "StudentuS7NphLA"
                        },
                        new
                        {
                            Id = 46,
                            Address = "37331 Funk Run, Magnoliachester, Faroe Islands",
                            City = "South Lessie",
                            DateOfBirth = new DateTime(2022, 10, 16, 1, 52, 37, 17, DateTimeKind.Local).AddTicks(9883),
                            Email = "Clyde_Herzog@hotmail.com",
                            FirstName = "Clyde",
                            FullName = "Clyde Herzog",
                            Gender = false,
                            LastName = "Herzog",
                            Phone = "474.521.6630",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/110.jpg",
                            Student_code = "Student97LG821e"
                        },
                        new
                        {
                            Id = 47,
                            Address = "7430 Koss Motorway, West Kenyonstad, Nigeria",
                            City = "Kimport",
                            DateOfBirth = new DateTime(2022, 11, 3, 3, 13, 27, 81, DateTimeKind.Local).AddTicks(5177),
                            Email = "Jada_Klein@gmail.com",
                            FirstName = "Jada",
                            FullName = "Jada Klein",
                            Gender = true,
                            LastName = "Klein",
                            Phone = "902-573-1410",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/576.jpg",
                            Student_code = "StudentXM4VgZT8"
                        },
                        new
                        {
                            Id = 48,
                            Address = "8020 Ramiro Well, Gennaroland, Germany",
                            City = "Willyfort",
                            DateOfBirth = new DateTime(2023, 4, 25, 6, 25, 29, 550, DateTimeKind.Local).AddTicks(9013),
                            Email = "Claire45@gmail.com",
                            FirstName = "Claire",
                            FullName = "Claire Feest",
                            Gender = true,
                            LastName = "Feest",
                            Phone = "1-294-933-9287",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1031.jpg",
                            Student_code = "StudentbyR0vaVf"
                        },
                        new
                        {
                            Id = 49,
                            Address = "9392 Casper Ranch, South Guidoland, Saint Kitts and Nevis",
                            City = "South Harley",
                            DateOfBirth = new DateTime(2023, 7, 2, 9, 48, 46, 751, DateTimeKind.Local).AddTicks(556),
                            Email = "Janiya.Corwin87@hotmail.com",
                            FirstName = "Janiya",
                            FullName = "Janiya Corwin",
                            Gender = true,
                            LastName = "Corwin",
                            Phone = "327.678.8571",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/379.jpg",
                            Student_code = "Studenty7RmmfL2"
                        },
                        new
                        {
                            Id = 50,
                            Address = "7607 Glen Vista, New Guillermoton, Western Sahara",
                            City = "Beckerhaven",
                            DateOfBirth = new DateTime(2023, 3, 23, 12, 11, 41, 96, DateTimeKind.Local).AddTicks(3828),
                            Email = "Ralph95@yahoo.com",
                            FirstName = "Ralph",
                            FullName = "Ralph Considine",
                            Gender = true,
                            LastName = "Considine",
                            Phone = "1-893-910-4218",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/765.jpg",
                            Student_code = "Student7vpcxQfl"
                        });
                });

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.HasOne("LibraryModels.News", "News")
                        .WithMany("Comments")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.Priority", null)
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
