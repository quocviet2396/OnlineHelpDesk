// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231001155103_helpdesk")]
    partial class helpdesk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewId")
                        .HasColumnType("int");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("tbComments");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbNews");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.Property<string>("feedback")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "c1efd0kG",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$sg4afg.fuHJmIfozqL5jlOocLZrg0lh4WHEnDZQkg0JitlAnQ0Uyi",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "1cGz3CAJ",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$rPGQQh4eyVNfJ5AdYBJm4exOX5V4famxWxtAJEMjWkzkajL//NOEe",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "XOB62qpu",
                            Email = "user@gmail.com",
                            Password = "$2a$11$xqc/YmDdQim7vXiSRbdACeexopnXWxHGPfe20UigfsXWg5fUjZaI2",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "392 Lauretta Neck, North Wendychester, Liberia",
                            City = "Kennediton",
                            DateOfBirth = new DateTime(2023, 3, 11, 13, 48, 38, 719, DateTimeKind.Local).AddTicks(9318),
                            Email = "onhdexmapletest1991@gmail.com",
                            FirstName = "Ansley",
                            FullName = "Ansley Bosco",
                            Gender = true,
                            LastName = "Bosco",
                            Phone = "659-414-2810",
                            Student_code = "Students8Q4BwGc"
                        },
                        new
                        {
                            Id = 3,
                            Address = "13993 Padberg Springs, South Tremainestad, Vanuatu",
                            City = "Port Jadon",
                            DateOfBirth = new DateTime(2023, 1, 16, 23, 45, 43, 549, DateTimeKind.Local).AddTicks(115),
                            Email = "onhdexmapletest1993@gmail.com",
                            FirstName = "Velma",
                            FullName = "Velma Rodriguez",
                            Gender = false,
                            LastName = "Rodriguez",
                            Phone = "892.364.8643 x6946",
                            Student_code = "Students9bgHGvz"
                        },
                        new
                        {
                            Id = 5,
                            Address = "39265 Lorena Flat, North Opal, Equatorial Guinea",
                            City = "Johnathonmouth",
                            DateOfBirth = new DateTime(2023, 8, 28, 4, 55, 46, 759, DateTimeKind.Local).AddTicks(7250),
                            Email = "onhdexmapletest1995@gmail.com",
                            FirstName = "Vernie",
                            FullName = "Vernie Powlowski",
                            Gender = false,
                            LastName = "Powlowski",
                            Phone = "(987) 656-9217",
                            Student_code = "StudentUDyDymzg"
                        },
                        new
                        {
                            Id = 7,
                            Address = "24292 Considine Extensions, Lake Bennettchester, Mongolia",
                            City = "West Wayne",
                            DateOfBirth = new DateTime(2023, 5, 27, 1, 2, 38, 255, DateTimeKind.Local).AddTicks(5578),
                            Email = "onhdexmapletest1997@gmail.com",
                            FirstName = "Scotty",
                            FullName = "Scotty Ferry",
                            Gender = true,
                            LastName = "Ferry",
                            Phone = "(212) 851-4442",
                            Student_code = "StudentNFzWTkAw"
                        },
                        new
                        {
                            Id = 9,
                            Address = "8152 Kattie Springs, South Syble, Equatorial Guinea",
                            City = "East Yvetteland",
                            DateOfBirth = new DateTime(2023, 7, 31, 3, 48, 21, 123, DateTimeKind.Local).AddTicks(7682),
                            Email = "onhdexmapletest1999@gmail.com",
                            FirstName = "Scarlett",
                            FullName = "Scarlett Stroman",
                            Gender = true,
                            LastName = "Stroman",
                            Phone = "435-900-0039 x086",
                            Student_code = "StudentCp2ZHx0X"
                        },
                        new
                        {
                            Id = 11,
                            Address = "9990 Herbert Valleys, Lake Weldonfurt, Togo",
                            City = "Ebonyshire",
                            DateOfBirth = new DateTime(2023, 7, 25, 20, 12, 23, 754, DateTimeKind.Local).AddTicks(7198),
                            Email = "onhdexmapletest19911@gmail.com",
                            FirstName = "Sonya",
                            FullName = "Sonya Dietrich",
                            Gender = false,
                            LastName = "Dietrich",
                            Phone = "586-961-6841 x6465",
                            Student_code = "Student3WlNkvmj"
                        },
                        new
                        {
                            Id = 13,
                            Address = "3927 Glover Canyon, Chadricktown, Afghanistan",
                            City = "West Leonie",
                            DateOfBirth = new DateTime(2023, 6, 28, 4, 2, 42, 175, DateTimeKind.Local).AddTicks(6346),
                            Email = "onhdexmapletest19913@gmail.com",
                            FirstName = "Gerson",
                            FullName = "Gerson Runolfsson",
                            Gender = true,
                            LastName = "Runolfsson",
                            Phone = "1-700-230-9214",
                            Student_code = "StudentwnP2JWC6"
                        },
                        new
                        {
                            Id = 15,
                            Address = "2551 Joaquin Walks, New Brandt, Armenia",
                            City = "Maybury",
                            DateOfBirth = new DateTime(2022, 11, 25, 15, 48, 19, 285, DateTimeKind.Local).AddTicks(8048),
                            Email = "onhdexmapletest19915@gmail.com",
                            FirstName = "Adella",
                            FullName = "Adella O'Connell",
                            Gender = false,
                            LastName = "O'Connell",
                            Phone = "(208) 380-6223",
                            Student_code = "StudentEnxjk04r"
                        },
                        new
                        {
                            Id = 17,
                            Address = "09499 Jena Parks, East Jacintoburgh, Kyrgyz Republic",
                            City = "Romagueraland",
                            DateOfBirth = new DateTime(2023, 4, 7, 0, 39, 28, 343, DateTimeKind.Local).AddTicks(785),
                            Email = "onhdexmapletest19917@gmail.com",
                            FirstName = "Alessia",
                            FullName = "Alessia Klocko",
                            Gender = false,
                            LastName = "Klocko",
                            Phone = "850-969-1417",
                            Student_code = "StudentIvIkSBE1"
                        },
                        new
                        {
                            Id = 19,
                            Address = "3277 Luisa Mission, Heloiseborough, Saint Vincent and the Grenadines",
                            City = "New Axelmouth",
                            DateOfBirth = new DateTime(2023, 3, 16, 14, 4, 38, 84, DateTimeKind.Local).AddTicks(7056),
                            Email = "onhdexmapletest19919@gmail.com",
                            FirstName = "Ivory",
                            FullName = "Ivory Zboncak",
                            Gender = true,
                            LastName = "Zboncak",
                            Phone = "(426) 486-9677 x742",
                            Student_code = "StudentxQ5qzB8Z"
                        },
                        new
                        {
                            Id = 21,
                            Address = "3296 Antonetta Way, Ashlynnborough, Monaco",
                            City = "Javontefurt",
                            DateOfBirth = new DateTime(2023, 3, 16, 1, 31, 3, 502, DateTimeKind.Local).AddTicks(9246),
                            Email = "onhdexmapletest19921@gmail.com",
                            FirstName = "Noe",
                            FullName = "Noe Harvey",
                            Gender = true,
                            LastName = "Harvey",
                            Phone = "(709) 999-2001",
                            Student_code = "Student0qxwutkE"
                        },
                        new
                        {
                            Id = 23,
                            Address = "5543 Kihn Plaza, East Lester, Holy See (Vatican City State)",
                            City = "Shanelleport",
                            DateOfBirth = new DateTime(2023, 2, 9, 11, 20, 42, 210, DateTimeKind.Local).AddTicks(7862),
                            Email = "onhdexmapletest19923@gmail.com",
                            FirstName = "Sarai",
                            FullName = "Sarai Doyle",
                            Gender = false,
                            LastName = "Doyle",
                            Phone = "1-618-907-6763",
                            Student_code = "StudentRvD1BIkN"
                        },
                        new
                        {
                            Id = 25,
                            Address = "9127 Schmeler Walk, Smithside, Russian Federation",
                            City = "East Daxside",
                            DateOfBirth = new DateTime(2023, 7, 27, 13, 17, 29, 760, DateTimeKind.Local).AddTicks(1081),
                            Email = "onhdexmapletest19925@gmail.com",
                            FirstName = "Cali",
                            FullName = "Cali Wunsch",
                            Gender = false,
                            LastName = "Wunsch",
                            Phone = "1-888-840-6523",
                            Student_code = "Student70LJs0Zm"
                        },
                        new
                        {
                            Id = 27,
                            Address = "77674 Powlowski Rapid, Port Dimitrichester, Cyprus",
                            City = "Dejaport",
                            DateOfBirth = new DateTime(2023, 2, 24, 19, 49, 28, 164, DateTimeKind.Local).AddTicks(9277),
                            Email = "onhdexmapletest19927@gmail.com",
                            FirstName = "Mona",
                            FullName = "Mona Krajcik",
                            Gender = true,
                            LastName = "Krajcik",
                            Phone = "598.205.2483",
                            Student_code = "StudenthLeDyp22"
                        },
                        new
                        {
                            Id = 29,
                            Address = "193 Horace Mews, O'Connellside, Hong Kong",
                            City = "Hoegermouth",
                            DateOfBirth = new DateTime(2022, 12, 31, 17, 9, 30, 422, DateTimeKind.Local).AddTicks(5009),
                            Email = "onhdexmapletest19929@gmail.com",
                            FirstName = "Hattie",
                            FullName = "Hattie Bogisich",
                            Gender = true,
                            LastName = "Bogisich",
                            Phone = "(563) 584-7768 x98887",
                            Student_code = "StudentwDFD4kVx"
                        },
                        new
                        {
                            Id = 31,
                            Address = "1526 Swift Court, New Otha, Gabon",
                            City = "Clayborough",
                            DateOfBirth = new DateTime(2023, 8, 7, 12, 49, 30, 127, DateTimeKind.Local).AddTicks(7620),
                            Email = "onhdexmapletest19931@gmail.com",
                            FirstName = "Marcelle",
                            FullName = "Marcelle Boehm",
                            Gender = false,
                            LastName = "Boehm",
                            Phone = "561.572.8830 x326",
                            Student_code = "Studentk872yPhC"
                        },
                        new
                        {
                            Id = 33,
                            Address = "66880 Beier Prairie, Adolphusland, Suriname",
                            City = "New Sigrid",
                            DateOfBirth = new DateTime(2023, 7, 25, 18, 45, 29, 478, DateTimeKind.Local).AddTicks(5403),
                            Email = "onhdexmapletest19933@gmail.com",
                            FirstName = "Evan",
                            FullName = "Evan Treutel",
                            Gender = false,
                            LastName = "Treutel",
                            Phone = "(530) 546-7051 x0550",
                            Student_code = "StudentMjxLwNku"
                        },
                        new
                        {
                            Id = 35,
                            Address = "0271 Solon Stravenue, Arielleville, Turks and Caicos Islands",
                            City = "North Stephaniastad",
                            DateOfBirth = new DateTime(2023, 3, 18, 8, 55, 25, 42, DateTimeKind.Local).AddTicks(9706),
                            Email = "onhdexmapletest19935@gmail.com",
                            FirstName = "Laila",
                            FullName = "Laila Schaefer",
                            Gender = true,
                            LastName = "Schaefer",
                            Phone = "(631) 690-4133 x79215",
                            Student_code = "StudentkbWBtSMx"
                        },
                        new
                        {
                            Id = 37,
                            Address = "52189 Antonina Springs, Solonton, French Guiana",
                            City = "Langworthville",
                            DateOfBirth = new DateTime(2022, 10, 17, 13, 33, 29, 863, DateTimeKind.Local).AddTicks(1222),
                            Email = "onhdexmapletest19937@gmail.com",
                            FirstName = "Lukas",
                            FullName = "Lukas Wisoky",
                            Gender = true,
                            LastName = "Wisoky",
                            Phone = "1-451-316-4143",
                            Student_code = "Studentxf1bHwwb"
                        },
                        new
                        {
                            Id = 39,
                            Address = "6270 Kshlerin View, Goldnerview, South Georgia and the South Sandwich Islands",
                            City = "Norvalfort",
                            DateOfBirth = new DateTime(2022, 10, 26, 9, 15, 58, 104, DateTimeKind.Local).AddTicks(6577),
                            Email = "onhdexmapletest19939@gmail.com",
                            FirstName = "Brain",
                            FullName = "Brain Fahey",
                            Gender = false,
                            LastName = "Fahey",
                            Phone = "759-932-7248 x057",
                            Student_code = "StudentzbydPRRQ"
                        },
                        new
                        {
                            Id = 41,
                            Address = "1502 Dejah Forest, Port Mauricio, Seychelles",
                            City = "Port Moisesbury",
                            DateOfBirth = new DateTime(2023, 1, 22, 2, 54, 58, 61, DateTimeKind.Local).AddTicks(3223),
                            Email = "onhdexmapletest19941@gmail.com",
                            FirstName = "Kamryn",
                            FullName = "Kamryn Littel",
                            Gender = true,
                            LastName = "Littel",
                            Phone = "302.724.1818 x639",
                            Student_code = "Studentul58Ykld"
                        },
                        new
                        {
                            Id = 43,
                            Address = "434 Concepcion Throughway, Bodefort, Swaziland",
                            City = "Strosinmouth",
                            DateOfBirth = new DateTime(2023, 6, 22, 8, 19, 8, 14, DateTimeKind.Local).AddTicks(7249),
                            Email = "onhdexmapletest19943@gmail.com",
                            FirstName = "Trudie",
                            FullName = "Trudie Cronin",
                            Gender = false,
                            LastName = "Cronin",
                            Phone = "(683) 789-3379 x8624",
                            Student_code = "Student4NgXS2FL"
                        },
                        new
                        {
                            Id = 45,
                            Address = "1622 Destany Manor, Mozellestad, Dominican Republic",
                            City = "Minervaview",
                            DateOfBirth = new DateTime(2022, 11, 29, 22, 52, 29, 667, DateTimeKind.Local).AddTicks(176),
                            Email = "onhdexmapletest19945@gmail.com",
                            FirstName = "Demarco",
                            FullName = "Demarco Reichel",
                            Gender = false,
                            LastName = "Reichel",
                            Phone = "261-325-0000",
                            Student_code = "StudentQpk7d8dZ"
                        },
                        new
                        {
                            Id = 47,
                            Address = "6949 Swift Trafficway, Kennethmouth, Rwanda",
                            City = "West Calista",
                            DateOfBirth = new DateTime(2023, 7, 12, 21, 45, 42, 296, DateTimeKind.Local).AddTicks(2082),
                            Email = "onhdexmapletest19947@gmail.com",
                            FirstName = "Grover",
                            FullName = "Grover Zboncak",
                            Gender = true,
                            LastName = "Zboncak",
                            Phone = "280.601.5807 x35801",
                            Student_code = "Student2rr3tg1w"
                        },
                        new
                        {
                            Id = 49,
                            Address = "19942 Quitzon Forges, Port Hulda, Canada",
                            City = "West Karelle",
                            DateOfBirth = new DateTime(2023, 9, 15, 18, 47, 21, 595, DateTimeKind.Local).AddTicks(8056),
                            Email = "onhdexmapletest19949@gmail.com",
                            FirstName = "Jackie",
                            FullName = "Jackie Wyman",
                            Gender = false,
                            LastName = "Wyman",
                            Phone = "630-687-6028 x7454",
                            Student_code = "StudenttI8vDbwW"
                        },
                        new
                        {
                            Id = 51,
                            Address = "850 Murray Trail, Lake Marion, Falkland Islands (Malvinas)",
                            City = "New Lindsey",
                            DateOfBirth = new DateTime(2023, 2, 27, 10, 14, 53, 430, DateTimeKind.Local).AddTicks(2267),
                            Email = "onhdexmapletest19951@gmail.com",
                            FirstName = "Clementine",
                            FullName = "Clementine Zboncak",
                            Gender = false,
                            LastName = "Zboncak",
                            Phone = "1-610-367-5824",
                            Student_code = "Studentr8H99mVS"
                        },
                        new
                        {
                            Id = 53,
                            Address = "53079 Paxton Mission, Leestad, Georgia",
                            City = "New Bria",
                            DateOfBirth = new DateTime(2022, 11, 7, 0, 53, 6, 116, DateTimeKind.Local).AddTicks(2376),
                            Email = "onhdexmapletest19953@gmail.com",
                            FirstName = "Pearline",
                            FullName = "Pearline Kshlerin",
                            Gender = true,
                            LastName = "Kshlerin",
                            Phone = "752.547.6257 x89355",
                            Student_code = "StudentKOefqxBM"
                        },
                        new
                        {
                            Id = 55,
                            Address = "55632 Carleton Grove, South Nannieberg, Madagascar",
                            City = "South Rickyberg",
                            DateOfBirth = new DateTime(2023, 5, 27, 11, 10, 33, 376, DateTimeKind.Local).AddTicks(8625),
                            Email = "onhdexmapletest19955@gmail.com",
                            FirstName = "Maximilian",
                            FullName = "Maximilian Dare",
                            Gender = false,
                            LastName = "Dare",
                            Phone = "(718) 867-8947 x2937",
                            Student_code = "StudentxUmVnx7G"
                        },
                        new
                        {
                            Id = 57,
                            Address = "154 Pfannerstill Lodge, New Jenniferchester, Sweden",
                            City = "Raynorport",
                            DateOfBirth = new DateTime(2023, 9, 6, 9, 29, 44, 45, DateTimeKind.Local).AddTicks(7167),
                            Email = "onhdexmapletest19957@gmail.com",
                            FirstName = "Ivah",
                            FullName = "Ivah Mante",
                            Gender = false,
                            LastName = "Mante",
                            Phone = "517.845.6467 x239",
                            Student_code = "Studentue46lcQy"
                        },
                        new
                        {
                            Id = 59,
                            Address = "510 Goldner Terrace, Juniusland, Republic of Korea",
                            City = "Aufderharmouth",
                            DateOfBirth = new DateTime(2023, 5, 8, 7, 55, 42, 150, DateTimeKind.Local).AddTicks(8702),
                            Email = "onhdexmapletest19959@gmail.com",
                            FirstName = "Sherman",
                            FullName = "Sherman Emard",
                            Gender = true,
                            LastName = "Emard",
                            Phone = "(668) 698-1239 x843",
                            Student_code = "StudentFMzRYXvn"
                        },
                        new
                        {
                            Id = 61,
                            Address = "186 Schultz Hollow, Donatofort, Cuba",
                            City = "Schummville",
                            DateOfBirth = new DateTime(2023, 5, 15, 22, 51, 56, 717, DateTimeKind.Local).AddTicks(1167),
                            Email = "onhdexmapletest19961@gmail.com",
                            FirstName = "Rosario",
                            FullName = "Rosario Kautzer",
                            Gender = false,
                            LastName = "Kautzer",
                            Phone = "227.896.4981 x9024",
                            Student_code = "StudentrvVklggX"
                        },
                        new
                        {
                            Id = 63,
                            Address = "893 Kenton Landing, Baileyfurt, Benin",
                            City = "Hesselberg",
                            DateOfBirth = new DateTime(2023, 8, 24, 14, 14, 13, 135, DateTimeKind.Local).AddTicks(2897),
                            Email = "onhdexmapletest19963@gmail.com",
                            FirstName = "Daphnee",
                            FullName = "Daphnee Mayert",
                            Gender = true,
                            LastName = "Mayert",
                            Phone = "880-915-5774",
                            Student_code = "StudentRS2mS3jm"
                        },
                        new
                        {
                            Id = 65,
                            Address = "5774 Sigurd Corner, Phoebefurt, Iceland",
                            City = "North Aaliyah",
                            DateOfBirth = new DateTime(2023, 2, 16, 18, 23, 51, 511, DateTimeKind.Local).AddTicks(7767),
                            Email = "onhdexmapletest19965@gmail.com",
                            FirstName = "Jovanny",
                            FullName = "Jovanny Balistreri",
                            Gender = true,
                            LastName = "Balistreri",
                            Phone = "222-406-7491",
                            Student_code = "Student4i3nQows"
                        },
                        new
                        {
                            Id = 67,
                            Address = "086 Alba Street, East Gabriel, Falkland Islands (Malvinas)",
                            City = "Stracketon",
                            DateOfBirth = new DateTime(2023, 5, 19, 23, 41, 2, 167, DateTimeKind.Local).AddTicks(3312),
                            Email = "onhdexmapletest19967@gmail.com",
                            FirstName = "Jamir",
                            FullName = "Jamir Klein",
                            Gender = true,
                            LastName = "Klein",
                            Phone = "1-603-239-3791",
                            Student_code = "StudentYUunCBHN"
                        },
                        new
                        {
                            Id = 69,
                            Address = "361 Manuela Field, Port Lauren, Turkey",
                            City = "Judymouth",
                            DateOfBirth = new DateTime(2023, 3, 6, 3, 22, 26, 685, DateTimeKind.Local).AddTicks(9022),
                            Email = "onhdexmapletest19969@gmail.com",
                            FirstName = "Danial",
                            FullName = "Danial Huels",
                            Gender = false,
                            LastName = "Huels",
                            Phone = "677-613-0097",
                            Student_code = "StudentWqUqlcpG"
                        },
                        new
                        {
                            Id = 71,
                            Address = "591 Osbaldo Plaza, Feilhaven, Sao Tome and Principe",
                            City = "East Norma",
                            DateOfBirth = new DateTime(2022, 10, 7, 9, 35, 42, 214, DateTimeKind.Local).AddTicks(3807),
                            Email = "onhdexmapletest19971@gmail.com",
                            FirstName = "Montana",
                            FullName = "Montana Stroman",
                            Gender = false,
                            LastName = "Stroman",
                            Phone = "(230) 696-6047 x04217",
                            Student_code = "Student8du4ot83"
                        },
                        new
                        {
                            Id = 73,
                            Address = "0337 Raven Drive, South Darrick, Niger",
                            City = "New Eric",
                            DateOfBirth = new DateTime(2022, 12, 8, 0, 48, 36, 282, DateTimeKind.Local).AddTicks(2611),
                            Email = "onhdexmapletest19973@gmail.com",
                            FirstName = "Terrell",
                            FullName = "Terrell Larson",
                            Gender = true,
                            LastName = "Larson",
                            Phone = "1-636-378-5709 x177",
                            Student_code = "Student0ewOzezB"
                        },
                        new
                        {
                            Id = 75,
                            Address = "2511 Yundt Lane, New Suzannetown, Tunisia",
                            City = "Darianshire",
                            DateOfBirth = new DateTime(2023, 3, 11, 22, 47, 47, 713, DateTimeKind.Local).AddTicks(1804),
                            Email = "onhdexmapletest19975@gmail.com",
                            FirstName = "Cathryn",
                            FullName = "Cathryn Adams",
                            Gender = true,
                            LastName = "Adams",
                            Phone = "530.860.0525 x446",
                            Student_code = "StudentmGhDKK9m"
                        },
                        new
                        {
                            Id = 77,
                            Address = "525 Asia Camp, West Venaland, Ecuador",
                            City = "Lockmanchester",
                            DateOfBirth = new DateTime(2022, 10, 20, 18, 17, 40, 540, DateTimeKind.Local).AddTicks(3623),
                            Email = "onhdexmapletest19977@gmail.com",
                            FirstName = "Casper",
                            FullName = "Casper Schaefer",
                            Gender = true,
                            LastName = "Schaefer",
                            Phone = "(823) 414-9593 x222",
                            Student_code = "StudentsUWuk7g1"
                        },
                        new
                        {
                            Id = 79,
                            Address = "672 Pat Crest, Connellyburgh, Hong Kong",
                            City = "East Hankmouth",
                            DateOfBirth = new DateTime(2022, 10, 5, 21, 30, 22, 336, DateTimeKind.Local).AddTicks(7091),
                            Email = "onhdexmapletest19979@gmail.com",
                            FirstName = "Ressie",
                            FullName = "Ressie Schuster",
                            Gender = false,
                            LastName = "Schuster",
                            Phone = "(232) 858-1454 x42865",
                            Student_code = "StudentU9QIGayx"
                        },
                        new
                        {
                            Id = 81,
                            Address = "346 O'Connell Knolls, Bradville, Malawi",
                            City = "Raymundoview",
                            DateOfBirth = new DateTime(2023, 9, 25, 23, 42, 21, 862, DateTimeKind.Local).AddTicks(4593),
                            Email = "onhdexmapletest19981@gmail.com",
                            FirstName = "Madeline",
                            FullName = "Madeline Koss",
                            Gender = false,
                            LastName = "Koss",
                            Phone = "1-941-326-1461 x0579",
                            Student_code = "Student4TXaVckm"
                        },
                        new
                        {
                            Id = 83,
                            Address = "859 Sibyl Ports, Emieview, Tonga",
                            City = "Lake Bradlyview",
                            DateOfBirth = new DateTime(2022, 11, 29, 1, 53, 29, 139, DateTimeKind.Local).AddTicks(6414),
                            Email = "onhdexmapletest19983@gmail.com",
                            FirstName = "Elody",
                            FullName = "Elody Rohan",
                            Gender = true,
                            LastName = "Rohan",
                            Phone = "538.638.4709 x8965",
                            Student_code = "Studenta68tyEMN"
                        },
                        new
                        {
                            Id = 85,
                            Address = "87140 Lester Turnpike, South Arjunfurt, Madagascar",
                            City = "Lake Mathias",
                            DateOfBirth = new DateTime(2023, 6, 2, 13, 47, 37, 199, DateTimeKind.Local).AddTicks(4895),
                            Email = "onhdexmapletest19985@gmail.com",
                            FirstName = "Ashton",
                            FullName = "Ashton Monahan",
                            Gender = false,
                            LastName = "Monahan",
                            Phone = "404.227.7624 x3103",
                            Student_code = "Studentxk9cnB09"
                        },
                        new
                        {
                            Id = 87,
                            Address = "4341 Gutkowski Rest, Port Bret, Andorra",
                            City = "Jermainside",
                            DateOfBirth = new DateTime(2023, 1, 18, 14, 3, 36, 724, DateTimeKind.Local).AddTicks(5705),
                            Email = "onhdexmapletest19987@gmail.com",
                            FirstName = "Lauretta",
                            FullName = "Lauretta Schneider",
                            Gender = true,
                            LastName = "Schneider",
                            Phone = "606-910-6019 x56957",
                            Student_code = "StudentKGBFpBc3"
                        },
                        new
                        {
                            Id = 89,
                            Address = "353 Turcotte Cliff, Marshallburgh, Egypt",
                            City = "Kyleeshire",
                            DateOfBirth = new DateTime(2023, 8, 25, 7, 0, 12, 138, DateTimeKind.Local).AddTicks(9479),
                            Email = "onhdexmapletest19989@gmail.com",
                            FirstName = "Edward",
                            FullName = "Edward Feeney",
                            Gender = false,
                            LastName = "Feeney",
                            Phone = "670.859.6515",
                            Student_code = "StudenttECJkTR2"
                        },
                        new
                        {
                            Id = 91,
                            Address = "24880 Rowena Hollow, North Electa, Cayman Islands",
                            City = "New Wyattport",
                            DateOfBirth = new DateTime(2023, 7, 21, 10, 37, 35, 71, DateTimeKind.Local).AddTicks(9945),
                            Email = "onhdexmapletest19991@gmail.com",
                            FirstName = "Elta",
                            FullName = "Elta Altenwerth",
                            Gender = true,
                            LastName = "Altenwerth",
                            Phone = "1-230-910-3658",
                            Student_code = "StudentN9tfoJKx"
                        },
                        new
                        {
                            Id = 93,
                            Address = "8441 Gunner Locks, Hillsport, Saudi Arabia",
                            City = "Carterside",
                            DateOfBirth = new DateTime(2023, 8, 8, 11, 33, 24, 855, DateTimeKind.Local).AddTicks(9360),
                            Email = "onhdexmapletest19993@gmail.com",
                            FirstName = "Giovani",
                            FullName = "Giovani Graham",
                            Gender = true,
                            LastName = "Graham",
                            Phone = "1-910-592-1042 x491",
                            Student_code = "StudentjOcJgVRi"
                        },
                        new
                        {
                            Id = 95,
                            Address = "716 Hester Junctions, South Catalinachester, Thailand",
                            City = "Walterbury",
                            DateOfBirth = new DateTime(2022, 10, 25, 1, 17, 44, 992, DateTimeKind.Local).AddTicks(1906),
                            Email = "onhdexmapletest19995@gmail.com",
                            FirstName = "Arnulfo",
                            FullName = "Arnulfo Murazik",
                            Gender = true,
                            LastName = "Murazik",
                            Phone = "612-460-2367 x1550",
                            Student_code = "StudentGYaFAHCS"
                        },
                        new
                        {
                            Id = 97,
                            Address = "382 Bradtke Field, Medhurstville, Bahrain",
                            City = "New Zander",
                            DateOfBirth = new DateTime(2022, 11, 4, 0, 32, 38, 233, DateTimeKind.Local).AddTicks(9638),
                            Email = "onhdexmapletest19997@gmail.com",
                            FirstName = "Hermina",
                            FullName = "Hermina Klein",
                            Gender = true,
                            LastName = "Klein",
                            Phone = "382-471-4849",
                            Student_code = "StudentmoKDY39n"
                        },
                        new
                        {
                            Id = 99,
                            Address = "9943 Runolfsdottir Gardens, Raymundoton, Bahrain",
                            City = "West Twilaborough",
                            DateOfBirth = new DateTime(2023, 5, 5, 16, 4, 3, 407, DateTimeKind.Local).AddTicks(2958),
                            Email = "onhdexmapletest19999@gmail.com",
                            FirstName = "Bettye",
                            FullName = "Bettye Kirlin",
                            Gender = false,
                            LastName = "Kirlin",
                            Phone = "(285) 901-4420 x9116",
                            Student_code = "StudentPNJjJLau"
                        });
                });

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.HasOne("LibraryModels.News", "News")
                        .WithMany("Comments")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.Priority", "Priority")
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Priority");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
