// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230929063821_newinit")]
    partial class newinit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewId")
                        .HasColumnType("int");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("tbComments");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbNews");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "xTLUYlnM",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$XaTWWgoTbylxtG.MBcxtg.3DmZyh8OPhCOoDynuggBck3q/LQldNW",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "WDZF2qVd",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$X1o8fDGXEkyZ2ltQwqAamuQf/uX1C7UafALox061XHadYLORcAE8m",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "Ox766oHg",
                            Email = "user@gmail.com",
                            Password = "$2a$11$V0s6JEys33WBHCoSnLOpUeaDkC/XnbXEaF9jiqwbxH80Tf1o5jATS",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "06822 Jonas Pine, New Adellaland, Falkland Islands (Malvinas)",
                            City = "West Amiya",
                            DateOfBirth = new DateTime(2023, 3, 26, 9, 36, 38, 614, DateTimeKind.Local).AddTicks(3885),
                            Email = "Stephen.Hauck@yahoo.com",
                            FirstName = "Stephen",
                            FullName = "Stephen Hauck",
                            Gender = false,
                            LastName = "Hauck",
                            Phone = "1-578-270-2071 x1901",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/269.jpg",
                            Student_code = "StudentMvXAwnFN"
                        },
                        new
                        {
                            Id = 2,
                            Address = "95159 Dino Prairie, Allystad, Peru",
                            City = "Port Jessy",
                            DateOfBirth = new DateTime(2023, 4, 14, 6, 32, 44, 127, DateTimeKind.Local).AddTicks(3507),
                            Email = "Jaden.Franecki97@hotmail.com",
                            FirstName = "Jaden",
                            FullName = "Jaden Franecki",
                            Gender = true,
                            LastName = "Franecki",
                            Phone = "(508) 685-8534",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1100.jpg",
                            Student_code = "Student1bq4zLfa"
                        },
                        new
                        {
                            Id = 3,
                            Address = "996 Violette Square, New Einochester, Saint Martin",
                            City = "Port Mackshire",
                            DateOfBirth = new DateTime(2023, 7, 21, 21, 12, 23, 2, DateTimeKind.Local).AddTicks(4357),
                            Email = "Jasper_Bartoletti67@gmail.com",
                            FirstName = "Jasper",
                            FullName = "Jasper Bartoletti",
                            Gender = true,
                            LastName = "Bartoletti",
                            Phone = "246-370-3650",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/150.jpg",
                            Student_code = "StudentdzMTQmiO"
                        },
                        new
                        {
                            Id = 4,
                            Address = "96691 Ottis Spurs, Strosinstad, South Georgia and the South Sandwich Islands",
                            City = "Dietrichville",
                            DateOfBirth = new DateTime(2023, 2, 14, 7, 21, 43, 514, DateTimeKind.Local).AddTicks(2070),
                            Email = "Torrance.Heaney@gmail.com",
                            FirstName = "Torrance",
                            FullName = "Torrance Heaney",
                            Gender = false,
                            LastName = "Heaney",
                            Phone = "604.551.7267 x47186",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/350.jpg",
                            Student_code = "StudentuKux74sQ"
                        },
                        new
                        {
                            Id = 5,
                            Address = "5514 Champlin Drive, North Kaitlinshire, Kenya",
                            City = "Oranborough",
                            DateOfBirth = new DateTime(2023, 8, 16, 19, 24, 20, 753, DateTimeKind.Local).AddTicks(7394),
                            Email = "Tate.Ernser@gmail.com",
                            FirstName = "Tate",
                            FullName = "Tate Ernser",
                            Gender = false,
                            LastName = "Ernser",
                            Phone = "351-953-3132 x875",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/853.jpg",
                            Student_code = "Student0FLCXelZ"
                        },
                        new
                        {
                            Id = 6,
                            Address = "471 Nayeli Mountains, Steuberhaven, Albania",
                            City = "Lake Jermaineville",
                            DateOfBirth = new DateTime(2023, 5, 3, 9, 2, 45, 853, DateTimeKind.Local).AddTicks(6102),
                            Email = "Cathy_Gislason0@yahoo.com",
                            FirstName = "Cathy",
                            FullName = "Cathy Gislason",
                            Gender = false,
                            LastName = "Gislason",
                            Phone = "404-840-4419 x08332",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/209.jpg",
                            Student_code = "StudentUqKCBY5X"
                        },
                        new
                        {
                            Id = 7,
                            Address = "5850 Towne Island, Lake Gaylordberg, Pitcairn Islands",
                            City = "Lake Jada",
                            DateOfBirth = new DateTime(2023, 5, 21, 15, 22, 43, 958, DateTimeKind.Local).AddTicks(5489),
                            Email = "Randy7@yahoo.com",
                            FirstName = "Randy",
                            FullName = "Randy Medhurst",
                            Gender = false,
                            LastName = "Medhurst",
                            Phone = "(900) 820-7420 x40714",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/632.jpg",
                            Student_code = "StudentPCOM2gMS"
                        },
                        new
                        {
                            Id = 8,
                            Address = "9091 Scottie Tunnel, West Maudie, Timor-Leste",
                            City = "North Katherine",
                            DateOfBirth = new DateTime(2023, 8, 8, 22, 25, 19, 676, DateTimeKind.Local).AddTicks(1543),
                            Email = "Braeden66@hotmail.com",
                            FirstName = "Braeden",
                            FullName = "Braeden McDermott",
                            Gender = true,
                            LastName = "McDermott",
                            Phone = "(809) 217-2563",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1171.jpg",
                            Student_code = "StudentefGTE83y"
                        },
                        new
                        {
                            Id = 9,
                            Address = "631 Wisoky Cove, Weissnatfort, Benin",
                            City = "Lake Monserrat",
                            DateOfBirth = new DateTime(2022, 12, 10, 19, 36, 37, 116, DateTimeKind.Local).AddTicks(4461),
                            Email = "Kyleigh_Renner56@hotmail.com",
                            FirstName = "Kyleigh",
                            FullName = "Kyleigh Renner",
                            Gender = true,
                            LastName = "Renner",
                            Phone = "(307) 264-9450 x453",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/468.jpg",
                            Student_code = "Student4sOFSXaA"
                        },
                        new
                        {
                            Id = 10,
                            Address = "6642 Adaline Brook, Cronaview, Bulgaria",
                            City = "Lake Elroy",
                            DateOfBirth = new DateTime(2022, 11, 5, 16, 32, 32, 987, DateTimeKind.Local).AddTicks(8452),
                            Email = "Jamarcus.Effertz@gmail.com",
                            FirstName = "Jamarcus",
                            FullName = "Jamarcus Effertz",
                            Gender = false,
                            LastName = "Effertz",
                            Phone = "1-651-921-3950",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/207.jpg",
                            Student_code = "Student0WKPJwor"
                        },
                        new
                        {
                            Id = 11,
                            Address = "849 Farrell Park, Kemmerview, Honduras",
                            City = "New Nicole",
                            DateOfBirth = new DateTime(2022, 10, 20, 18, 40, 27, 161, DateTimeKind.Local).AddTicks(4691),
                            Email = "Cathrine86@yahoo.com",
                            FirstName = "Cathrine",
                            FullName = "Cathrine Hoppe",
                            Gender = true,
                            LastName = "Hoppe",
                            Phone = "922-720-4299 x94403",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/222.jpg",
                            Student_code = "StudentMk6SDySq"
                        },
                        new
                        {
                            Id = 12,
                            Address = "0509 Maxwell Port, Dickinsonview, Northern Mariana Islands",
                            City = "West Constantin",
                            DateOfBirth = new DateTime(2023, 8, 5, 11, 11, 16, 377, DateTimeKind.Local).AddTicks(4631),
                            Email = "Dax_Effertz@gmail.com",
                            FirstName = "Dax",
                            FullName = "Dax Effertz",
                            Gender = false,
                            LastName = "Effertz",
                            Phone = "1-317-250-1023 x8182",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/928.jpg",
                            Student_code = "StudentrJCj4KL9"
                        },
                        new
                        {
                            Id = 13,
                            Address = "99667 Vernie Branch, Guadalupefort, Svalbard & Jan Mayen Islands",
                            City = "Spencerfort",
                            DateOfBirth = new DateTime(2023, 5, 24, 9, 51, 15, 574, DateTimeKind.Local).AddTicks(5026),
                            Email = "Lynn.Keebler70@hotmail.com",
                            FirstName = "Lynn",
                            FullName = "Lynn Keebler",
                            Gender = false,
                            LastName = "Keebler",
                            Phone = "1-565-469-8156",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/615.jpg",
                            Student_code = "StudentDbgQOJ8G"
                        },
                        new
                        {
                            Id = 14,
                            Address = "67251 Birdie Hills, Gaylordfurt, Syrian Arab Republic",
                            City = "Port Hellen",
                            DateOfBirth = new DateTime(2023, 1, 24, 1, 56, 0, 777, DateTimeKind.Local).AddTicks(5783),
                            Email = "Murphy_Lesch@gmail.com",
                            FirstName = "Murphy",
                            FullName = "Murphy Lesch",
                            Gender = true,
                            LastName = "Lesch",
                            Phone = "308-915-5609 x7877",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/60.jpg",
                            Student_code = "Student1zKjHAzu"
                        },
                        new
                        {
                            Id = 15,
                            Address = "384 Liza Drive, South Maxchester, Cote d'Ivoire",
                            City = "East Hillardberg",
                            DateOfBirth = new DateTime(2023, 8, 21, 14, 56, 38, 502, DateTimeKind.Local).AddTicks(7171),
                            Email = "Waino.Cremin@hotmail.com",
                            FirstName = "Waino",
                            FullName = "Waino Cremin",
                            Gender = true,
                            LastName = "Cremin",
                            Phone = "1-716-806-3317 x4460",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/906.jpg",
                            Student_code = "StudentuxuyVOmY"
                        },
                        new
                        {
                            Id = 16,
                            Address = "0100 Boehm Prairie, Okunevafurt, Senegal",
                            City = "Jacobifurt",
                            DateOfBirth = new DateTime(2023, 7, 9, 7, 20, 7, 440, DateTimeKind.Local).AddTicks(2233),
                            Email = "Alessandra_Predovic@hotmail.com",
                            FirstName = "Alessandra",
                            FullName = "Alessandra Predovic",
                            Gender = true,
                            LastName = "Predovic",
                            Phone = "1-242-308-1901 x1054",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/934.jpg",
                            Student_code = "StudentQbWiolVX"
                        },
                        new
                        {
                            Id = 17,
                            Address = "42323 Giuseppe Meadow, West Raphael, Portugal",
                            City = "Croninport",
                            DateOfBirth = new DateTime(2022, 10, 30, 14, 50, 20, 553, DateTimeKind.Local).AddTicks(6509),
                            Email = "Alisa_Waelchi99@hotmail.com",
                            FirstName = "Alisa",
                            FullName = "Alisa Waelchi",
                            Gender = true,
                            LastName = "Waelchi",
                            Phone = "1-681-513-2538",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1073.jpg",
                            Student_code = "StudentaZXLqCid"
                        },
                        new
                        {
                            Id = 18,
                            Address = "2491 Oswald Courts, Candaceton, United Arab Emirates",
                            City = "Mayerberg",
                            DateOfBirth = new DateTime(2023, 2, 8, 16, 48, 24, 801, DateTimeKind.Local).AddTicks(6104),
                            Email = "Deanna_Kunde14@yahoo.com",
                            FirstName = "Deanna",
                            FullName = "Deanna Kunde",
                            Gender = true,
                            LastName = "Kunde",
                            Phone = "(355) 511-1421",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/834.jpg",
                            Student_code = "Student5dErN6EI"
                        },
                        new
                        {
                            Id = 19,
                            Address = "076 Hintz Lodge, East Pedro, Guam",
                            City = "Adamsberg",
                            DateOfBirth = new DateTime(2023, 6, 25, 6, 2, 42, 410, DateTimeKind.Local).AddTicks(4556),
                            Email = "Dewitt_Bosco48@gmail.com",
                            FirstName = "Dewitt",
                            FullName = "Dewitt Bosco",
                            Gender = false,
                            LastName = "Bosco",
                            Phone = "845-302-9260",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1196.jpg",
                            Student_code = "StudentTjdz3oHq"
                        },
                        new
                        {
                            Id = 20,
                            Address = "09293 Anderson Roads, Port Amelia, Nepal",
                            City = "Ravenside",
                            DateOfBirth = new DateTime(2022, 10, 14, 20, 56, 11, 625, DateTimeKind.Local).AddTicks(9535),
                            Email = "Charlotte.Nikolaus96@yahoo.com",
                            FirstName = "Charlotte",
                            FullName = "Charlotte Nikolaus",
                            Gender = true,
                            LastName = "Nikolaus",
                            Phone = "1-299-557-3313 x4254",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/361.jpg",
                            Student_code = "Student6oJNlV1L"
                        },
                        new
                        {
                            Id = 21,
                            Address = "4607 Nicolas Brook, New Hermina, Israel",
                            City = "East Keshawn",
                            DateOfBirth = new DateTime(2023, 3, 12, 3, 1, 54, 568, DateTimeKind.Local).AddTicks(310),
                            Email = "Mollie_Haag@hotmail.com",
                            FirstName = "Mollie",
                            FullName = "Mollie Haag",
                            Gender = false,
                            LastName = "Haag",
                            Phone = "766.428.2957 x77044",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/385.jpg",
                            Student_code = "StudentQR4ZF3LP"
                        },
                        new
                        {
                            Id = 22,
                            Address = "90554 Mckayla Crescent, Spinkachester, Slovenia",
                            City = "Herzogborough",
                            DateOfBirth = new DateTime(2023, 8, 11, 6, 34, 57, 98, DateTimeKind.Local).AddTicks(5864),
                            Email = "Kylee97@hotmail.com",
                            FirstName = "Kylee",
                            FullName = "Kylee Ritchie",
                            Gender = true,
                            LastName = "Ritchie",
                            Phone = "453.226.1297 x4783",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/218.jpg",
                            Student_code = "StudentgzxsZ2n9"
                        },
                        new
                        {
                            Id = 23,
                            Address = "7159 Eugenia Curve, East Brent, Bulgaria",
                            City = "New Pearlieberg",
                            DateOfBirth = new DateTime(2023, 1, 22, 21, 49, 39, 298, DateTimeKind.Local).AddTicks(550),
                            Email = "Candido51@hotmail.com",
                            FirstName = "Candido",
                            FullName = "Candido Predovic",
                            Gender = false,
                            LastName = "Predovic",
                            Phone = "299.216.7749",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/583.jpg",
                            Student_code = "Studentwzcsvdhe"
                        },
                        new
                        {
                            Id = 24,
                            Address = "372 Ariel Valley, North Mattie, Tajikistan",
                            City = "Heaneyburgh",
                            DateOfBirth = new DateTime(2023, 6, 16, 8, 2, 8, 457, DateTimeKind.Local).AddTicks(5439),
                            Email = "Eddie80@hotmail.com",
                            FirstName = "Eddie",
                            FullName = "Eddie Lubowitz",
                            Gender = true,
                            LastName = "Lubowitz",
                            Phone = "1-929-490-0094",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/222.jpg",
                            Student_code = "Student8iU4xNC5"
                        },
                        new
                        {
                            Id = 25,
                            Address = "23186 Fahey Island, East Marley, Saint Barthelemy",
                            City = "Durganmouth",
                            DateOfBirth = new DateTime(2023, 7, 16, 10, 31, 7, 602, DateTimeKind.Local).AddTicks(7170),
                            Email = "Evans_Feest@gmail.com",
                            FirstName = "Evans",
                            FullName = "Evans Feest",
                            Gender = true,
                            LastName = "Feest",
                            Phone = "(630) 499-1689",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/950.jpg",
                            Student_code = "StudentHRJvCVrK"
                        },
                        new
                        {
                            Id = 26,
                            Address = "457 Kub Knoll, Rennershire, Ireland",
                            City = "Millsport",
                            DateOfBirth = new DateTime(2023, 8, 2, 2, 19, 24, 982, DateTimeKind.Local).AddTicks(5211),
                            Email = "Rosalind80@hotmail.com",
                            FirstName = "Rosalind",
                            FullName = "Rosalind Walter",
                            Gender = true,
                            LastName = "Walter",
                            Phone = "247-251-6925",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/948.jpg",
                            Student_code = "StudentSIvecUn7"
                        },
                        new
                        {
                            Id = 27,
                            Address = "1075 Hettinger Tunnel, Mabelleberg, Slovakia (Slovak Republic)",
                            City = "Lake Trey",
                            DateOfBirth = new DateTime(2023, 2, 11, 19, 47, 0, 175, DateTimeKind.Local).AddTicks(6353),
                            Email = "Mabelle4@hotmail.com",
                            FirstName = "Mabelle",
                            FullName = "Mabelle Schmitt",
                            Gender = true,
                            LastName = "Schmitt",
                            Phone = "626-711-2309 x3976",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/124.jpg",
                            Student_code = "StudentIHqJhRtE"
                        },
                        new
                        {
                            Id = 28,
                            Address = "180 Laron Bridge, Myriamfurt, Ecuador",
                            City = "Mosciskihaven",
                            DateOfBirth = new DateTime(2023, 4, 3, 21, 46, 35, 587, DateTimeKind.Local).AddTicks(705),
                            Email = "Callie18@yahoo.com",
                            FirstName = "Callie",
                            FullName = "Callie Dicki",
                            Gender = false,
                            LastName = "Dicki",
                            Phone = "1-748-542-9929",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/336.jpg",
                            Student_code = "StudentGITBAoRK"
                        },
                        new
                        {
                            Id = 29,
                            Address = "14422 Fiona Fields, Wardmouth, Honduras",
                            City = "North Jamarcusburgh",
                            DateOfBirth = new DateTime(2023, 9, 28, 5, 31, 16, 70, DateTimeKind.Local).AddTicks(6048),
                            Email = "Anita.Lindgren@yahoo.com",
                            FirstName = "Anita",
                            FullName = "Anita Lindgren",
                            Gender = true,
                            LastName = "Lindgren",
                            Phone = "(742) 790-1155 x152",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/266.jpg",
                            Student_code = "Student2x7bwdbR"
                        },
                        new
                        {
                            Id = 30,
                            Address = "98214 Carey Gateway, Kesslerchester, Virgin Islands, British",
                            City = "Brendanton",
                            DateOfBirth = new DateTime(2023, 6, 21, 14, 58, 51, 993, DateTimeKind.Local).AddTicks(9494),
                            Email = "Clementine_Auer@hotmail.com",
                            FirstName = "Clementine",
                            FullName = "Clementine Auer",
                            Gender = true,
                            LastName = "Auer",
                            Phone = "514-373-1876",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/655.jpg",
                            Student_code = "StudentrFu2nSS6"
                        },
                        new
                        {
                            Id = 31,
                            Address = "093 Raina Shores, North Deborahville, Moldova",
                            City = "West Nelsonport",
                            DateOfBirth = new DateTime(2023, 1, 4, 6, 35, 5, 629, DateTimeKind.Local).AddTicks(3128),
                            Email = "Haley.Kuhlman@yahoo.com",
                            FirstName = "Haley",
                            FullName = "Haley Kuhlman",
                            Gender = false,
                            LastName = "Kuhlman",
                            Phone = "739.503.3133",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/244.jpg",
                            Student_code = "StudentkGcCZyqa"
                        },
                        new
                        {
                            Id = 32,
                            Address = "30935 Sanford Centers, Alfredochester, Bermuda",
                            City = "South Hosea",
                            DateOfBirth = new DateTime(2022, 11, 27, 23, 16, 15, 480, DateTimeKind.Local).AddTicks(9065),
                            Email = "Bud70@yahoo.com",
                            FirstName = "Bud",
                            FullName = "Bud Carroll",
                            Gender = false,
                            LastName = "Carroll",
                            Phone = "341-600-9744 x11906",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/131.jpg",
                            Student_code = "StudentqHXlNcXn"
                        },
                        new
                        {
                            Id = 33,
                            Address = "79959 Ziemann Alley, Hodkiewiczborough, Poland",
                            City = "Joanneborough",
                            DateOfBirth = new DateTime(2023, 5, 29, 1, 55, 12, 749, DateTimeKind.Local).AddTicks(1375),
                            Email = "Javier_Rempel6@hotmail.com",
                            FirstName = "Javier",
                            FullName = "Javier Rempel",
                            Gender = true,
                            LastName = "Rempel",
                            Phone = "(839) 901-5341",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/20.jpg",
                            Student_code = "StudentBpIy1kK8"
                        },
                        new
                        {
                            Id = 34,
                            Address = "6617 Raleigh Squares, Antoinetteshire, Guinea-Bissau",
                            City = "O'Reillymouth",
                            DateOfBirth = new DateTime(2023, 6, 25, 22, 34, 46, 988, DateTimeKind.Local).AddTicks(8510),
                            Email = "Zakary69@yahoo.com",
                            FirstName = "Zakary",
                            FullName = "Zakary Breitenberg",
                            Gender = true,
                            LastName = "Breitenberg",
                            Phone = "(714) 533-7805 x310",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/723.jpg",
                            Student_code = "StudentwfMZJGCH"
                        },
                        new
                        {
                            Id = 35,
                            Address = "4776 Kuhn Square, Carliton, Anguilla",
                            City = "Port Lyricport",
                            DateOfBirth = new DateTime(2023, 9, 8, 21, 31, 38, 747, DateTimeKind.Local).AddTicks(2589),
                            Email = "April59@hotmail.com",
                            FirstName = "April",
                            FullName = "April Mills",
                            Gender = true,
                            LastName = "Mills",
                            Phone = "362.955.3370",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/524.jpg",
                            Student_code = "StudentwW6iOz3W"
                        },
                        new
                        {
                            Id = 36,
                            Address = "188 Daniel Estates, New Carolineview, Albania",
                            City = "New Noel",
                            DateOfBirth = new DateTime(2023, 8, 6, 19, 56, 2, 651, DateTimeKind.Local).AddTicks(6968),
                            Email = "Billy56@yahoo.com",
                            FirstName = "Billy",
                            FullName = "Billy Walker",
                            Gender = false,
                            LastName = "Walker",
                            Phone = "1-819-808-2248 x8734",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/756.jpg",
                            Student_code = "StudentiT0p375M"
                        },
                        new
                        {
                            Id = 37,
                            Address = "143 Idella Course, Freemanport, Falkland Islands (Malvinas)",
                            City = "Cronaport",
                            DateOfBirth = new DateTime(2023, 3, 30, 17, 20, 46, 535, DateTimeKind.Local).AddTicks(1011),
                            Email = "Wilford_Buckridge9@gmail.com",
                            FirstName = "Wilford",
                            FullName = "Wilford Buckridge",
                            Gender = true,
                            LastName = "Buckridge",
                            Phone = "492-882-9798 x071",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/110.jpg",
                            Student_code = "Student5EruiSNp"
                        },
                        new
                        {
                            Id = 38,
                            Address = "75989 Jarred Knoll, Blickborough, Palestinian Territory",
                            City = "Sanfordton",
                            DateOfBirth = new DateTime(2023, 1, 26, 18, 15, 3, 460, DateTimeKind.Local).AddTicks(8463),
                            Email = "Eleonore_Ruecker40@gmail.com",
                            FirstName = "Eleonore",
                            FullName = "Eleonore Ruecker",
                            Gender = false,
                            LastName = "Ruecker",
                            Phone = "911-529-2148",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1126.jpg",
                            Student_code = "StudentyfbJD1vV"
                        },
                        new
                        {
                            Id = 39,
                            Address = "213 Hoppe Valleys, Lake Everettefort, Sri Lanka",
                            City = "New Heathton",
                            DateOfBirth = new DateTime(2023, 9, 27, 19, 13, 9, 131, DateTimeKind.Local).AddTicks(5539),
                            Email = "Holly_Yundt@hotmail.com",
                            FirstName = "Holly",
                            FullName = "Holly Yundt",
                            Gender = false,
                            LastName = "Yundt",
                            Phone = "392.977.9901 x976",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/640.jpg",
                            Student_code = "StudentJ25TiGFa"
                        },
                        new
                        {
                            Id = 40,
                            Address = "92818 Raymundo Camp, North Bradenland, Guatemala",
                            City = "New Alessiamouth",
                            DateOfBirth = new DateTime(2022, 12, 15, 6, 1, 29, 954, DateTimeKind.Local).AddTicks(6726),
                            Email = "Jane_Mraz@hotmail.com",
                            FirstName = "Jane",
                            FullName = "Jane Mraz",
                            Gender = false,
                            LastName = "Mraz",
                            Phone = "1-218-420-4584 x1899",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/130.jpg",
                            Student_code = "StudentNXzvefl9"
                        },
                        new
                        {
                            Id = 41,
                            Address = "9654 Parker Dam, Halvorsonside, Antarctica (the territory South of 60 deg S)",
                            City = "Tyshawnside",
                            DateOfBirth = new DateTime(2023, 1, 6, 9, 25, 59, 42, DateTimeKind.Local).AddTicks(1438),
                            Email = "Elinor2@gmail.com",
                            FirstName = "Elinor",
                            FullName = "Elinor Beahan",
                            Gender = true,
                            LastName = "Beahan",
                            Phone = "(483) 396-7258 x4335",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/22.jpg",
                            Student_code = "StudentTSnT6BKA"
                        },
                        new
                        {
                            Id = 42,
                            Address = "5043 Lakin Burgs, Port Lucienneville, Namibia",
                            City = "Hagenesfurt",
                            DateOfBirth = new DateTime(2023, 9, 10, 20, 49, 46, 756, DateTimeKind.Local).AddTicks(1288),
                            Email = "Albina_Gutmann67@yahoo.com",
                            FirstName = "Albina",
                            FullName = "Albina Gutmann",
                            Gender = false,
                            LastName = "Gutmann",
                            Phone = "532-212-0389 x7496",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/321.jpg",
                            Student_code = "StudentaiMN4hdn"
                        },
                        new
                        {
                            Id = 43,
                            Address = "22664 White Radial, Joneston, Namibia",
                            City = "Pricehaven",
                            DateOfBirth = new DateTime(2023, 5, 30, 14, 36, 20, 707, DateTimeKind.Local).AddTicks(4100),
                            Email = "Eloise_Kertzmann95@hotmail.com",
                            FirstName = "Eloise",
                            FullName = "Eloise Kertzmann",
                            Gender = false,
                            LastName = "Kertzmann",
                            Phone = "304-835-6407 x38655",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/935.jpg",
                            Student_code = "StudentD9ziICZk"
                        },
                        new
                        {
                            Id = 44,
                            Address = "249 Emerson Summit, Mohammedport, Tokelau",
                            City = "Rhettbury",
                            DateOfBirth = new DateTime(2023, 3, 1, 3, 24, 37, 486, DateTimeKind.Local).AddTicks(6098),
                            Email = "Halie.Langworth@yahoo.com",
                            FirstName = "Halie",
                            FullName = "Halie Langworth",
                            Gender = false,
                            LastName = "Langworth",
                            Phone = "(397) 991-8720",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/128.jpg",
                            Student_code = "StudentR6kuwEvj"
                        },
                        new
                        {
                            Id = 45,
                            Address = "780 Oberbrunner Spurs, South Micaelamouth, Guyana",
                            City = "New Richard",
                            DateOfBirth = new DateTime(2022, 12, 29, 10, 48, 49, 974, DateTimeKind.Local).AddTicks(6577),
                            Email = "Fausto_Turner87@hotmail.com",
                            FirstName = "Fausto",
                            FullName = "Fausto Turner",
                            Gender = true,
                            LastName = "Turner",
                            Phone = "(502) 614-1850 x2318",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1052.jpg",
                            Student_code = "Student3PWp5pL2"
                        },
                        new
                        {
                            Id = 46,
                            Address = "53319 Hallie River, North Chesleyport, Ecuador",
                            City = "Candacemouth",
                            DateOfBirth = new DateTime(2023, 9, 25, 3, 16, 53, 167, DateTimeKind.Local).AddTicks(5605),
                            Email = "Pattie_Schuppe@yahoo.com",
                            FirstName = "Pattie",
                            FullName = "Pattie Schuppe",
                            Gender = true,
                            LastName = "Schuppe",
                            Phone = "1-343-428-2356 x635",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/834.jpg",
                            Student_code = "StudentO9K9vKmh"
                        },
                        new
                        {
                            Id = 47,
                            Address = "80166 Kamryn Ways, Garrettmouth, Liechtenstein",
                            City = "Lindgrenborough",
                            DateOfBirth = new DateTime(2022, 10, 28, 22, 5, 15, 485, DateTimeKind.Local).AddTicks(8731),
                            Email = "Alford67@hotmail.com",
                            FirstName = "Alford",
                            FullName = "Alford Predovic",
                            Gender = true,
                            LastName = "Predovic",
                            Phone = "(268) 805-6498 x068",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1175.jpg",
                            Student_code = "Student5bu3az7n"
                        },
                        new
                        {
                            Id = 48,
                            Address = "425 Lexus Via, Jaydaview, Bahamas",
                            City = "Runolfsdottirville",
                            DateOfBirth = new DateTime(2023, 6, 27, 2, 26, 8, 858, DateTimeKind.Local).AddTicks(6907),
                            Email = "Toy5@yahoo.com",
                            FirstName = "Toy",
                            FullName = "Toy Brakus",
                            Gender = false,
                            LastName = "Brakus",
                            Phone = "(717) 413-5552",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1022.jpg",
                            Student_code = "StudentuPcysZix"
                        },
                        new
                        {
                            Id = 49,
                            Address = "98165 Kamille Camp, South Miguel, Ethiopia",
                            City = "Guillermoville",
                            DateOfBirth = new DateTime(2023, 6, 14, 5, 0, 56, 549, DateTimeKind.Local).AddTicks(5468),
                            Email = "Casey84@yahoo.com",
                            FirstName = "Casey",
                            FullName = "Casey Stroman",
                            Gender = true,
                            LastName = "Stroman",
                            Phone = "773-857-7689 x15936",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/379.jpg",
                            Student_code = "StudentmJ74P7St"
                        },
                        new
                        {
                            Id = 50,
                            Address = "395 Beer Views, Millsville, Mauritius",
                            City = "Bernhardton",
                            DateOfBirth = new DateTime(2023, 2, 1, 2, 18, 40, 944, DateTimeKind.Local).AddTicks(3348),
                            Email = "Aurelio67@hotmail.com",
                            FirstName = "Aurelio",
                            FullName = "Aurelio Jacobi",
                            Gender = false,
                            LastName = "Jacobi",
                            Phone = "947.429.8923 x251",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1011.jpg",
                            Student_code = "Student0uc4N1rr"
                        });
                });

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.HasOne("LibraryModels.News", "News")
                        .WithMany("Comments")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.Priority", null)
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
