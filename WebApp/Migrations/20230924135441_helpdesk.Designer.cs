// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Database_helper;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230924135441_helpdesk")]
    partial class helpdesk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewId");

                    b.ToTable("tbComments");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitiesId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbDiscussion");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All problems related to class-rooms",
                            Name = "Class-rooms"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All problems related to labs",
                            Name = "Labs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All problems related to hostels",
                            Name = "Hostels"
                        },
                        new
                        {
                            Id = 4,
                            Description = "All problems related to mess",
                            Name = "Mess"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All problems related to canteen",
                            Name = "Canteen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "All problems related to gymnasium",
                            Name = "Gymnasium"
                        },
                        new
                        {
                            Id = 7,
                            Description = "All problems related to Computer Centre",
                            Name = "Computer Centre"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All problems related to library",
                            Name = "Library"
                        },
                        new
                        {
                            Id = 9,
                            Description = "All problems related to after-school clubs",
                            Name = "After-school clubs"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Other problems",
                            Name = "Other problems"
                        });
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbNews");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Critical"
                        },
                        new
                        {
                            Id = 2,
                            Name = "High"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Escalation"
                        });
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SupporterId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SupporterId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbTicket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbTicketStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Name = "On hold"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tbUserInfo");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "WEew0r0T",
                            Email = "superadmin@gmail.com",
                            Password = "$2a$11$6E4upKWkfmKiubuw9SpFSuszHVOUBYfif7fip9GPgT8xZ3VHOhgWC",
                            Role = "Admin",
                            Status = true,
                            UserName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Code = "kci5zn51",
                            Email = "supporter@gmail.com",
                            Password = "$2a$11$Tn0I8M09s8NO3p4jSzg86Ox/QHEJ7IWLZtEWkG71cWGngGJTtVPSm",
                            Role = "Supporter",
                            Status = true,
                            UserName = "Supporter"
                        },
                        new
                        {
                            Id = 3,
                            Code = "kgngFfdH",
                            Email = "user@gmail.com",
                            Password = "$2a$11$Xa1Cs5RawuXbjP4YFm7KheQeQrxZHB/Qo6twuoy9wVzlVFIcuSaH.",
                            Role = "User",
                            Status = true,
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("LibraryModels.UsersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "78322 Maybelle Mountain, Arnebury, Sudan",
                            City = "Haileehaven",
                            DateOfBirth = new DateTime(2023, 6, 15, 22, 22, 12, 236, DateTimeKind.Local).AddTicks(6335),
                            Email = "Khalid_Rosenbaum@yahoo.com",
                            FirstName = "Khalid",
                            FullName = "Khalid Rosenbaum",
                            Gender = false,
                            LastName = "Rosenbaum",
                            Phone = "(900) 525-0632",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/352.jpg",
                            Student_code = "Student5jfOSfsS"
                        },
                        new
                        {
                            Id = 2,
                            Address = "63823 Gleichner Lodge, Schmidtville, Afghanistan",
                            City = "Hartmannmouth",
                            DateOfBirth = new DateTime(2023, 5, 11, 17, 52, 27, 827, DateTimeKind.Local).AddTicks(4879),
                            Email = "Bertram.Aufderhar79@gmail.com",
                            FirstName = "Bertram",
                            FullName = "Bertram Aufderhar",
                            Gender = false,
                            LastName = "Aufderhar",
                            Phone = "319-352-9756",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/732.jpg",
                            Student_code = "StudentxSy4UBtM"
                        },
                        new
                        {
                            Id = 3,
                            Address = "20018 Carmella Motorway, West Ethelhaven, Fiji",
                            City = "New Christaton",
                            DateOfBirth = new DateTime(2023, 4, 4, 22, 24, 28, 83, DateTimeKind.Local).AddTicks(1601),
                            Email = "Josefina.Heller@yahoo.com",
                            FirstName = "Josefina",
                            FullName = "Josefina Heller",
                            Gender = false,
                            LastName = "Heller",
                            Phone = "461.975.9730 x28582",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/50.jpg",
                            Student_code = "StudenthcRArqMB"
                        },
                        new
                        {
                            Id = 4,
                            Address = "58874 D'Amore Ville, North Willatown, Madagascar",
                            City = "Port Thaliatown",
                            DateOfBirth = new DateTime(2022, 12, 21, 11, 13, 36, 806, DateTimeKind.Local).AddTicks(2420),
                            Email = "Alejandra71@hotmail.com",
                            FirstName = "Alejandra",
                            FullName = "Alejandra O'Conner",
                            Gender = false,
                            LastName = "O'Conner",
                            Phone = "1-785-457-2400 x28575",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/396.jpg",
                            Student_code = "StudentecJ6SBVz"
                        },
                        new
                        {
                            Id = 5,
                            Address = "48319 Delbert Fall, Dooleyberg, Ireland",
                            City = "Port Christopfort",
                            DateOfBirth = new DateTime(2022, 10, 14, 5, 58, 31, 700, DateTimeKind.Local).AddTicks(8024),
                            Email = "Lucie.Corwin9@yahoo.com",
                            FirstName = "Lucie",
                            FullName = "Lucie Corwin",
                            Gender = true,
                            LastName = "Corwin",
                            Phone = "1-799-676-2299",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/325.jpg",
                            Student_code = "Studentaxdqt4f0"
                        },
                        new
                        {
                            Id = 6,
                            Address = "26075 Schaden Underpass, Nickolasfort, Mauritius",
                            City = "East Makayla",
                            DateOfBirth = new DateTime(2023, 5, 1, 17, 42, 58, 841, DateTimeKind.Local).AddTicks(272),
                            Email = "Evelyn61@gmail.com",
                            FirstName = "Evelyn",
                            FullName = "Evelyn Schoen",
                            Gender = true,
                            LastName = "Schoen",
                            Phone = "1-576-245-8079 x121",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/712.jpg",
                            Student_code = "Studentld8smzkS"
                        },
                        new
                        {
                            Id = 7,
                            Address = "090 Jacobs Pine, West Andreane, Pitcairn Islands",
                            City = "Watsonport",
                            DateOfBirth = new DateTime(2023, 2, 19, 17, 26, 27, 387, DateTimeKind.Local).AddTicks(522),
                            Email = "Gabriel38@gmail.com",
                            FirstName = "Gabriel",
                            FullName = "Gabriel Trantow",
                            Gender = true,
                            LastName = "Trantow",
                            Phone = "(899) 688-6779 x74788",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/390.jpg",
                            Student_code = "Student7kphLlUZ"
                        },
                        new
                        {
                            Id = 8,
                            Address = "377 Eino Roads, Melodytown, Jersey",
                            City = "Port Enidburgh",
                            DateOfBirth = new DateTime(2023, 4, 8, 1, 35, 42, 896, DateTimeKind.Local).AddTicks(3147),
                            Email = "Carolyn.Bauch28@hotmail.com",
                            FirstName = "Carolyn",
                            FullName = "Carolyn Bauch",
                            Gender = false,
                            LastName = "Bauch",
                            Phone = "706.800.0902",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/490.jpg",
                            Student_code = "Student4R5xIKJi"
                        },
                        new
                        {
                            Id = 9,
                            Address = "82466 Janis Fork, East Ike, India",
                            City = "Aminafurt",
                            DateOfBirth = new DateTime(2023, 3, 11, 10, 53, 11, 629, DateTimeKind.Local).AddTicks(4780),
                            Email = "Ethelyn_Kerluke75@gmail.com",
                            FirstName = "Ethelyn",
                            FullName = "Ethelyn Kerluke",
                            Gender = false,
                            LastName = "Kerluke",
                            Phone = "1-651-759-6185 x971",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1198.jpg",
                            Student_code = "Studenticc64uaP"
                        },
                        new
                        {
                            Id = 10,
                            Address = "79186 Terence Forks, Langworthville, Cameroon",
                            City = "New Sandrine",
                            DateOfBirth = new DateTime(2022, 11, 21, 23, 16, 30, 825, DateTimeKind.Local).AddTicks(3997),
                            Email = "Gabriella31@gmail.com",
                            FirstName = "Gabriella",
                            FullName = "Gabriella Pfeffer",
                            Gender = true,
                            LastName = "Pfeffer",
                            Phone = "1-378-759-7900",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/215.jpg",
                            Student_code = "Student0YE3AFSe"
                        },
                        new
                        {
                            Id = 11,
                            Address = "876 Stark Forest, New Julius, Croatia",
                            City = "East Tierra",
                            DateOfBirth = new DateTime(2022, 12, 2, 7, 14, 36, 880, DateTimeKind.Local).AddTicks(6945),
                            Email = "Vallie_Ortiz2@hotmail.com",
                            FirstName = "Vallie",
                            FullName = "Vallie Ortiz",
                            Gender = false,
                            LastName = "Ortiz",
                            Phone = "387.380.8068",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/921.jpg",
                            Student_code = "Student3nvBgH0l"
                        },
                        new
                        {
                            Id = 12,
                            Address = "943 Pacocha Fords, Delilahmouth, Lao People's Democratic Republic",
                            City = "New Lilla",
                            DateOfBirth = new DateTime(2023, 1, 12, 17, 39, 26, 653, DateTimeKind.Local).AddTicks(514),
                            Email = "Riley_Kassulke45@yahoo.com",
                            FirstName = "Riley",
                            FullName = "Riley Kassulke",
                            Gender = false,
                            LastName = "Kassulke",
                            Phone = "1-366-819-8993 x235",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/91.jpg",
                            Student_code = "StudentxrpgqnUB"
                        },
                        new
                        {
                            Id = 13,
                            Address = "698 Selina Field, East Kylie, Yemen",
                            City = "Hattieland",
                            DateOfBirth = new DateTime(2023, 9, 24, 1, 45, 47, 759, DateTimeKind.Local).AddTicks(5714),
                            Email = "Ashtyn.Grant53@gmail.com",
                            FirstName = "Ashtyn",
                            FullName = "Ashtyn Grant",
                            Gender = true,
                            LastName = "Grant",
                            Phone = "217-203-1992",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/935.jpg",
                            Student_code = "StudentNr6C7Tt3"
                        },
                        new
                        {
                            Id = 14,
                            Address = "01094 Amina Inlet, East Dorothea, Tanzania",
                            City = "Mckennamouth",
                            DateOfBirth = new DateTime(2023, 2, 16, 22, 55, 49, 876, DateTimeKind.Local).AddTicks(9791),
                            Email = "Riley18@gmail.com",
                            FirstName = "Riley",
                            FullName = "Riley Kub",
                            Gender = false,
                            LastName = "Kub",
                            Phone = "(281) 696-3981",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/363.jpg",
                            Student_code = "StudentHnfD2TQT"
                        },
                        new
                        {
                            Id = 15,
                            Address = "030 Bauch Mount, Marinaton, Saint Martin",
                            City = "Toyfort",
                            DateOfBirth = new DateTime(2022, 10, 21, 3, 56, 55, 30, DateTimeKind.Local).AddTicks(900),
                            Email = "Roma53@gmail.com",
                            FirstName = "Roma",
                            FullName = "Roma Roberts",
                            Gender = true,
                            LastName = "Roberts",
                            Phone = "(266) 730-5494 x70209",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1071.jpg",
                            Student_code = "StudentMuwsGMR9"
                        },
                        new
                        {
                            Id = 16,
                            Address = "0864 Saige Junction, Parisberg, Bangladesh",
                            City = "Leuschkeport",
                            DateOfBirth = new DateTime(2022, 12, 14, 8, 1, 56, 216, DateTimeKind.Local).AddTicks(7403),
                            Email = "Toby.Auer75@hotmail.com",
                            FirstName = "Toby",
                            FullName = "Toby Auer",
                            Gender = false,
                            LastName = "Auer",
                            Phone = "663.354.3592 x270",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/38.jpg",
                            Student_code = "StudentwA6LbphO"
                        },
                        new
                        {
                            Id = 17,
                            Address = "077 Ratke Harbors, East Aimeeburgh, Panama",
                            City = "East Jerrod",
                            DateOfBirth = new DateTime(2023, 9, 22, 12, 22, 40, 68, DateTimeKind.Local).AddTicks(6562),
                            Email = "Lesley_Hickle@hotmail.com",
                            FirstName = "Lesley",
                            FullName = "Lesley Hickle",
                            Gender = true,
                            LastName = "Hickle",
                            Phone = "988.311.8171",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/334.jpg",
                            Student_code = "StudentSdjeWSzW"
                        },
                        new
                        {
                            Id = 18,
                            Address = "169 Fermin Villages, Shanaland, Honduras",
                            City = "West Asia",
                            DateOfBirth = new DateTime(2022, 9, 29, 19, 40, 47, 485, DateTimeKind.Local).AddTicks(6146),
                            Email = "Kacey49@gmail.com",
                            FirstName = "Kacey",
                            FullName = "Kacey Ankunding",
                            Gender = false,
                            LastName = "Ankunding",
                            Phone = "1-608-576-3557",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/143.jpg",
                            Student_code = "StudentU7sH2a4Q"
                        },
                        new
                        {
                            Id = 19,
                            Address = "42786 Salvatore Track, Lake Brandon, Djibouti",
                            City = "New Missouri",
                            DateOfBirth = new DateTime(2023, 1, 16, 11, 15, 56, 681, DateTimeKind.Local).AddTicks(9513),
                            Email = "Marquise.Stokes@hotmail.com",
                            FirstName = "Marquise",
                            FullName = "Marquise Stokes",
                            Gender = true,
                            LastName = "Stokes",
                            Phone = "376.542.3183",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/928.jpg",
                            Student_code = "StudentAp1AQa3a"
                        },
                        new
                        {
                            Id = 20,
                            Address = "2796 Desiree Station, Corneliuston, South Georgia and the South Sandwich Islands",
                            City = "North Josephland",
                            DateOfBirth = new DateTime(2023, 5, 25, 1, 40, 54, 996, DateTimeKind.Local).AddTicks(7250),
                            Email = "Jerrell.Gerhold@yahoo.com",
                            FirstName = "Jerrell",
                            FullName = "Jerrell Gerhold",
                            Gender = false,
                            LastName = "Gerhold",
                            Phone = "442-705-0972 x8135",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1245.jpg",
                            Student_code = "StudentdnGEZnQG"
                        },
                        new
                        {
                            Id = 21,
                            Address = "907 Little Locks, Madgeview, Chad",
                            City = "North Marilie",
                            DateOfBirth = new DateTime(2023, 7, 19, 18, 17, 42, 696, DateTimeKind.Local).AddTicks(1746),
                            Email = "Arlo_McGlynn7@yahoo.com",
                            FirstName = "Arlo",
                            FullName = "Arlo McGlynn",
                            Gender = true,
                            LastName = "McGlynn",
                            Phone = "(629) 365-2912 x124",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/973.jpg",
                            Student_code = "StudentFLL9nlE4"
                        },
                        new
                        {
                            Id = 22,
                            Address = "71312 Tremblay Radial, Johnathonhaven, United Arab Emirates",
                            City = "North Emmymouth",
                            DateOfBirth = new DateTime(2023, 2, 9, 11, 8, 32, 370, DateTimeKind.Local).AddTicks(5615),
                            Email = "Ofelia82@hotmail.com",
                            FirstName = "Ofelia",
                            FullName = "Ofelia Thompson",
                            Gender = true,
                            LastName = "Thompson",
                            Phone = "829-952-8250",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1056.jpg",
                            Student_code = "Studentua1kqkWE"
                        },
                        new
                        {
                            Id = 23,
                            Address = "6306 Christine Squares, Macejkovicfurt, Morocco",
                            City = "Maggiohaven",
                            DateOfBirth = new DateTime(2022, 12, 9, 22, 31, 40, 2, DateTimeKind.Local).AddTicks(8168),
                            Email = "Kylee_Wisozk64@yahoo.com",
                            FirstName = "Kylee",
                            FullName = "Kylee Wisozk",
                            Gender = false,
                            LastName = "Wisozk",
                            Phone = "1-683-237-6295",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/385.jpg",
                            Student_code = "StudentEuCdOe8f"
                        },
                        new
                        {
                            Id = 24,
                            Address = "81233 Mack Mall, East Wadechester, Romania",
                            City = "Anitaside",
                            DateOfBirth = new DateTime(2023, 2, 16, 0, 4, 54, 851, DateTimeKind.Local).AddTicks(8227),
                            Email = "Lysanne.Gusikowski@yahoo.com",
                            FirstName = "Lysanne",
                            FullName = "Lysanne Gusikowski",
                            Gender = false,
                            LastName = "Gusikowski",
                            Phone = "700-885-4823 x81572",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/431.jpg",
                            Student_code = "StudentYF5kgj21"
                        },
                        new
                        {
                            Id = 25,
                            Address = "11970 Myrtice Drive, Trentonshire, Austria",
                            City = "Lake Juvenalbury",
                            DateOfBirth = new DateTime(2023, 6, 11, 9, 9, 5, 47, DateTimeKind.Local).AddTicks(4203),
                            Email = "Chance.Hoeger@gmail.com",
                            FirstName = "Chance",
                            FullName = "Chance Hoeger",
                            Gender = true,
                            LastName = "Hoeger",
                            Phone = "949.903.1742",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/450.jpg",
                            Student_code = "StudentrJWf8aho"
                        },
                        new
                        {
                            Id = 26,
                            Address = "1082 Walker Glen, Olatown, Slovakia (Slovak Republic)",
                            City = "New Treychester",
                            DateOfBirth = new DateTime(2022, 12, 16, 20, 54, 11, 470, DateTimeKind.Local).AddTicks(1378),
                            Email = "Nichole_Hansen@hotmail.com",
                            FirstName = "Nichole",
                            FullName = "Nichole Hansen",
                            Gender = false,
                            LastName = "Hansen",
                            Phone = "(979) 963-0622",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1153.jpg",
                            Student_code = "StudenttN9Pi768"
                        },
                        new
                        {
                            Id = 27,
                            Address = "25409 Jaylon Roads, Port Londonton, Gibraltar",
                            City = "South Shayna",
                            DateOfBirth = new DateTime(2023, 9, 2, 12, 5, 11, 653, DateTimeKind.Local).AddTicks(4820),
                            Email = "Efrain_Heaney72@gmail.com",
                            FirstName = "Efrain",
                            FullName = "Efrain Heaney",
                            Gender = true,
                            LastName = "Heaney",
                            Phone = "(455) 804-1714",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/570.jpg",
                            Student_code = "StudentHAJ0L1EK"
                        },
                        new
                        {
                            Id = 28,
                            Address = "98569 Carter Island, South Corneliusberg, Saudi Arabia",
                            City = "Rolfsonberg",
                            DateOfBirth = new DateTime(2023, 1, 7, 0, 8, 22, 773, DateTimeKind.Local).AddTicks(7590),
                            Email = "Winifred.Farrell@yahoo.com",
                            FirstName = "Winifred",
                            FullName = "Winifred Farrell",
                            Gender = true,
                            LastName = "Farrell",
                            Phone = "1-585-965-5947 x948",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/645.jpg",
                            Student_code = "StudentR52iP1jo"
                        },
                        new
                        {
                            Id = 29,
                            Address = "31714 Emmie Rue, West Vanville, Belarus",
                            City = "Gottliebville",
                            DateOfBirth = new DateTime(2023, 7, 18, 1, 42, 29, 655, DateTimeKind.Local).AddTicks(7923),
                            Email = "Graciela.Kuphal@yahoo.com",
                            FirstName = "Graciela",
                            FullName = "Graciela Kuphal",
                            Gender = true,
                            LastName = "Kuphal",
                            Phone = "(359) 640-0782",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/742.jpg",
                            Student_code = "StudentfZFQtQop"
                        },
                        new
                        {
                            Id = 30,
                            Address = "30105 Destinee Villages, Brakusland, Latvia",
                            City = "Spencerton",
                            DateOfBirth = new DateTime(2023, 6, 18, 3, 33, 47, 863, DateTimeKind.Local).AddTicks(5043),
                            Email = "Earl_Dickens@hotmail.com",
                            FirstName = "Earl",
                            FullName = "Earl Dickens",
                            Gender = true,
                            LastName = "Dickens",
                            Phone = "(947) 853-5980 x832",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/129.jpg",
                            Student_code = "StudentW8zDzEo7"
                        },
                        new
                        {
                            Id = 31,
                            Address = "991 Konopelski Forge, Keyshawnbury, Palestinian Territory",
                            City = "Darrellbury",
                            DateOfBirth = new DateTime(2023, 3, 21, 13, 47, 7, 610, DateTimeKind.Local).AddTicks(6574),
                            Email = "Cordia.Wilderman99@gmail.com",
                            FirstName = "Cordia",
                            FullName = "Cordia Wilderman",
                            Gender = false,
                            LastName = "Wilderman",
                            Phone = "946.436.2197",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/22.jpg",
                            Student_code = "StudentdUlXGrmH"
                        },
                        new
                        {
                            Id = 32,
                            Address = "0193 Veum Points, Vidaborough, Tuvalu",
                            City = "Bauchmouth",
                            DateOfBirth = new DateTime(2023, 2, 22, 2, 53, 11, 213, DateTimeKind.Local).AddTicks(1923),
                            Email = "Alysha_Blick@yahoo.com",
                            FirstName = "Alysha",
                            FullName = "Alysha Blick",
                            Gender = false,
                            LastName = "Blick",
                            Phone = "(569) 653-6671",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1080.jpg",
                            Student_code = "Student2P6mq8oY"
                        },
                        new
                        {
                            Id = 33,
                            Address = "174 Brakus Valley, South Webstertown, Germany",
                            City = "East Destiney",
                            DateOfBirth = new DateTime(2023, 2, 11, 2, 20, 0, 259, DateTimeKind.Local).AddTicks(4829),
                            Email = "Talon22@gmail.com",
                            FirstName = "Talon",
                            FullName = "Talon Schoen",
                            Gender = true,
                            LastName = "Schoen",
                            Phone = "512.766.2908",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/887.jpg",
                            Student_code = "Student4ed4bGvg"
                        },
                        new
                        {
                            Id = 34,
                            Address = "755 Jessy Lodge, Chynabury, Haiti",
                            City = "Konopelskifort",
                            DateOfBirth = new DateTime(2023, 7, 5, 4, 53, 3, 267, DateTimeKind.Local).AddTicks(2712),
                            Email = "Baylee_Bauch72@yahoo.com",
                            FirstName = "Baylee",
                            FullName = "Baylee Bauch",
                            Gender = true,
                            LastName = "Bauch",
                            Phone = "239.590.0753 x98736",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/478.jpg",
                            Student_code = "Studentf7XzCQMr"
                        },
                        new
                        {
                            Id = 35,
                            Address = "1672 Reinger Inlet, Port Stephenbury, Kyrgyz Republic",
                            City = "Ryanberg",
                            DateOfBirth = new DateTime(2023, 9, 2, 0, 36, 39, 132, DateTimeKind.Local).AddTicks(4833),
                            Email = "Bettye_Graham@hotmail.com",
                            FirstName = "Bettye",
                            FullName = "Bettye Graham",
                            Gender = false,
                            LastName = "Graham",
                            Phone = "1-532-334-2614 x303",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/220.jpg",
                            Student_code = "StudentyEA3Msn1"
                        },
                        new
                        {
                            Id = 36,
                            Address = "95131 Barton Pike, Amaramouth, Vanuatu",
                            City = "New Maybelleview",
                            DateOfBirth = new DateTime(2022, 12, 23, 14, 43, 32, 956, DateTimeKind.Local).AddTicks(8145),
                            Email = "Jade50@yahoo.com",
                            FirstName = "Jade",
                            FullName = "Jade Ratke",
                            Gender = true,
                            LastName = "Ratke",
                            Phone = "(289) 802-4627 x359",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1051.jpg",
                            Student_code = "Studentwh4fQk5d"
                        },
                        new
                        {
                            Id = 37,
                            Address = "32402 London Ranch, Littleberg, Heard Island and McDonald Islands",
                            City = "West Mackenzie",
                            DateOfBirth = new DateTime(2022, 9, 27, 9, 26, 34, 342, DateTimeKind.Local).AddTicks(5862),
                            Email = "Nannie.Rath54@yahoo.com",
                            FirstName = "Nannie",
                            FullName = "Nannie Rath",
                            Gender = false,
                            LastName = "Rath",
                            Phone = "(302) 747-8511",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/731.jpg",
                            Student_code = "StudentiPd3GFG2"
                        },
                        new
                        {
                            Id = 38,
                            Address = "30241 Mia Mission, Barrowsfort, Rwanda",
                            City = "New Immanuel",
                            DateOfBirth = new DateTime(2023, 7, 12, 11, 58, 50, 483, DateTimeKind.Local).AddTicks(7719),
                            Email = "Ines20@hotmail.com",
                            FirstName = "Ines",
                            FullName = "Ines Mayert",
                            Gender = true,
                            LastName = "Mayert",
                            Phone = "1-513-774-8454",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/112.jpg",
                            Student_code = "StudentINpgaYUo"
                        },
                        new
                        {
                            Id = 39,
                            Address = "19031 McKenzie Circles, Lake Aracely, Timor-Leste",
                            City = "Nakiamouth",
                            DateOfBirth = new DateTime(2023, 1, 20, 7, 31, 52, 991, DateTimeKind.Local).AddTicks(3499),
                            Email = "Jeanie5@hotmail.com",
                            FirstName = "Jeanie",
                            FullName = "Jeanie Klein",
                            Gender = false,
                            LastName = "Klein",
                            Phone = "1-213-633-2689 x109",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/236.jpg",
                            Student_code = "StudentR0idQldE"
                        },
                        new
                        {
                            Id = 40,
                            Address = "58477 Bashirian Curve, North Adeleborough, Luxembourg",
                            City = "East Rhianna",
                            DateOfBirth = new DateTime(2023, 8, 23, 12, 37, 27, 488, DateTimeKind.Local).AddTicks(110),
                            Email = "Mia.Willms54@gmail.com",
                            FirstName = "Mia",
                            FullName = "Mia Willms",
                            Gender = false,
                            LastName = "Willms",
                            Phone = "(679) 560-1649 x4094",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/721.jpg",
                            Student_code = "StudentE6AYZpv8"
                        },
                        new
                        {
                            Id = 41,
                            Address = "11000 Tara Junctions, Halieland, Chad",
                            City = "North Barbara",
                            DateOfBirth = new DateTime(2023, 4, 18, 0, 58, 37, 688, DateTimeKind.Local).AddTicks(8283),
                            Email = "Cordia16@yahoo.com",
                            FirstName = "Cordia",
                            FullName = "Cordia Hahn",
                            Gender = false,
                            LastName = "Hahn",
                            Phone = "(455) 562-2967 x115",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/589.jpg",
                            Student_code = "StudentrfzGbjF5"
                        },
                        new
                        {
                            Id = 42,
                            Address = "9353 Isom Well, Daughertyfort, Angola",
                            City = "Lake Kody",
                            DateOfBirth = new DateTime(2023, 9, 23, 9, 54, 0, 131, DateTimeKind.Local).AddTicks(8370),
                            Email = "Armando_Schmeler32@yahoo.com",
                            FirstName = "Armando",
                            FullName = "Armando Schmeler",
                            Gender = false,
                            LastName = "Schmeler",
                            Phone = "216.493.7584 x21070",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/195.jpg",
                            Student_code = "StudentNRcwiSzM"
                        },
                        new
                        {
                            Id = 43,
                            Address = "8587 Ned View, North Scottie, Libyan Arab Jamahiriya",
                            City = "Rempelbury",
                            DateOfBirth = new DateTime(2023, 6, 13, 19, 13, 24, 415, DateTimeKind.Local).AddTicks(8449),
                            Email = "Nathaniel17@hotmail.com",
                            FirstName = "Nathaniel",
                            FullName = "Nathaniel Upton",
                            Gender = false,
                            LastName = "Upton",
                            Phone = "1-961-784-5560 x35465",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1142.jpg",
                            Student_code = "StudentAkDZMkqg"
                        },
                        new
                        {
                            Id = 44,
                            Address = "409 Weber Spring, Satterfieldberg, Belgium",
                            City = "East Pietro",
                            DateOfBirth = new DateTime(2022, 10, 14, 5, 37, 16, 731, DateTimeKind.Local).AddTicks(2174),
                            Email = "Eveline56@gmail.com",
                            FirstName = "Eveline",
                            FullName = "Eveline Mosciski",
                            Gender = false,
                            LastName = "Mosciski",
                            Phone = "1-639-481-6432 x3639",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1015.jpg",
                            Student_code = "StudentM6yus3Rr"
                        },
                        new
                        {
                            Id = 45,
                            Address = "6142 Emard Flat, Boyleborough, Burundi",
                            City = "Adelatown",
                            DateOfBirth = new DateTime(2023, 1, 6, 2, 32, 23, 499, DateTimeKind.Local).AddTicks(8588),
                            Email = "Ruthie66@hotmail.com",
                            FirstName = "Ruthie",
                            FullName = "Ruthie Kassulke",
                            Gender = false,
                            LastName = "Kassulke",
                            Phone = "1-667-357-7420",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/205.jpg",
                            Student_code = "StudentfWh4rYQc"
                        },
                        new
                        {
                            Id = 46,
                            Address = "60767 Beer Springs, East Fern, Armenia",
                            City = "West Anya",
                            DateOfBirth = new DateTime(2023, 6, 10, 9, 25, 44, 983, DateTimeKind.Local).AddTicks(1691),
                            Email = "Melisa54@hotmail.com",
                            FirstName = "Melisa",
                            FullName = "Melisa Oberbrunner",
                            Gender = true,
                            LastName = "Oberbrunner",
                            Phone = "360.760.8911 x6676",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1149.jpg",
                            Student_code = "StudentFd3FgU9C"
                        },
                        new
                        {
                            Id = 47,
                            Address = "8106 Schowalter Rue, West Colemanbury, Cuba",
                            City = "Tatestad",
                            DateOfBirth = new DateTime(2023, 5, 12, 3, 29, 50, 132, DateTimeKind.Local).AddTicks(1104),
                            Email = "Eriberto.Wisozk41@yahoo.com",
                            FirstName = "Eriberto",
                            FullName = "Eriberto Wisozk",
                            Gender = true,
                            LastName = "Wisozk",
                            Phone = "707-607-4601",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/285.jpg",
                            Student_code = "StudentIGhiOkL7"
                        },
                        new
                        {
                            Id = 48,
                            Address = "1280 Ziemann Coves, East Betsy, Bahrain",
                            City = "New Kiera",
                            DateOfBirth = new DateTime(2023, 5, 24, 18, 33, 36, 32, DateTimeKind.Local).AddTicks(1844),
                            Email = "Alysa_King95@gmail.com",
                            FirstName = "Alysa",
                            FullName = "Alysa King",
                            Gender = false,
                            LastName = "King",
                            Phone = "(632) 749-5888 x963",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/202.jpg",
                            Student_code = "StudentgHiQ9rEx"
                        },
                        new
                        {
                            Id = 49,
                            Address = "39937 Murray Road, Lewisport, Brazil",
                            City = "New Mario",
                            DateOfBirth = new DateTime(2022, 11, 2, 7, 6, 48, 467, DateTimeKind.Local).AddTicks(7691),
                            Email = "Andres85@gmail.com",
                            FirstName = "Andres",
                            FullName = "Andres Towne",
                            Gender = false,
                            LastName = "Towne",
                            Phone = "1-461-308-3662 x10119",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/546.jpg",
                            Student_code = "Studentdg1LCjUX"
                        },
                        new
                        {
                            Id = 50,
                            Address = "141 Payton Plains, Lydiaport, Argentina",
                            City = "Ubaldohaven",
                            DateOfBirth = new DateTime(2022, 10, 21, 17, 43, 44, 849, DateTimeKind.Local).AddTicks(6823),
                            Email = "Freddie.OConner@yahoo.com",
                            FirstName = "Freddie",
                            FullName = "Freddie O'Conner",
                            Gender = true,
                            LastName = "O'Conner",
                            Phone = "644.524.2705 x770",
                            Photo = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/587.jpg",
                            Student_code = "Student9s9Qt7We"
                        });
                });

            modelBuilder.Entity("LibraryModels.Comments", b =>
                {
                    b.HasOne("LibraryModels.News", "News")
                        .WithMany("Comments")
                        .HasForeignKey("NewId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("LibraryModels.Discussion", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Facilities")
                        .WithMany("Discussion")
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryModels.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Users", "Users")
                        .WithMany("Discussions")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facilities");

                    b.Navigation("Ticket");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryModels.Ticket", b =>
                {
                    b.HasOne("LibraryModels.Facilities", "Category")
                        .WithMany("Ticket")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LibraryModels.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LibraryModels.Priority", null)
                        .WithMany("Ticket")
                        .HasForeignKey("PriorityId");

                    b.HasOne("LibraryModels.Users", "Supporter")
                        .WithMany()
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LibraryModels.TicketStatus", "TicketStatus")
                        .WithMany("Ticket")
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("LibraryModels.Users", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsersId");

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Supporter");

                    b.Navigation("TicketStatus");
                });

            modelBuilder.Entity("LibraryModels.UserInfo", b =>
                {
                    b.HasOne("LibraryModels.Users", "users")
                        .WithOne("userInfo")
                        .HasForeignKey("LibraryModels.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("LibraryModels.Facilities", b =>
                {
                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.News", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("LibraryModels.Priority", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.TicketStatus", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LibraryModels.Users", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Tickets");

                    b.Navigation("userInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
