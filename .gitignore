# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.pdb
*.dll.config
*.cache
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.suo
*.user
*.userosscache
*.sln.docstates

# Dependency directories #
##########################
packages/
node_modules/

# MSTest test Results #
######################
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# Visual Studio code coverage results #
######################################
*.coverage
*.coveragexml

# Visual Studio generated files #
#################################
*_i.c
*_p.c
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.suo
*.user
*.userosscache
*.sln.docstates
*.testsettings
*.testhost
*.testrunconfig
*.testsettings
*.trx
*.vspx
*.vsp
*.vspx.*

# Visual Studio 2015 cache/options directory #
##############################################
.vs/

# Resharper specific
######################
*_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# GhostDoc plugin setting file
##############################
*.GhostDoc.xml

# NCrunch
##########
*.ncrunch*
.*crunch*.local.xml

# Installshield output folder
##############################
[Ee]xpress/
*.InstallLog
*.cab
*.msi
*.msm
*.msp

# Web workbench (sass)
######################
.sass-cache/

# DocProject is a documentation generator add-in
##################################################
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
######################
publish/

# Publish Web Output
####################
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Build Output
##############################
csx/
*.build.csdef

# Microsoft Azure Emulator
##########################
ecf/
rcf/

# Windows Store app package directory
####################################
AppPackages/

# Others
########
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# RIA/Silverlight projects
#######################
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
####################
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
##################
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
###############################
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
#################
FakesAssemblies/

# GhostDoc plugin setting file
##############################
*.GhostDoc.xml

# Local History for Visual Studio
###############################
.localhistory/

# JetBrains Rider
#################
.idea/
*.sln.iml
*.ipr
*.iws

# CodeRush
###############
.cr/

# Python Tools for Visual Studio (PTVS)
########################################
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
########################################
# tools/**
# !tools/packages.config

# Paket dependency manager
##########################
.paket/paket.exe
.paket/paket.bootstrapper.exe
.paket/paket.targets
.paket/FAKE.exe

# FAKE - F# Make
####################
.fake/

# JetBrains Rider
#################
.idea/

# Xamarin-specific
##################
*.apk
*.ap_
*.aab
*.ipa
*.msi
<<<<<<< HEAD
*.n
=======
*.n
WebApp/.DS_Store
>>>>>>> Viet
